{
  "components/data-display-examples/accordion-examples.tsx#BasicAccordionExample": {
    "path": "components/data-display-examples/accordion-examples.tsx",
    "functionName": "BasicAccordionExample",
    "extractedCode": {
      "imports": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";",
      "function": "function BasicAccordionExample() {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern and uses semantic HTML.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It comes with default styles that match your theme and can be\n          customized.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It&apos;s animated by default, but you can disable it if you\n          prefer.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}",
      "full": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";\nfunction BasicAccordionExample() {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern and uses semantic HTML.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It comes with default styles that match your theme and can be\n          customized.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It&apos;s animated by default, but you can disable it if you\n          prefer.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}"
    }
  },
  "components/data-display-examples/accordion-examples.tsx#MultipleAccordionExample": {
    "path": "components/data-display-examples/accordion-examples.tsx",
    "functionName": "MultipleAccordionExample",
    "extractedCode": {
      "imports": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";",
      "function": "function MultipleAccordionExample() {\n  return (\n    <Accordion type=\"multiple\" className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Getting Started</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Learn the basics of our platform with these essential steps:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Create your account</li>\n              <li>Complete your profile</li>\n              <li>Set up your preferences</li>\n              <li>Explore the dashboard</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Account Settings</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Manage your account settings including:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Profile information</li>\n              <li>Privacy settings</li>\n              <li>Notification preferences</li>\n              <li>Security options</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Billing & Payments</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Handle your billing and payment information:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>View current plan</li>\n              <li>Update payment methods</li>\n              <li>Download invoices</li>\n              <li>Manage subscriptions</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}",
      "full": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";\nfunction MultipleAccordionExample() {\n  return (\n    <Accordion type=\"multiple\" className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Getting Started</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Learn the basics of our platform with these essential steps:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Create your account</li>\n              <li>Complete your profile</li>\n              <li>Set up your preferences</li>\n              <li>Explore the dashboard</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Account Settings</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Manage your account settings including:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Profile information</li>\n              <li>Privacy settings</li>\n              <li>Notification preferences</li>\n              <li>Security options</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Billing & Payments</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>Handle your billing and payment information:</p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>View current plan</li>\n              <li>Update payment methods</li>\n              <li>Download invoices</li>\n              <li>Manage subscriptions</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}"
    }
  },
  "components/data-display-examples/accordion-examples.tsx#DisabledAccordionExample": {
    "path": "components/data-display-examples/accordion-examples.tsx",
    "functionName": "DisabledAccordionExample",
    "extractedCode": {
      "imports": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";",
      "function": "function DisabledAccordionExample() {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Available Section</AccordionTrigger>\n        <AccordionContent>\n          This section is fully interactive and can be expanded or collapsed.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\" disabled>\n        <AccordionTrigger>Disabled Section</AccordionTrigger>\n        <AccordionContent>\n          This content won&apos;t be accessible because the item is disabled.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Another Available Section</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>\n              This section is also interactive. Disabled items are useful for:\n            </p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Premium features requiring upgrades</li>\n              <li>Temporarily unavailable content</li>\n              <li>Conditional access based on user permissions</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}",
      "full": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@helgadigitals/vera-ui\";\nfunction DisabledAccordionExample() {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Available Section</AccordionTrigger>\n        <AccordionContent>\n          This section is fully interactive and can be expanded or collapsed.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\" disabled>\n        <AccordionTrigger>Disabled Section</AccordionTrigger>\n        <AccordionContent>\n          This content won&apos;t be accessible because the item is disabled.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Another Available Section</AccordionTrigger>\n        <AccordionContent>\n          <div className=\"space-y-2\">\n            <p>\n              This section is also interactive. Disabled items are useful for:\n            </p>\n            <ul className=\"list-disc ml-4 space-y-1\">\n              <li>Premium features requiring upgrades</li>\n              <li>Temporarily unavailable content</li>\n              <li>Conditional access based on user permissions</li>\n            </ul>\n          </div>\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}"
    }
  },
  "components/data-display-examples/alert-examples.tsx#InteractiveAlertsExample": {
    "path": "components/data-display-examples/alert-examples.tsx",
    "functionName": "InteractiveAlertsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";",
      "function": "function InteractiveAlertsExample() {\n  const [showAlert1, setShowAlert1] = useState(true);\n  const [showAlert2, setShowAlert2] = useState(true);\n\n  return (\n    <div className=\"space-y-4\">\n      {showAlert1 && (\n        <Alert className=\"border-yellow-200 bg-yellow-50 text-yellow-800\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <div className=\"flex-1\">\n            <AlertTitle>Storage Almost Full</AlertTitle>\n            <AlertDescription>\n              You&apos;ve used 90% of your storage space. Consider upgrading your plan.\n            </AlertDescription>\n          </div>\n          <div className=\"flex items-start space-x-2 ml-4\">\n            <Button size=\"sm\" variant=\"outline\" className=\"h-8\">\n              Upgrade\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0\"\n              onClick={() => setShowAlert1(false)}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </Alert>\n      )}\n\n      {showAlert2 && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <div className=\"flex-1\">\n            <AlertTitle>Payment Failed</AlertTitle>\n            <AlertDescription>\n              We couldn&apos;t process your payment. Please update your payment method.\n            </AlertDescription>\n          </div>\n          <div className=\"flex items-start space-x-2 ml-4\">\n            <Button size=\"sm\" variant=\"outline\" className=\"h-8 bg-white text-red-600 border-red-300 hover:bg-red-50\">\n              Update Payment\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0 text-red-600 hover:bg-red-100\"\n              onClick={() => setShowAlert2(false)}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </Alert>\n      )}\n\n      {!showAlert1 && !showAlert2 && (\n        <div className=\"text-center py-8\">\n          <p className=\"text-muted-foreground\">All alerts dismissed</p>\n          <Button\n            variant=\"outline\"\n            className=\"mt-2\"\n            onClick={() => {\n              setShowAlert1(true);\n              setShowAlert2(true);\n            }}\n          >\n            Show Alerts Again\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}",
      "full": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";\nfunction InteractiveAlertsExample() {\n  const [showAlert1, setShowAlert1] = useState(true);\n  const [showAlert2, setShowAlert2] = useState(true);\n\n  return (\n    <div className=\"space-y-4\">\n      {showAlert1 && (\n        <Alert className=\"border-yellow-200 bg-yellow-50 text-yellow-800\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <div className=\"flex-1\">\n            <AlertTitle>Storage Almost Full</AlertTitle>\n            <AlertDescription>\n              You&apos;ve used 90% of your storage space. Consider upgrading your plan.\n            </AlertDescription>\n          </div>\n          <div className=\"flex items-start space-x-2 ml-4\">\n            <Button size=\"sm\" variant=\"outline\" className=\"h-8\">\n              Upgrade\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0\"\n              onClick={() => setShowAlert1(false)}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </Alert>\n      )}\n\n      {showAlert2 && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <div className=\"flex-1\">\n            <AlertTitle>Payment Failed</AlertTitle>\n            <AlertDescription>\n              We couldn&apos;t process your payment. Please update your payment method.\n            </AlertDescription>\n          </div>\n          <div className=\"flex items-start space-x-2 ml-4\">\n            <Button size=\"sm\" variant=\"outline\" className=\"h-8 bg-white text-red-600 border-red-300 hover:bg-red-50\">\n              Update Payment\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0 text-red-600 hover:bg-red-100\"\n              onClick={() => setShowAlert2(false)}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </Alert>\n      )}\n\n      {!showAlert1 && !showAlert2 && (\n        <div className=\"text-center py-8\">\n          <p className=\"text-muted-foreground\">All alerts dismissed</p>\n          <Button\n            variant=\"outline\"\n            className=\"mt-2\"\n            onClick={() => {\n              setShowAlert1(true);\n              setShowAlert2(true);\n            }}\n          >\n            Show Alerts Again\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/alert-examples.tsx#StatusNotificationsExample": {
    "path": "components/data-display-examples/alert-examples.tsx",
    "functionName": "StatusNotificationsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";",
      "function": "function StatusNotificationsExample() {\n  return (\n    <div className=\"space-y-4\">\n      {/* Processing */}\n      <Alert>\n        <Loader2 className=\"h-4 w-4 animate-spin\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Processing Upload\n          <Badge variant=\"secondary\">In Progress</Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your file is being processed. This may take a few minutes.\n        </AlertDescription>\n      </Alert>\n\n      {/* Pending */}\n      <Alert className=\"border-blue-200 bg-blue-50 text-blue-800\">\n        <Clock className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Review Pending\n          <Badge variant=\"outline\" className=\"border-blue-300 text-blue-700\">\n            Pending\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your submission is awaiting review from the moderation team.\n        </AlertDescription>\n      </Alert>\n\n      {/* Success */}\n      <Alert className=\"border-green-200 bg-green-50 text-green-800\">\n        <CheckCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Deployment Successful\n          <Badge variant=\"outline\" className=\"border-green-300 text-green-700\">\n            Complete\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your application has been deployed to production successfully.\n        </AlertDescription>\n      </Alert>\n\n      {/* Warning */}\n      <Alert className=\"border-orange-200 bg-orange-50 text-orange-800\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          High Memory Usage\n          <Badge variant=\"outline\" className=\"border-orange-300 text-orange-700\">\n            Warning\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your application is using 85% of available memory. Consider scaling up.\n        </AlertDescription>\n      </Alert>\n\n      {/* Error */}\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Backup Failed\n          <Badge variant=\"outline\" className=\"border-red-300 text-red-700 bg-red-100\">\n            Failed\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          The scheduled backup could not be completed. Check system logs for details.\n        </AlertDescription>\n      </Alert>\n    </div>\n  );\n}",
      "full": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";\nfunction StatusNotificationsExample() {\n  return (\n    <div className=\"space-y-4\">\n      {/* Processing */}\n      <Alert>\n        <Loader2 className=\"h-4 w-4 animate-spin\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Processing Upload\n          <Badge variant=\"secondary\">In Progress</Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your file is being processed. This may take a few minutes.\n        </AlertDescription>\n      </Alert>\n\n      {/* Pending */}\n      <Alert className=\"border-blue-200 bg-blue-50 text-blue-800\">\n        <Clock className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Review Pending\n          <Badge variant=\"outline\" className=\"border-blue-300 text-blue-700\">\n            Pending\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your submission is awaiting review from the moderation team.\n        </AlertDescription>\n      </Alert>\n\n      {/* Success */}\n      <Alert className=\"border-green-200 bg-green-50 text-green-800\">\n        <CheckCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Deployment Successful\n          <Badge variant=\"outline\" className=\"border-green-300 text-green-700\">\n            Complete\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your application has been deployed to production successfully.\n        </AlertDescription>\n      </Alert>\n\n      {/* Warning */}\n      <Alert className=\"border-orange-200 bg-orange-50 text-orange-800\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          High Memory Usage\n          <Badge variant=\"outline\" className=\"border-orange-300 text-orange-700\">\n            Warning\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          Your application is using 85% of available memory. Consider scaling up.\n        </AlertDescription>\n      </Alert>\n\n      {/* Error */}\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle className=\"flex items-center gap-2\">\n          Backup Failed\n          <Badge variant=\"outline\" className=\"border-red-300 text-red-700 bg-red-100\">\n            Failed\n          </Badge>\n        </AlertTitle>\n        <AlertDescription>\n          The scheduled backup could not be completed. Check system logs for details.\n        </AlertDescription>\n      </Alert>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/alert-examples.tsx#FormValidationExample": {
    "path": "components/data-display-examples/alert-examples.tsx",
    "functionName": "FormValidationExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";",
      "function": "function FormValidationExample() {\n  return (\n    <div className=\"space-y-6 max-w-md\">\n      <div className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium mb-1\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            className=\"w-full px-3 py-2 border border-red-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n          />\n        </div>\n\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Please enter a valid email address.\n          </AlertDescription>\n        </Alert>\n\n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium mb-1\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            className=\"w-full px-3 py-2 border border-green-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n          />\n        </div>\n\n        <Alert className=\"border-green-200 bg-green-50 text-green-800\">\n          <CheckCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Password meets all security requirements.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Form Validation</AlertTitle>\n        <AlertDescription>\n          Please fix the errors above before submitting the form.\n        </AlertDescription>\n      </Alert>\n\n      <Button className=\"w-full\" disabled>\n        Submit Form\n      </Button>\n    </div>\n  );\n}",
      "full": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";\nfunction FormValidationExample() {\n  return (\n    <div className=\"space-y-6 max-w-md\">\n      <div className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium mb-1\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            className=\"w-full px-3 py-2 border border-red-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n          />\n        </div>\n\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Please enter a valid email address.\n          </AlertDescription>\n        </Alert>\n\n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium mb-1\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            className=\"w-full px-3 py-2 border border-green-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n          />\n        </div>\n\n        <Alert className=\"border-green-200 bg-green-50 text-green-800\">\n          <CheckCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Password meets all security requirements.\n          </AlertDescription>\n        </Alert>\n      </div>\n\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Form Validation</AlertTitle>\n        <AlertDescription>\n          Please fix the errors above before submitting the form.\n        </AlertDescription>\n      </Alert>\n\n      <Button className=\"w-full\" disabled>\n        Submit Form\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/alert-examples.tsx#SystemAnnouncementsExample": {
    "path": "components/data-display-examples/alert-examples.tsx",
    "functionName": "SystemAnnouncementsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";",
      "function": "function SystemAnnouncementsExample() {\n  return (\n    <div className=\"space-y-4\">\n      {/* Feature Announcement */}\n      <Alert className=\"border-purple-200 bg-purple-50 text-purple-800\">\n        <Star className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>New Feature: Dark Mode</AlertTitle>\n            <AlertDescription>\n              We&apos;ve added dark mode support! Toggle it in your profile settings.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4 border-purple-300 text-purple-700 hover:bg-purple-100\">\n            Try It Now\n          </Button>\n        </div>\n      </Alert>\n\n      {/* Security Update */}\n      <Alert className=\"border-blue-200 bg-blue-50 text-blue-800\">\n        <Shield className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Security Update Available</AlertTitle>\n            <AlertDescription>\n              A critical security update is available. Please update your application.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4 border-blue-300 text-blue-700 hover:bg-blue-100\">\n            Update Now\n          </Button>\n        </div>\n      </Alert>\n\n      {/* Maintenance Notice */}\n      <Alert className=\"border-yellow-200 bg-yellow-50 text-yellow-800\">\n        <Calendar className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Scheduled Maintenance</AlertTitle>\n            <AlertDescription>\n              System maintenance is scheduled for March 15, 2024 from 2-4 AM EST.\n            </AlertDescription>\n          </div>\n          <Button \n            size=\"sm\" \n            variant=\"outline\" \n            className=\"ml-4 border-yellow-300 text-yellow-700 hover:bg-yellow-100\"\n          >\n            <ExternalLink className=\"h-3 w-3 mr-1\" />\n            Details\n          </Button>\n        </div>\n      </Alert>\n\n      {/* General Announcement */}\n      <Alert>\n        <Megaphone className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Join Our Webinar</AlertTitle>\n            <AlertDescription>\n              Learn about our latest features in our upcoming webinar on March 20th.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4\">\n            Register\n          </Button>\n        </div>\n      </Alert>\n    </div>\n  );\n}",
      "full": "import { useState } from \"react\";\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n  Button,\n  Badge,\n} from \"@helgadigitals/vera-ui\";\nimport { \n  AlertTriangle, \n  X, \n  Clock, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Megaphone,\n  Star,\n  Shield,\n  Calendar,\n  ExternalLink\n} from \"lucide-react\";\nfunction SystemAnnouncementsExample() {\n  return (\n    <div className=\"space-y-4\">\n      {/* Feature Announcement */}\n      <Alert className=\"border-purple-200 bg-purple-50 text-purple-800\">\n        <Star className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>New Feature: Dark Mode</AlertTitle>\n            <AlertDescription>\n              We&apos;ve added dark mode support! Toggle it in your profile settings.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4 border-purple-300 text-purple-700 hover:bg-purple-100\">\n            Try It Now\n          </Button>\n        </div>\n      </Alert>\n\n      {/* Security Update */}\n      <Alert className=\"border-blue-200 bg-blue-50 text-blue-800\">\n        <Shield className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Security Update Available</AlertTitle>\n            <AlertDescription>\n              A critical security update is available. Please update your application.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4 border-blue-300 text-blue-700 hover:bg-blue-100\">\n            Update Now\n          </Button>\n        </div>\n      </Alert>\n\n      {/* Maintenance Notice */}\n      <Alert className=\"border-yellow-200 bg-yellow-50 text-yellow-800\">\n        <Calendar className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Scheduled Maintenance</AlertTitle>\n            <AlertDescription>\n              System maintenance is scheduled for March 15, 2024 from 2-4 AM EST.\n            </AlertDescription>\n          </div>\n          <Button \n            size=\"sm\" \n            variant=\"outline\" \n            className=\"ml-4 border-yellow-300 text-yellow-700 hover:bg-yellow-100\"\n          >\n            <ExternalLink className=\"h-3 w-3 mr-1\" />\n            Details\n          </Button>\n        </div>\n      </Alert>\n\n      {/* General Announcement */}\n      <Alert>\n        <Megaphone className=\"h-4 w-4\" />\n        <div className=\"col-start-2 flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <AlertTitle>Join Our Webinar</AlertTitle>\n            <AlertDescription>\n              Learn about our latest features in our upcoming webinar on March 20th.\n            </AlertDescription>\n          </div>\n          <Button size=\"sm\" variant=\"outline\" className=\"ml-4\">\n            Register\n          </Button>\n        </div>\n      </Alert>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#BasicAvatarExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "BasicAvatarExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function BasicAvatarExample() {\n  return (\n    <div className=\"flex space-x-4\">\n      <Avatar>\n        <AvatarFallback>JD</AvatarFallback>\n      </Avatar>\n      \n      <Avatar>\n        <AvatarFallback>JS</AvatarFallback>\n      </Avatar>\n      \n      <Avatar>\n        <AvatarFallback>BJ</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction BasicAvatarExample() {\n  return (\n    <div className=\"flex space-x-4\">\n      <Avatar>\n        <AvatarFallback>JD</AvatarFallback>\n      </Avatar>\n      \n      <Avatar>\n        <AvatarFallback>JS</AvatarFallback>\n      </Avatar>\n      \n      <Avatar>\n        <AvatarFallback>BJ</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#AvatarSizesExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "AvatarSizesExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function AvatarSizesExample() {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Avatar className=\"h-6 w-6\">\n        <AvatarFallback className=\"text-xs\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-8 w-8\">\n        <AvatarFallback className=\"text-sm\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-10 w-10\">\n        <AvatarFallback>U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-12 w-12\">\n        <AvatarFallback className=\"text-lg\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-16 w-16\">\n        <AvatarFallback className=\"text-xl\">U</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction AvatarSizesExample() {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Avatar className=\"h-6 w-6\">\n        <AvatarFallback className=\"text-xs\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-8 w-8\">\n        <AvatarFallback className=\"text-sm\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-10 w-10\">\n        <AvatarFallback>U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-12 w-12\">\n        <AvatarFallback className=\"text-lg\">U</AvatarFallback>\n      </Avatar>\n      \n      <Avatar className=\"h-16 w-16\">\n        <AvatarFallback className=\"text-xl\">U</AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#AvatarFallbackExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "AvatarFallbackExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function AvatarFallbackExample() {\n  return (\n    <div className=\"flex space-x-4\">\n      {/* Basic fallback with initials */}\n      <Avatar>\n        <AvatarFallback>JD</AvatarFallback>\n      </Avatar>\n      \n      {/* Another set of initials */}\n      <Avatar>\n        <AvatarFallback>BK</AvatarFallback>\n      </Avatar>\n      \n      {/* Simple initials */}\n      <Avatar>\n        <AvatarFallback>JS</AvatarFallback>\n      </Avatar>\n      \n      {/* Custom fallback with icon */}\n      <Avatar>\n        <AvatarFallback>\n          <User className=\"h-4 w-4\" />\n        </AvatarFallback>\n      </Avatar>\n      \n      {/* Custom colored fallback */}\n      <Avatar>\n        <AvatarFallback className=\"bg-blue-500 text-white\">\n          AB\n        </AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction AvatarFallbackExample() {\n  return (\n    <div className=\"flex space-x-4\">\n      {/* Basic fallback with initials */}\n      <Avatar>\n        <AvatarFallback>JD</AvatarFallback>\n      </Avatar>\n      \n      {/* Another set of initials */}\n      <Avatar>\n        <AvatarFallback>BK</AvatarFallback>\n      </Avatar>\n      \n      {/* Simple initials */}\n      <Avatar>\n        <AvatarFallback>JS</AvatarFallback>\n      </Avatar>\n      \n      {/* Custom fallback with icon */}\n      <Avatar>\n        <AvatarFallback>\n          <User className=\"h-4 w-4\" />\n        </AvatarFallback>\n      </Avatar>\n      \n      {/* Custom colored fallback */}\n      <Avatar>\n        <AvatarFallback className=\"bg-blue-500 text-white\">\n          AB\n        </AvatarFallback>\n      </Avatar>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#AvatarGroupExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "AvatarGroupExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function AvatarGroupExample() {\n  const users = [\n    { name: \"John Doe\" },\n    { name: \"Jane Smith\" },\n    { name: \"Bob Johnson\" },\n    { name: \"Alice Williams\" },\n    { name: \"Charlie Brown\" },\n  ];\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  const displayUsers = users.slice(0, 4);\n  const remainingCount = Math.max(0, users.length - 4);\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Overlapping Avatars</h4>\n        <div className=\"flex -space-x-2\">\n          {displayUsers.map((user, index) => (\n            <Avatar key={index} className=\"border-2 border-white\">\n              <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n          ))}\n          {remainingCount > 0 && (\n            <Avatar className=\"border-2 border-white\">\n              <AvatarFallback className=\"bg-muted\">\n                +{remainingCount}\n              </AvatarFallback>\n            </Avatar>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Spaced Avatars</h4>\n        <div className=\"flex space-x-2\">\n          {displayUsers.map((user, index) => (\n            <Avatar key={index} className=\"h-8 w-8\">\n              <AvatarFallback className=\"text-xs\">{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n          ))}\n          {remainingCount > 0 && (\n            <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-muted text-xs font-medium\">\n              +{remainingCount}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction AvatarGroupExample() {\n  const users = [\n    { name: \"John Doe\" },\n    { name: \"Jane Smith\" },\n    { name: \"Bob Johnson\" },\n    { name: \"Alice Williams\" },\n    { name: \"Charlie Brown\" },\n  ];\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  const displayUsers = users.slice(0, 4);\n  const remainingCount = Math.max(0, users.length - 4);\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Overlapping Avatars</h4>\n        <div className=\"flex -space-x-2\">\n          {displayUsers.map((user, index) => (\n            <Avatar key={index} className=\"border-2 border-white\">\n              <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n          ))}\n          {remainingCount > 0 && (\n            <Avatar className=\"border-2 border-white\">\n              <AvatarFallback className=\"bg-muted\">\n                +{remainingCount}\n              </AvatarFallback>\n            </Avatar>\n          )}\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-2\">Spaced Avatars</h4>\n        <div className=\"flex space-x-2\">\n          {displayUsers.map((user, index) => (\n            <Avatar key={index} className=\"h-8 w-8\">\n              <AvatarFallback className=\"text-xs\">{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n          ))}\n          {remainingCount > 0 && (\n            <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-muted text-xs font-medium\">\n              +{remainingCount}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#UserListExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "UserListExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function UserListExample() {\n  const users = [\n    {\n      id: 1,\n      name: \"John Doe\",\n      email: \"john@example.com\",\n      status: \"online\",\n      role: \"Admin\"\n    },\n    {\n      id: 2,\n      name: \"Jane Smith\",\n      email: \"jane@example.com\",\n      status: \"offline\",\n      role: \"Editor\"\n    },\n    {\n      id: 3,\n      name: \"Bob Johnson\",\n      email: \"bob@example.com\",\n      status: \"away\",\n      role: \"User\"\n    },\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'online': return 'bg-green-500';\n      case 'away': return 'bg-yellow-500';\n      case 'offline': return 'bg-gray-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {users.map((user) => (\n        <div key={user.id} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\n          <div className=\"relative\">\n            <Avatar>\n              <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n            <div className={`absolute -bottom-1 -right-1 h-3 w-3 rounded-full border-2 border-white ${getStatusColor(user.status)}`} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium text-gray-900 truncate\">\n              {user.name}\n            </p>\n            <p className=\"text-sm text-gray-500 truncate\">\n              {user.email}\n            </p>\n          </div>\n          <Badge variant={user.role === 'Admin' ? 'default' : 'secondary'}>\n            {user.role}\n          </Badge>\n        </div>\n      ))}\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction UserListExample() {\n  const users = [\n    {\n      id: 1,\n      name: \"John Doe\",\n      email: \"john@example.com\",\n      status: \"online\",\n      role: \"Admin\"\n    },\n    {\n      id: 2,\n      name: \"Jane Smith\",\n      email: \"jane@example.com\",\n      status: \"offline\",\n      role: \"Editor\"\n    },\n    {\n      id: 3,\n      name: \"Bob Johnson\",\n      email: \"bob@example.com\",\n      status: \"away\",\n      role: \"User\"\n    },\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'online': return 'bg-green-500';\n      case 'away': return 'bg-yellow-500';\n      case 'offline': return 'bg-gray-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const getInitials = (name: string) => {\n    return name.split(' ').map(n => n[0]).join('').toUpperCase();\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {users.map((user) => (\n        <div key={user.id} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\n          <div className=\"relative\">\n            <Avatar>\n              <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n            </Avatar>\n            <div className={`absolute -bottom-1 -right-1 h-3 w-3 rounded-full border-2 border-white ${getStatusColor(user.status)}`} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium text-gray-900 truncate\">\n              {user.name}\n            </p>\n            <p className=\"text-sm text-gray-500 truncate\">\n              {user.email}\n            </p>\n          </div>\n          <Badge variant={user.role === 'Admin' ? 'default' : 'secondary'}>\n            {user.role}\n          </Badge>\n        </div>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/avatar-examples.tsx#ProfileHeaderExample": {
    "path": "components/data-display-examples/avatar-examples.tsx",
    "functionName": "ProfileHeaderExample",
    "extractedCode": {
      "imports": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";",
      "function": "function ProfileHeaderExample() {\n  return (\n    <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-sm border p-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-start space-y-4 sm:space-y-0 sm:space-x-6\">\n        <Avatar className=\"h-24 w-24 mx-auto sm:mx-0\">\n          <AvatarFallback className=\"text-2xl\">SJ</AvatarFallback>\n        </Avatar>\n        \n        <div className=\"flex-1 text-center sm:text-left\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Sarah Johnson</h1>\n              <p className=\"text-gray-600\">Senior Frontend Developer</p>\n            </div>\n            <div className=\"mt-3 sm:mt-0 flex justify-center sm:justify-end space-x-2\">\n              <Button variant=\"outline\" size=\"sm\">Message</Button>\n              <Button size=\"sm\">Follow</Button>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-4 text-sm text-gray-600\">\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              San Francisco, CA\n            </div>\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              Joined March 2020\n            </div>\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <Mail className=\"h-4 w-4 mr-1\" />\n              sarah@example.com\n            </div>\n          </div>\n          \n          <div className=\"mt-4 flex flex-wrap justify-center sm:justify-start gap-2\">\n            <Badge variant=\"secondary\">React</Badge>\n            <Badge variant=\"secondary\">TypeScript</Badge>\n            <Badge variant=\"secondary\">Node.js</Badge>\n            <Badge variant=\"secondary\">GraphQL</Badge>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Avatar, AvatarFallback, AvatarImage, Badge, Button } from \"@helgadigitals/vera-ui\";\nimport { MapPin, Calendar, Mail, User } from \"lucide-react\";\nfunction ProfileHeaderExample() {\n  return (\n    <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-sm border p-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-start space-y-4 sm:space-y-0 sm:space-x-6\">\n        <Avatar className=\"h-24 w-24 mx-auto sm:mx-0\">\n          <AvatarFallback className=\"text-2xl\">SJ</AvatarFallback>\n        </Avatar>\n        \n        <div className=\"flex-1 text-center sm:text-left\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Sarah Johnson</h1>\n              <p className=\"text-gray-600\">Senior Frontend Developer</p>\n            </div>\n            <div className=\"mt-3 sm:mt-0 flex justify-center sm:justify-end space-x-2\">\n              <Button variant=\"outline\" size=\"sm\">Message</Button>\n              <Button size=\"sm\">Follow</Button>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-4 text-sm text-gray-600\">\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              San Francisco, CA\n            </div>\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              Joined March 2020\n            </div>\n            <div className=\"flex items-center justify-center sm:justify-start\">\n              <Mail className=\"h-4 w-4 mr-1\" />\n              sarah@example.com\n            </div>\n          </div>\n          \n          <div className=\"mt-4 flex flex-wrap justify-center sm:justify-start gap-2\">\n            <Badge variant=\"secondary\">React</Badge>\n            <Badge variant=\"secondary\">TypeScript</Badge>\n            <Badge variant=\"secondary\">Node.js</Badge>\n            <Badge variant=\"secondary\">GraphQL</Badge>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#BasicBadgeExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "BasicBadgeExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function BasicBadgeExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Badge>Default</Badge>\n      <Badge variant=\"secondary\">Secondary</Badge>\n      <Badge variant=\"destructive\">Destructive</Badge>\n      <Badge variant=\"outline\">Outline</Badge>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction BasicBadgeExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Badge>Default</Badge>\n      <Badge variant=\"secondary\">Secondary</Badge>\n      <Badge variant=\"destructive\">Destructive</Badge>\n      <Badge variant=\"outline\">Outline</Badge>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#StatusBadgeExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "StatusBadgeExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function StatusBadgeExample() {\n  const statuses = [\n    { label: \"Active\", variant: \"default\" as const },\n    { label: \"Pending\", variant: \"secondary\" as const },\n    { label: \"Inactive\", variant: \"outline\" as const },\n    { label: \"Error\", variant: \"destructive\" as const },\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">User Status</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {statuses.map((status) => (\n            <Badge key={status.label} variant={status.variant}>\n              {status.label}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Order Status</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge variant=\"outline\">Draft</Badge>\n          <Badge variant=\"secondary\">Processing</Badge>\n          <Badge variant=\"default\">Shipped</Badge>\n          <Badge variant=\"outline\">Delivered</Badge>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction StatusBadgeExample() {\n  const statuses = [\n    { label: \"Active\", variant: \"default\" as const },\n    { label: \"Pending\", variant: \"secondary\" as const },\n    { label: \"Inactive\", variant: \"outline\" as const },\n    { label: \"Error\", variant: \"destructive\" as const },\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">User Status</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {statuses.map((status) => (\n            <Badge key={status.label} variant={status.variant}>\n              {status.label}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Order Status</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge variant=\"outline\">Draft</Badge>\n          <Badge variant=\"secondary\">Processing</Badge>\n          <Badge variant=\"default\">Shipped</Badge>\n          <Badge variant=\"outline\">Delivered</Badge>\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#BadgeWithIconExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "BadgeWithIconExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function BadgeWithIconExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Badge variant=\"default\">\n        <CheckCircle />\n        Completed\n      </Badge>\n      <Badge variant=\"secondary\">\n        <Clock />\n        Pending\n      </Badge>\n      <Badge variant=\"destructive\">\n        <XCircle />\n        Failed\n      </Badge>\n      <Badge variant=\"outline\">\n        <AlertCircle />\n        Warning\n      </Badge>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction BadgeWithIconExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Badge variant=\"default\">\n        <CheckCircle />\n        Completed\n      </Badge>\n      <Badge variant=\"secondary\">\n        <Clock />\n        Pending\n      </Badge>\n      <Badge variant=\"destructive\">\n        <XCircle />\n        Failed\n      </Badge>\n      <Badge variant=\"outline\">\n        <AlertCircle />\n        Warning\n      </Badge>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#CountBadgeExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "CountBadgeExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function CountBadgeExample() {\n  return (\n    <div className=\"flex flex-wrap gap-6\">\n      <div className=\"relative\">\n        <Bell className=\"h-6 w-6\" />\n        <Badge\n          variant=\"destructive\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          3\n        </Badge>\n      </div>\n\n      <div className=\"relative\">\n        <Mail className=\"h-6 w-6\" />\n        <Badge\n          variant=\"default\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          12\n        </Badge>\n      </div>\n\n      <div className=\"relative\">\n        <ShoppingCart className=\"h-6 w-6\" />\n        <Badge\n          variant=\"secondary\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          5\n        </Badge>\n      </div>\n\n      <div className=\"flex items-center gap-1\">\n        <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n        <Badge variant=\"outline\">4.8</Badge>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction CountBadgeExample() {\n  return (\n    <div className=\"flex flex-wrap gap-6\">\n      <div className=\"relative\">\n        <Bell className=\"h-6 w-6\" />\n        <Badge\n          variant=\"destructive\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          3\n        </Badge>\n      </div>\n\n      <div className=\"relative\">\n        <Mail className=\"h-6 w-6\" />\n        <Badge\n          variant=\"default\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          12\n        </Badge>\n      </div>\n\n      <div className=\"relative\">\n        <ShoppingCart className=\"h-6 w-6\" />\n        <Badge\n          variant=\"secondary\"\n          className=\"absolute -top-2 -right-2 h-5 w-5 p-0 flex items-center justify-center text-xs\"\n        >\n          5\n        </Badge>\n      </div>\n\n      <div className=\"flex items-center gap-1\">\n        <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n        <Badge variant=\"outline\">4.8</Badge>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#CustomBadgeExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "CustomBadgeExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function CustomBadgeExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Priority Levels</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge className=\"bg-red-100 text-red-800 hover:bg-red-200\">\n            High Priority\n          </Badge>\n          <Badge className=\"bg-yellow-100 text-yellow-800 hover:bg-yellow-200\">\n            Medium Priority\n          </Badge>\n          <Badge className=\"bg-green-100 text-green-800 hover:bg-green-200\">\n            Low Priority\n          </Badge>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Department Tags</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge className=\"bg-blue-100 text-blue-800\">Engineering</Badge>\n          <Badge className=\"bg-purple-100 text-purple-800\">Design</Badge>\n          <Badge className=\"bg-pink-100 text-pink-800\">Marketing</Badge>\n          <Badge className=\"bg-orange-100 text-orange-800\">Sales</Badge>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction CustomBadgeExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Priority Levels</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge className=\"bg-red-100 text-red-800 hover:bg-red-200\">\n            High Priority\n          </Badge>\n          <Badge className=\"bg-yellow-100 text-yellow-800 hover:bg-yellow-200\">\n            Medium Priority\n          </Badge>\n          <Badge className=\"bg-green-100 text-green-800 hover:bg-green-200\">\n            Low Priority\n          </Badge>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Department Tags</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge className=\"bg-blue-100 text-blue-800\">Engineering</Badge>\n          <Badge className=\"bg-purple-100 text-purple-800\">Design</Badge>\n          <Badge className=\"bg-pink-100 text-pink-800\">Marketing</Badge>\n          <Badge className=\"bg-orange-100 text-orange-800\">Sales</Badge>\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/badge-examples.tsx#InteractiveBadgeExample": {
    "path": "components/data-display-examples/badge-examples.tsx",
    "functionName": "InteractiveBadgeExample",
    "extractedCode": {
      "imports": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";",
      "function": "function InteractiveBadgeExample() {\n  const [tags, setTags] = useState([\n    \"React\",\n    \"TypeScript\",\n    \"Tailwind\",\n    \"Next.js\",\n  ]);\n\n  const removeTag = (tagToRemove: string) => {\n    setTags(tags.filter((tag) => tag !== tagToRemove));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Removable Tags</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {tags.map((tag) => (\n            <Badge key={tag} variant=\"secondary\" className=\"gap-1\">\n              {tag}\n              <button\n                onClick={() => removeTag(tag)}\n                className=\"ml-1 hover:bg-black/10 rounded-full p-0.5\"\n                aria-label={`Remove ${tag} tag`}\n              >\n                <X className=\"h-3 w-3\" />\n              </button>\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Clickable Categories</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge asChild>\n            <button className=\"cursor-pointer hover:opacity-80\">\n              Frontend\n            </button>\n          </Badge>\n          <Badge asChild variant=\"secondary\">\n            <button className=\"cursor-pointer hover:opacity-80\">Backend</button>\n          </Badge>\n          <Badge asChild variant=\"outline\">\n            <button className=\"cursor-pointer hover:opacity-80\">DevOps</button>\n          </Badge>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Badge } from \"@helgadigitals/vera-ui\";\nimport {\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  Clock,\n  Bell,\n  Mail,\n  ShoppingCart,\n  Star,\n  X,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nfunction InteractiveBadgeExample() {\n  const [tags, setTags] = useState([\n    \"React\",\n    \"TypeScript\",\n    \"Tailwind\",\n    \"Next.js\",\n  ]);\n\n  const removeTag = (tagToRemove: string) => {\n    setTags(tags.filter((tag) => tag !== tagToRemove));\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Removable Tags</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {tags.map((tag) => (\n            <Badge key={tag} variant=\"secondary\" className=\"gap-1\">\n              {tag}\n              <button\n                onClick={() => removeTag(tag)}\n                className=\"ml-1 hover:bg-black/10 rounded-full p-0.5\"\n                aria-label={`Remove ${tag} tag`}\n              >\n                <X className=\"h-3 w-3\" />\n              </button>\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium\">Clickable Categories</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge asChild>\n            <button className=\"cursor-pointer hover:opacity-80\">\n              Frontend\n            </button>\n          </Badge>\n          <Badge asChild variant=\"secondary\">\n            <button className=\"cursor-pointer hover:opacity-80\">Backend</button>\n          </Badge>\n          <Badge asChild variant=\"outline\">\n            <button className=\"cursor-pointer hover:opacity-80\">DevOps</button>\n          </Badge>\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#BasicCardExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "BasicCardExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function BasicCardExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Card Title</CardTitle>\n        <CardDescription>\n          Card description goes here. This provides additional context about the card content.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This is the main content area of the card where you can place any information or components.</p>\n      </CardContent>\n    </Card>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction BasicCardExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Card Title</CardTitle>\n        <CardDescription>\n          Card description goes here. This provides additional context about the card content.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <p>This is the main content area of the card where you can place any information or components.</p>\n      </CardContent>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#CardWithFooterExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "CardWithFooterExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function CardWithFooterExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Create Project</CardTitle>\n        <CardDescription>\n          Deploy your new project in one-click.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"name\">Name</label>\n              <input \n                id=\"name\" \n                placeholder=\"Name of your project\" \n                className=\"px-3 py-2 border rounded-md\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"framework\">Framework</label>\n              <select id=\"framework\" className=\"px-3 py-2 border rounded-md\">\n                <option value=\"\">Select</option>\n                <option value=\"next\">Next.js</option>\n                <option value=\"sveltekit\">SvelteKit</option>\n                <option value=\"astro\">Astro</option>\n                <option value=\"nuxt\">Nuxt.js</option>\n              </select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction CardWithFooterExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Create Project</CardTitle>\n        <CardDescription>\n          Deploy your new project in one-click.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"name\">Name</label>\n              <input \n                id=\"name\" \n                placeholder=\"Name of your project\" \n                className=\"px-3 py-2 border rounded-md\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <label htmlFor=\"framework\">Framework</label>\n              <select id=\"framework\" className=\"px-3 py-2 border rounded-md\">\n                <option value=\"\">Select</option>\n                <option value=\"next\">Next.js</option>\n                <option value=\"sveltekit\">SvelteKit</option>\n                <option value=\"astro\">Astro</option>\n                <option value=\"nuxt\">Nuxt.js</option>\n              </select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#CardWithActionExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "CardWithActionExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function CardWithActionExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Repository</CardTitle>\n        <CardDescription>\n          A comprehensive React component library\n        </CardDescription>\n        <CardAction>\n          <Button variant=\"outline\" size=\"sm\">\n            <MoreHorizontal className=\"h-4 w-4\" />\n          </Button>\n        </CardAction>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center\">\n            <Star className=\"mr-1 h-3 w-3\" />\n            1,234\n          </div>\n          <div>TypeScript</div>\n          <div>Updated 2 hours ago</div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction CardWithActionExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Repository</CardTitle>\n        <CardDescription>\n          A comprehensive React component library\n        </CardDescription>\n        <CardAction>\n          <Button variant=\"outline\" size=\"sm\">\n            <MoreHorizontal className=\"h-4 w-4\" />\n          </Button>\n        </CardAction>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center\">\n            <Star className=\"mr-1 h-3 w-3\" />\n            1,234\n          </div>\n          <div>TypeScript</div>\n          <div>Updated 2 hours ago</div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#ProfileCardExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "ProfileCardExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function ProfileCardExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          <Avatar>\n            <AvatarImage src=\"/avatars/01.png\" alt=\"@johndoe\" />\n            <AvatarFallback>JD</AvatarFallback>\n          </Avatar>\n          <div className=\"flex-1\">\n            <CardTitle>John Doe</CardTitle>\n            <CardDescription>Senior Frontend Developer</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Skills</p>\n            <div className=\"flex flex-wrap gap-1 mt-1\">\n              <Badge variant=\"secondary\">React</Badge>\n              <Badge variant=\"secondary\">TypeScript</Badge>\n              <Badge variant=\"secondary\">Node.js</Badge>\n            </div>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Location</p>\n            <p className=\"text-sm\">San Francisco, CA</p>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">View Profile</Button>\n      </CardFooter>\n    </Card>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction ProfileCardExample() {\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          <Avatar>\n            <AvatarImage src=\"/avatars/01.png\" alt=\"@johndoe\" />\n            <AvatarFallback>JD</AvatarFallback>\n          </Avatar>\n          <div className=\"flex-1\">\n            <CardTitle>John Doe</CardTitle>\n            <CardDescription>Senior Frontend Developer</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Skills</p>\n            <div className=\"flex flex-wrap gap-1 mt-1\">\n              <Badge variant=\"secondary\">React</Badge>\n              <Badge variant=\"secondary\">TypeScript</Badge>\n              <Badge variant=\"secondary\">Node.js</Badge>\n            </div>\n          </div>\n          <div>\n            <p className=\"text-sm text-muted-foreground\">Location</p>\n            <p className=\"text-sm\">San Francisco, CA</p>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">View Profile</Button>\n      </CardFooter>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#StatsCardExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "StatsCardExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function StatsCardExample() {\n  const stats = [\n    {\n      title: \"Total Revenue\",\n      value: \"$45,231.89\",\n      description: \"+20.1% from last month\",\n      icon: DollarSign,\n      trend: \"up\"\n    },\n    {\n      title: \"Subscriptions\",\n      value: \"+2350\",\n      description: \"+180.1% from last month\",\n      icon: Users,\n      trend: \"up\"\n    },\n    {\n      title: \"Sales\",\n      value: \"+12,234\",\n      description: \"+19% from last month\",\n      icon: ShoppingCart,\n      trend: \"up\"\n    },\n    {\n      title: \"Active Now\",\n      value: \"+573\",\n      description: \"+201 since last hour\",\n      icon: TrendingUp,\n      trend: \"up\"\n    }\n  ];\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      {stats.map((stat, index) => (\n        <Card key={index}>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              {stat.title}\n            </CardTitle>\n            <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stat.description}\n            </p>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction StatsCardExample() {\n  const stats = [\n    {\n      title: \"Total Revenue\",\n      value: \"$45,231.89\",\n      description: \"+20.1% from last month\",\n      icon: DollarSign,\n      trend: \"up\"\n    },\n    {\n      title: \"Subscriptions\",\n      value: \"+2350\",\n      description: \"+180.1% from last month\",\n      icon: Users,\n      trend: \"up\"\n    },\n    {\n      title: \"Sales\",\n      value: \"+12,234\",\n      description: \"+19% from last month\",\n      icon: ShoppingCart,\n      trend: \"up\"\n    },\n    {\n      title: \"Active Now\",\n      value: \"+573\",\n      description: \"+201 since last hour\",\n      icon: TrendingUp,\n      trend: \"up\"\n    }\n  ];\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      {stats.map((stat, index) => (\n        <Card key={index}>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              {stat.title}\n            </CardTitle>\n            <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stat.description}\n            </p>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#ProductCardExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "ProductCardExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function ProductCardExample() {\n  return (\n    <Card className=\"w-[300px]\">\n      <CardHeader className=\"p-0\">\n        <AspectRatio ratio={16 / 9}>\n          <Image\n            src=\"/api/placeholder/400/225\"\n            alt=\"Product\"\n            width={400}\n            height={225}\n            className=\"rounded-t-lg object-cover w-full h-full\"\n          />\n        </AspectRatio>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between\">\n            <Badge variant=\"secondary\">New</Badge>\n            <Badge variant=\"outline\">Free Shipping</Badge>\n          </div>\n          <CardTitle className=\"text-lg\">Wireless Headphones</CardTitle>\n          <CardDescription>\n            High-quality wireless headphones with noise cancellation and 30-hour battery life.\n          </CardDescription>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-2xl font-bold\">$199.99</span>\n            <span className=\"text-sm text-muted-foreground line-through\">$249.99</span>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"p-4 pt-0\">\n        <Button className=\"w-full\">Add to Cart</Button>\n      </CardFooter>\n    </Card>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction ProductCardExample() {\n  return (\n    <Card className=\"w-[300px]\">\n      <CardHeader className=\"p-0\">\n        <AspectRatio ratio={16 / 9}>\n          <Image\n            src=\"/api/placeholder/400/225\"\n            alt=\"Product\"\n            width={400}\n            height={225}\n            className=\"rounded-t-lg object-cover w-full h-full\"\n          />\n        </AspectRatio>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between\">\n            <Badge variant=\"secondary\">New</Badge>\n            <Badge variant=\"outline\">Free Shipping</Badge>\n          </div>\n          <CardTitle className=\"text-lg\">Wireless Headphones</CardTitle>\n          <CardDescription>\n            High-quality wireless headphones with noise cancellation and 30-hour battery life.\n          </CardDescription>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-2xl font-bold\">$199.99</span>\n            <span className=\"text-sm text-muted-foreground line-through\">$249.99</span>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"p-4 pt-0\">\n        <Button className=\"w-full\">Add to Cart</Button>\n      </CardFooter>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/card-examples.tsx#NotificationCardExample": {
    "path": "components/data-display-examples/card-examples.tsx",
    "functionName": "NotificationCardExample",
    "extractedCode": {
      "imports": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";",
      "function": "function NotificationCardExample() {\n  const notifications = [\n    {\n      title: \"New message\",\n      description: \"You have a new message from Sarah\",\n      time: \"2 minutes ago\",\n      unread: true\n    },\n    {\n      title: \"System update\",\n      description: \"System maintenance scheduled for tonight\",\n      time: \"1 hour ago\",\n      unread: false\n    },\n    {\n      title: \"Payment received\",\n      description: \"Payment of $299.00 has been received\",\n      time: \"3 hours ago\",\n      unread: false\n    }\n  ];\n\n  return (\n    <div className=\"w-[400px] space-y-2\">\n      {notifications.map((notification, index) => (\n        <Card key={index} className={notification.unread ? \"border-l-4 border-l-blue-500\" : \"\"}>\n          <CardHeader className=\"pb-3\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Bell className=\"h-4 w-4\" />\n                <CardTitle className=\"text-sm\">{notification.title}</CardTitle>\n                {notification.unread && (\n                  <Badge variant=\"destructive\" className=\"h-2 w-2 p-0\"></Badge>\n                )}\n              </div>\n              <button \n                className=\"text-muted-foreground hover:text-foreground\" \n                aria-label=\"Dismiss notification\"\n              >\n                <X className=\"h-4 w-4\" />\n              </button>\n            </div>\n            <CardDescription className=\"text-xs text-muted-foreground\">\n              {notification.time}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <p className=\"text-sm\">{notification.description}</p>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}",
      "full": "import {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { AspectRatio } from \"@helgadigitals/vera-ui\";\nimport { TrendingUp, Users, ShoppingCart, DollarSign, MoreHorizontal, Star, Bell, X } from \"lucide-react\";\nimport Image from \"next/image\";\nfunction NotificationCardExample() {\n  const notifications = [\n    {\n      title: \"New message\",\n      description: \"You have a new message from Sarah\",\n      time: \"2 minutes ago\",\n      unread: true\n    },\n    {\n      title: \"System update\",\n      description: \"System maintenance scheduled for tonight\",\n      time: \"1 hour ago\",\n      unread: false\n    },\n    {\n      title: \"Payment received\",\n      description: \"Payment of $299.00 has been received\",\n      time: \"3 hours ago\",\n      unread: false\n    }\n  ];\n\n  return (\n    <div className=\"w-[400px] space-y-2\">\n      {notifications.map((notification, index) => (\n        <Card key={index} className={notification.unread ? \"border-l-4 border-l-blue-500\" : \"\"}>\n          <CardHeader className=\"pb-3\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Bell className=\"h-4 w-4\" />\n                <CardTitle className=\"text-sm\">{notification.title}</CardTitle>\n                {notification.unread && (\n                  <Badge variant=\"destructive\" className=\"h-2 w-2 p-0\"></Badge>\n                )}\n              </div>\n              <button \n                className=\"text-muted-foreground hover:text-foreground\" \n                aria-label=\"Dismiss notification\"\n              >\n                <X className=\"h-4 w-4\" />\n              </button>\n            </div>\n            <CardDescription className=\"text-xs text-muted-foreground\">\n              {notification.time}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <p className=\"text-sm\">{notification.description}</p>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#BasicDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "BasicDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function BasicDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status']}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction BasicDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status']}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#SortableDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "SortableDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function SortableDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      sortableColumns={['name', 'email', 'role', 'lastLogin']}\n      multiSort={true}\n      defaultSortState={[{ key: 'name', direction: 'asc' }]}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction SortableDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      sortableColumns={['name', 'email', 'role', 'lastLogin']}\n      multiSort={true}\n      defaultSortState={[{ key: 'name', direction: 'asc' }]}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#RowExpansionDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "RowExpansionDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function RowExpansionDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      expandable={true}\n      expandOnRowClick={false}\n      expandIcon={\n          <Plus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n        collapseIcon={\n          <Minus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n         expandedContent={(row) => (\n          <div className=\"p-4 bg-white dark:bg-gray-800 rounded border dark:border-gray-600\">\n            <h4 className=\"font-semibold mb-2 dark:text-white\">Users Details</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm dark:text-gray-200\">\n              <div>\n                <strong className=\"dark:text-white\">Full Name:</strong> {row.name}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Role:</strong> {row.role}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Status:</strong> {row.status}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Last Login:</strong> {row.lastLogin}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Email:</strong> {row.email}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Department:</strong> {row.department}\n              </div>\n              </div>\n            </div>\n        )}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction RowExpansionDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      expandable={true}\n      expandOnRowClick={false}\n      expandIcon={\n          <Plus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n        collapseIcon={\n          <Minus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n         expandedContent={(row) => (\n          <div className=\"p-4 bg-white dark:bg-gray-800 rounded border dark:border-gray-600\">\n            <h4 className=\"font-semibold mb-2 dark:text-white\">Users Details</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm dark:text-gray-200\">\n              <div>\n                <strong className=\"dark:text-white\">Full Name:</strong> {row.name}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Role:</strong> {row.role}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Status:</strong> {row.status}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Last Login:</strong> {row.lastLogin}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Email:</strong> {row.email}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Department:</strong> {row.department}\n              </div>\n              </div>\n            </div>\n        )}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#SearchableDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "SearchableDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function SearchableDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'department']}\n      enableGlobalFilter={true}\n      globalFilterPlaceholder=\"Search users...\"\n      sortableColumns={['name', 'email', 'role']}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction SearchableDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'department']}\n      enableGlobalFilter={true}\n      globalFilterPlaceholder=\"Search users...\"\n      sortableColumns={['name', 'email', 'role']}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#SelectableDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "SelectableDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function SelectableDataTableExample() {\n  const [selectedRows, setSelectedRows] = useState<Array<string | number>>([]);\n\n  return (\n    <div className=\"space-y-4\">\n      {selectedRows.length > 0 && (\n        <div className=\"text-sm text-muted-foreground\">\n          Selected {selectedRows.length} row(s): {selectedRows.join(', ')}\n        </div>\n      )}\n      <DataTable\n        tableData={sampleUsers}\n        tableColumns={['name', 'email', 'role', 'status']}\n        selectable={true}\n        selectionMode=\"multiple\"\n        selectedRowIds={selectedRows}\n        onSelectionChange={setSelectedRows}\n        maxSelections={3}\n        onMaxSelectionsReached={(id) => {\n          console.log(`Maximum selections reached. Attempted to select: ${id}`);\n        }}\n      />\n    </div>\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction SelectableDataTableExample() {\n  const [selectedRows, setSelectedRows] = useState<Array<string | number>>([]);\n\n  return (\n    <div className=\"space-y-4\">\n      {selectedRows.length > 0 && (\n        <div className=\"text-sm text-muted-foreground\">\n          Selected {selectedRows.length} row(s): {selectedRows.join(', ')}\n        </div>\n      )}\n      <DataTable\n        tableData={sampleUsers}\n        tableColumns={['name', 'email', 'role', 'status']}\n        selectable={true}\n        selectionMode=\"multiple\"\n        selectedRowIds={selectedRows}\n        onSelectionChange={setSelectedRows}\n        maxSelections={3}\n        onMaxSelectionsReached={(id) => {\n          console.log(`Maximum selections reached. Attempted to select: ${id}`);\n        }}\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#ActionsDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "ActionsDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function ActionsDataTableExample() {\n  const actions = useMemo(() => [\n    {\n      id: \"view\",\n      label: \"View\",\n      icon: <Eye className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"View\", row),\n    },\n    {\n      id: \"edit\",\n      label: \"Edit\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.role === \"Admin\",\n    },\n  ], []);\n\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status']}\n      actions={actions}\n      actionsPlacement=\"end\"\n      actionsColumnHeader=\"Actions\"\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction ActionsDataTableExample() {\n  const actions = useMemo(() => [\n    {\n      id: \"view\",\n      label: \"View\",\n      icon: <Eye className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"View\", row),\n    },\n    {\n      id: \"edit\",\n      label: \"Edit\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.role === \"Admin\",\n    },\n  ], []);\n\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status']}\n      actions={actions}\n      actionsPlacement=\"end\"\n      actionsColumnHeader=\"Actions\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#CustomRenderDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "CustomRenderDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function CustomRenderDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      customBodyRender={(rowData, column) => {\n        if (column === 'status') {\n          return (\n            <Badge variant={rowData.status === 'Active' ? 'default' : 'secondary'}>\n              {rowData.status}\n            </Badge>\n          );\n        }\n        if (column === 'email') {\n          return (\n            <a \n              href={`mailto:${rowData.email}`}\n              className=\"text-primary hover:underline\"\n            >\n              {rowData.email}\n            </a>\n          );\n        }\n        if (column === 'role') {\n          return (\n            <Badge variant={rowData.role === 'Admin' ? 'destructive' : 'outline'}>\n              {rowData.role}\n            </Badge>\n          );\n        }\n        if (column === 'lastLogin') {\n          return new Date(rowData.lastLogin).toLocaleDateString();\n        }\n        return null; // Use default rendering\n      }}\n      customHeadRender={(column) => {\n        if (column === 'status') {\n          return <span className=\"font-bold text-primary\">Status</span>;\n        }\n        return null; // Use default rendering\n      }}\n      sortableColumns={['name', 'email', 'lastLogin']}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction CustomRenderDataTableExample() {\n  return (\n    <DataTable\n      tableData={sampleUsers}\n      tableColumns={['name', 'email', 'role', 'status', 'lastLogin']}\n      customBodyRender={(rowData, column) => {\n        if (column === 'status') {\n          return (\n            <Badge variant={rowData.status === 'Active' ? 'default' : 'secondary'}>\n              {rowData.status}\n            </Badge>\n          );\n        }\n        if (column === 'email') {\n          return (\n            <a \n              href={`mailto:${rowData.email}`}\n              className=\"text-primary hover:underline\"\n            >\n              {rowData.email}\n            </a>\n          );\n        }\n        if (column === 'role') {\n          return (\n            <Badge variant={rowData.role === 'Admin' ? 'destructive' : 'outline'}>\n              {rowData.role}\n            </Badge>\n          );\n        }\n        if (column === 'lastLogin') {\n          return new Date(rowData.lastLogin).toLocaleDateString();\n        }\n        return null; // Use default rendering\n      }}\n      customHeadRender={(column) => {\n        if (column === 'status') {\n          return <span className=\"font-bold text-primary\">Status</span>;\n        }\n        return null; // Use default rendering\n      }}\n      sortableColumns={['name', 'email', 'lastLogin']}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#ProductsDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "ProductsDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function ProductsDataTableExample() {\n  const actions = useMemo(() => [\n    {\n      id: \"edit\",\n      label: \"Edit Product\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit product\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete Product\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete product\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.stock > 0,\n    },\n  ], []);\n\n  return (\n    <DataTable\n      tableData={sampleProducts}\n      tableColumns={['name', 'category', 'price', 'stock', 'status']}\n      actions={actions}\n      enableGlobalFilter={true}\n      globalFilterPlaceholder=\"Search products...\"\n      sortableColumns={['name', 'category', 'price', 'stock']}\n      customBodyRender={(rowData, column) => {\n        if (column === 'price') {\n          return `$${rowData.price.toFixed(2)}`;\n        }\n        if (column === 'status') {\n          let variant: \"default\" | \"secondary\" | \"destructive\" = \"default\";\n          if (rowData.status === 'Out of Stock') variant = \"destructive\";\n          else if (rowData.status === 'Low Stock') variant = \"secondary\";\n          \n          return (\n            <Badge variant={variant}>\n              {rowData.status}\n            </Badge>\n          );\n        }\n        if (column === 'stock') {\n          return (\n            <span className={rowData.stock === 0 ? 'text-destructive font-semibold' : ''}>\n              {rowData.stock} units\n            </span>\n          );\n        }\n        return null;\n      }}\n    />\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction ProductsDataTableExample() {\n  const actions = useMemo(() => [\n    {\n      id: \"edit\",\n      label: \"Edit Product\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit product\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete Product\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete product\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.stock > 0,\n    },\n  ], []);\n\n  return (\n    <DataTable\n      tableData={sampleProducts}\n      tableColumns={['name', 'category', 'price', 'stock', 'status']}\n      actions={actions}\n      enableGlobalFilter={true}\n      globalFilterPlaceholder=\"Search products...\"\n      sortableColumns={['name', 'category', 'price', 'stock']}\n      customBodyRender={(rowData, column) => {\n        if (column === 'price') {\n          return `$${rowData.price.toFixed(2)}`;\n        }\n        if (column === 'status') {\n          let variant: \"default\" | \"secondary\" | \"destructive\" = \"default\";\n          if (rowData.status === 'Out of Stock') variant = \"destructive\";\n          else if (rowData.status === 'Low Stock') variant = \"secondary\";\n          \n          return (\n            <Badge variant={variant}>\n              {rowData.status}\n            </Badge>\n          );\n        }\n        if (column === 'stock') {\n          return (\n            <span className={rowData.stock === 0 ? 'text-destructive font-semibold' : ''}>\n              {rowData.stock} units\n            </span>\n          );\n        }\n        return null;\n      }}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/data-table-examples.tsx#AdvancedDataTableExample": {
    "path": "components/data-display-examples/data-table-examples.tsx",
    "functionName": "AdvancedDataTableExample",
    "extractedCode": {
      "imports": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";",
      "function": "function AdvancedDataTableExample() {\n  const [selectedRows, setSelectedRows] = useState<Array<string | number>>([]);\n  const [sortState, setSortState] = useState<Array<{ key: keyof typeof sampleUsers[0]; direction: \"asc\" | \"desc\" }>>([{ key: 'name', direction: 'asc' }]);\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const actions = useMemo(() => [\n    {\n      id: \"view\",\n      label: \"View Details\",\n      icon: <Eye className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"View user\", row),\n    },\n    {\n      id: \"edit\",\n      label: \"Edit User\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit user\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete User\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete user\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.role === \"Admin\",\n      hidden: (row: any) => row.status === \"Inactive\",\n    },\n  ], []);\n\n  const handleBulkAction = () => {\n    console.log(\"Bulk action for:\", selectedRows);\n    alert(`Bulk action performed on ${selectedRows.length} users`);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">Users Management</h3>\n        <div className=\"flex gap-2\">\n          {selectedRows.length > 0 && (\n            <Button onClick={handleBulkAction} variant=\"outline\" size=\"sm\">\n              Bulk Action ({selectedRows.length})\n            </Button>\n          )}\n          <Button size=\"sm\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add User\n          </Button>\n        </div>\n      </div>\n\n      {/* Advanced DataTable */}\n      <DataTable\n        tableData={sampleUsers}\n        tableColumns={['name', 'email', 'role', 'status', 'department', 'lastLogin']}\n        \n        // Sorting\n        sortableColumns={['name', 'email', 'role', 'lastLogin']}\n        multiSort={true}\n        sortState={sortState}\n        onSortChange={setSortState}\n        \n        // Filtering\n        enableGlobalFilter={true}\n        globalFilter={globalFilter}\n        onGlobalFilterChange={setGlobalFilter}\n        globalFilterPlaceholder=\"Search users by name, email, or role...\"\n        \n        // Selection\n        selectable={true}\n        selectionMode=\"multiple\"\n        selectedRowIds={selectedRows}\n        onSelectionChange={setSelectedRows}\n        maxSelections={3}\n        \n        // Actions\n        actions={actions}\n        actionsPlacement=\"end\"\n        actionsColumnHeader=\"Actions\"\n       \n        //Row Expansion\n        expandable={true}\n        expandOnRowClick={false}\n         expandIcon={\n          <Plus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n        collapseIcon={\n          <Minus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n         expandedContent={(row) => (\n          <div className=\"p-4 bg-white dark:bg-gray-800 rounded border dark:border-gray-600\">\n            <h4 className=\"font-semibold mb-2 dark:text-white\">Users Details</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm dark:text-gray-200\">\n              <div>\n                <strong className=\"dark:text-white\">Full Name:</strong> {row.name}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Role:</strong> {row.role}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Status:</strong> {row.status}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Last Login:</strong> {row.lastLogin}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Email:</strong> {row.email}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Department:</strong> {row.department}\n              </div>\n              </div>\n            </div>\n        )}\n        \n        // Custom rendering\n        customBodyRender={(rowData, column) => {\n          switch (column) {\n            case 'status':\n              return (\n                <Badge \n                  variant={rowData.status === 'Active' ? 'default' : 'secondary'}\n                >\n                  {rowData.status}\n                </Badge>\n              );\n            case 'role':\n              return (\n                <Badge \n                  variant={rowData.role === 'Admin' ? 'destructive' : 'outline'}\n                >\n                  {rowData.role}\n                </Badge>\n              );\n            case 'email':\n              return (\n                <a \n                  href={`mailto:${rowData.email}`}\n                  className=\"text-primary hover:underline\"\n                >\n                  {rowData.email}\n                </a>\n              );\n            case 'lastLogin':\n              return new Date(rowData.lastLogin).toLocaleDateString();\n            default:\n              return null;\n          }\n        }}\n        \n        // Row interactions\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        rowClassName={(row) => \n          row.status === 'Inactive' ? 'opacity-60' : ''\n        }\n        \n        // Styling\n        className=\"border rounded-lg\"\n        \n        // Empty state\n        emptyMessage=\"No users found matching your criteria\"\n      />\n      \n      {selectedRows.length > 0 && (\n        <div className=\"text-sm text-muted-foreground mt-2\">\n          Selected users: {selectedRows.join(', ')}\n        </div>\n      )}\n    </div>\n  );\n}",
      "full": "import { DataTable } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Edit, Trash2, Eye, Plus, Minus } from \"lucide-react\";\nimport { useState, useMemo } from \"react\";\nfunction AdvancedDataTableExample() {\n  const [selectedRows, setSelectedRows] = useState<Array<string | number>>([]);\n  const [sortState, setSortState] = useState<Array<{ key: keyof typeof sampleUsers[0]; direction: \"asc\" | \"desc\" }>>([{ key: 'name', direction: 'asc' }]);\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const actions = useMemo(() => [\n    {\n      id: \"view\",\n      label: \"View Details\",\n      icon: <Eye className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"View user\", row),\n    },\n    {\n      id: \"edit\",\n      label: \"Edit User\",\n      icon: <Edit className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Edit user\", row),\n    },\n    {\n      id: \"delete\",\n      label: \"Delete User\",\n      icon: <Trash2 className=\"h-4 w-4\" />,\n      onClick: (row: any) => console.log(\"Delete user\", row),\n      variant: \"destructive\",\n      disabled: (row: any) => row.role === \"Admin\",\n      hidden: (row: any) => row.status === \"Inactive\",\n    },\n  ], []);\n\n  const handleBulkAction = () => {\n    console.log(\"Bulk action for:\", selectedRows);\n    alert(`Bulk action performed on ${selectedRows.length} users`);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">Users Management</h3>\n        <div className=\"flex gap-2\">\n          {selectedRows.length > 0 && (\n            <Button onClick={handleBulkAction} variant=\"outline\" size=\"sm\">\n              Bulk Action ({selectedRows.length})\n            </Button>\n          )}\n          <Button size=\"sm\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add User\n          </Button>\n        </div>\n      </div>\n\n      {/* Advanced DataTable */}\n      <DataTable\n        tableData={sampleUsers}\n        tableColumns={['name', 'email', 'role', 'status', 'department', 'lastLogin']}\n        \n        // Sorting\n        sortableColumns={['name', 'email', 'role', 'lastLogin']}\n        multiSort={true}\n        sortState={sortState}\n        onSortChange={setSortState}\n        \n        // Filtering\n        enableGlobalFilter={true}\n        globalFilter={globalFilter}\n        onGlobalFilterChange={setGlobalFilter}\n        globalFilterPlaceholder=\"Search users by name, email, or role...\"\n        \n        // Selection\n        selectable={true}\n        selectionMode=\"multiple\"\n        selectedRowIds={selectedRows}\n        onSelectionChange={setSelectedRows}\n        maxSelections={3}\n        \n        // Actions\n        actions={actions}\n        actionsPlacement=\"end\"\n        actionsColumnHeader=\"Actions\"\n       \n        //Row Expansion\n        expandable={true}\n        expandOnRowClick={false}\n         expandIcon={\n          <Plus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n        collapseIcon={\n          <Minus className=\"w-3 h-3 hover:bg-white hover:text-black transition-colors\" strokeWidth={4} />\n        }\n         expandedContent={(row) => (\n          <div className=\"p-4 bg-white dark:bg-gray-800 rounded border dark:border-gray-600\">\n            <h4 className=\"font-semibold mb-2 dark:text-white\">Users Details</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm dark:text-gray-200\">\n              <div>\n                <strong className=\"dark:text-white\">Full Name:</strong> {row.name}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Role:</strong> {row.role}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Status:</strong> {row.status}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Last Login:</strong> {row.lastLogin}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Email:</strong> {row.email}\n              </div>\n              <div>\n                <strong className=\"dark:text-white\">Department:</strong> {row.department}\n              </div>\n              </div>\n            </div>\n        )}\n        \n        // Custom rendering\n        customBodyRender={(rowData, column) => {\n          switch (column) {\n            case 'status':\n              return (\n                <Badge \n                  variant={rowData.status === 'Active' ? 'default' : 'secondary'}\n                >\n                  {rowData.status}\n                </Badge>\n              );\n            case 'role':\n              return (\n                <Badge \n                  variant={rowData.role === 'Admin' ? 'destructive' : 'outline'}\n                >\n                  {rowData.role}\n                </Badge>\n              );\n            case 'email':\n              return (\n                <a \n                  href={`mailto:${rowData.email}`}\n                  className=\"text-primary hover:underline\"\n                >\n                  {rowData.email}\n                </a>\n              );\n            case 'lastLogin':\n              return new Date(rowData.lastLogin).toLocaleDateString();\n            default:\n              return null;\n          }\n        }}\n        \n        // Row interactions\n        onRowClick={(row) => console.log(\"Row clicked:\", row)}\n        rowClassName={(row) => \n          row.status === 'Inactive' ? 'opacity-60' : ''\n        }\n        \n        // Styling\n        className=\"border rounded-lg\"\n        \n        // Empty state\n        emptyMessage=\"No users found matching your criteria\"\n      />\n      \n      {selectedRows.length > 0 && (\n        <div className=\"text-sm text-muted-foreground mt-2\">\n          Selected users: {selectedRows.join(', ')}\n        </div>\n      )}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#BasicPaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "BasicPaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function BasicPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(3);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 100;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Current page: {currentPage} of {Math.ceil(totalItems / pageSize)}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n      />\n    </div>\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction BasicPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(3);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 100;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Current page: {currentPage} of {Math.ceil(totalItems / pageSize)}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#SimplePaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "SimplePaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function SimplePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 50;\n\n  return (\n    <Pagination\n      currentPage={currentPage}\n      totalPages={Math.ceil(totalItems / pageSize)}\n      onPageChange={setCurrentPage}\n      totalItems={totalItems}\n      pageSize={pageSize}\n      onPageSizeChange={setPageSize}\n      showFirstLast={false}\n    />\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction SimplePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 50;\n\n  return (\n    <Pagination\n      currentPage={currentPage}\n      totalPages={Math.ceil(totalItems / pageSize)}\n      onPageChange={setCurrentPage}\n      totalItems={totalItems}\n      pageSize={pageSize}\n      onPageSizeChange={setPageSize}\n      showFirstLast={false}\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#LargePaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "LargePaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function LargePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(25);\n  const [pageSize, setPageSize] = useState(20);\n  const totalItems = 1000;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Large dataset example - {totalItems} total items\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n        pageSizeOptions={[10, 20, 50, 100]}\n      />\n    </div>\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction LargePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(25);\n  const [pageSize, setPageSize] = useState(20);\n  const totalItems = 1000;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Large dataset example - {totalItems} total items\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n        pageSizeOptions={[10, 20, 50, 100]}\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#InteractivePaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "InteractivePaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function InteractivePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const totalItems = mockData.length;\n\n  const handlePageChange = (page: number) => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setCurrentPage(page);\n      setIsLoading(false);\n    }, 500); // Simulate loading\n  };\n\n  const handlePageSizeChange = (size: number) => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setPageSize(size);\n      setCurrentPage(1); // Reset to first page\n      setIsLoading(false);\n    }, 300);\n  };\n\n  // Get current page data\n  const startIndex = (currentPage - 1) * pageSize;\n  const currentData = mockData.slice(startIndex, startIndex + pageSize);\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Data Display */}\n      <div className=\"border rounded-lg\">\n        <div className=\"p-4 border-b bg-muted/50\">\n          <h4 className=\"font-semibold\">Sample Data</h4>\n        </div>\n        <div className=\"p-4\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-primary border-t-transparent\"></div>\n                <span>Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid gap-3\">\n              {currentData.map((item) => (\n                <div key={item.id} className=\"flex justify-between items-center p-2 border rounded\">\n                  <div>\n                    <span className=\"font-medium\">{item.name}</span>\n                    <span className=\"text-muted-foreground ml-2\">({item.category})</span>\n                  </div>\n                  <span className=\"font-semibold\">${item.price}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Pagination */}\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={handlePageChange}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={handlePageSizeChange}\n        pageSizeOptions={[5, 10, 20]}\n        isFetching={isLoading}\n      />\n    </div>\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction InteractivePaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n  const [isLoading, setIsLoading] = useState(false);\n  const totalItems = mockData.length;\n\n  const handlePageChange = (page: number) => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setCurrentPage(page);\n      setIsLoading(false);\n    }, 500); // Simulate loading\n  };\n\n  const handlePageSizeChange = (size: number) => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setPageSize(size);\n      setCurrentPage(1); // Reset to first page\n      setIsLoading(false);\n    }, 300);\n  };\n\n  // Get current page data\n  const startIndex = (currentPage - 1) * pageSize;\n  const currentData = mockData.slice(startIndex, startIndex + pageSize);\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Data Display */}\n      <div className=\"border rounded-lg\">\n        <div className=\"p-4 border-b bg-muted/50\">\n          <h4 className=\"font-semibold\">Sample Data</h4>\n        </div>\n        <div className=\"p-4\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-primary border-t-transparent\"></div>\n                <span>Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"grid gap-3\">\n              {currentData.map((item) => (\n                <div key={item.id} className=\"flex justify-between items-center p-2 border rounded\">\n                  <div>\n                    <span className=\"font-medium\">{item.name}</span>\n                    <span className=\"text-muted-foreground ml-2\">({item.category})</span>\n                  </div>\n                  <span className=\"font-semibold\">${item.price}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Pagination */}\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={handlePageChange}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={handlePageSizeChange}\n        pageSizeOptions={[5, 10, 20]}\n        isFetching={isLoading}\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#CustomSizesPaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "CustomSizesPaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function CustomSizesPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(25);\n  const totalItems = 500;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Custom page size options for different use cases\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={(size) => {\n          setPageSize(size);\n          setCurrentPage(1); // Reset to first page when changing size\n        }}\n        pageSizeOptions={[25, 50, 100, 200]}\n        siblingsCount={2} // Show more page numbers\n      />\n    </div>\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction CustomSizesPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(25);\n  const totalItems = 500;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Custom page size options for different use cases\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={(size) => {\n          setPageSize(size);\n          setCurrentPage(1); // Reset to first page when changing size\n        }}\n        pageSizeOptions={[25, 50, 100, 200]}\n        siblingsCount={2} // Show more page numbers\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/pagination-examples.tsx#MinimalPaginationExample": {
    "path": "components/data-display-examples/pagination-examples.tsx",
    "functionName": "MinimalPaginationExample",
    "extractedCode": {
      "imports": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function MinimalPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 30;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Minimal pagination for small datasets\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n        showFirstLast={false}\n        siblingsCount={0} // Only show current page\n        pageSizeOptions={[5, 10, 15]}\n      />\n    </div>\n  );\n}",
      "full": "import { Pagination } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction MinimalPaginationExample() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const totalItems = 30;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-muted-foreground\">\n        Minimal pagination for small datasets\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        totalPages={Math.ceil(totalItems / pageSize)}\n        onPageChange={setCurrentPage}\n        totalItems={totalItems}\n        pageSize={pageSize}\n        onPageSizeChange={setPageSize}\n        showFirstLast={false}\n        siblingsCount={0} // Only show current page\n        pageSizeOptions={[5, 10, 15]}\n      />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#BasicProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "BasicProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function BasicProgressExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Progress</span>\n          <span>25%</span>\n        </div>\n        <Progress value={25} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Loading</span>\n          <span>60%</span>\n        </div>\n        <Progress value={60} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Complete</span>\n          <span>100%</span>\n        </div>\n        <Progress value={100} className=\"w-full\" />\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction BasicProgressExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Progress</span>\n          <span>25%</span>\n        </div>\n        <Progress value={25} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Loading</span>\n          <span>60%</span>\n        </div>\n        <Progress value={60} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Complete</span>\n          <span>100%</span>\n        </div>\n        <Progress value={100} className=\"w-full\" />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#AnimatedProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "AnimatedProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function AnimatedProgressExample() {\n  const [progress, setProgress] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const startProgress = () => {\n    setProgress(0);\n    setIsRunning(true);\n    const timer = setInterval(() => {\n      setProgress((prev) => {\n        if (prev >= 100) {\n          clearInterval(timer);\n          setIsRunning(false);\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 200);\n  };\n\n  const resetProgress = () => {\n    setProgress(0);\n    setIsRunning(false);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Download Progress</span>\n          <span>{progress}%</span>\n        </div>\n        <Progress value={progress} className=\"w-full\" />\n      </div>\n      \n      <div className=\"flex gap-2\">\n        <Button \n          onClick={startProgress} \n          disabled={isRunning}\n          className=\"flex-1\"\n        >\n          {isRunning ? 'Downloading...' : 'Start Download'}\n        </Button>\n        <Button \n          onClick={resetProgress} \n          variant=\"outline\"\n          disabled={isRunning}\n        >\n          Reset\n        </Button>\n      </div>\n      \n      {progress === 100 && (\n        <div className=\"text-sm text-green-600 font-medium\">\n          ✓ Download completed!\n        </div>\n      )}\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction AnimatedProgressExample() {\n  const [progress, setProgress] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const startProgress = () => {\n    setProgress(0);\n    setIsRunning(true);\n    const timer = setInterval(() => {\n      setProgress((prev) => {\n        if (prev >= 100) {\n          clearInterval(timer);\n          setIsRunning(false);\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 200);\n  };\n\n  const resetProgress = () => {\n    setProgress(0);\n    setIsRunning(false);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Download Progress</span>\n          <span>{progress}%</span>\n        </div>\n        <Progress value={progress} className=\"w-full\" />\n      </div>\n      \n      <div className=\"flex gap-2\">\n        <Button \n          onClick={startProgress} \n          disabled={isRunning}\n          className=\"flex-1\"\n        >\n          {isRunning ? 'Downloading...' : 'Start Download'}\n        </Button>\n        <Button \n          onClick={resetProgress} \n          variant=\"outline\"\n          disabled={isRunning}\n        >\n          Reset\n        </Button>\n      </div>\n      \n      {progress === 100 && (\n        <div className=\"text-sm text-green-600 font-medium\">\n          ✓ Download completed!\n        </div>\n      )}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#ProgressSizesExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "ProgressSizesExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function ProgressSizesExample() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Small (h-1)</p>\n        <Progress value={75} className=\"w-full h-1\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Default (h-2)</p>\n        <Progress value={75} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Medium (h-3)</p>\n        <Progress value={75} className=\"w-full h-3\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Large (h-4)</p>\n        <Progress value={75} className=\"w-full h-4\" />\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction ProgressSizesExample() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Small (h-1)</p>\n        <Progress value={75} className=\"w-full h-1\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Default (h-2)</p>\n        <Progress value={75} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Medium (h-3)</p>\n        <Progress value={75} className=\"w-full h-3\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Large (h-4)</p>\n        <Progress value={75} className=\"w-full h-4\" />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#ColoredProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "ColoredProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function ColoredProgressExample() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Default</p>\n        <Progress value={60} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Success</p>\n        <Progress \n          value={85} \n          className=\"w-full [&>div]:bg-green-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Warning</p>\n        <Progress \n          value={45} \n          className=\"w-full [&>div]:bg-yellow-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Danger</p>\n        <Progress \n          value={25} \n          className=\"w-full [&>div]:bg-red-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Info</p>\n        <Progress \n          value={70} \n          className=\"w-full [&>div]:bg-blue-500\" \n        />\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction ColoredProgressExample() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Default</p>\n        <Progress value={60} className=\"w-full\" />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Success</p>\n        <Progress \n          value={85} \n          className=\"w-full [&>div]:bg-green-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Warning</p>\n        <Progress \n          value={45} \n          className=\"w-full [&>div]:bg-yellow-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Danger</p>\n        <Progress \n          value={25} \n          className=\"w-full [&>div]:bg-red-500\" \n        />\n      </div>\n      \n      <div>\n        <p className=\"text-sm text-muted-foreground mb-2\">Info</p>\n        <Progress \n          value={70} \n          className=\"w-full [&>div]:bg-blue-500\" \n        />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#MultiStepProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "MultiStepProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function MultiStepProgressExample() {\n  const [currentStep, setCurrentStep] = useState(2);\n  \n  const steps = [\n    \"Account Setup\",\n    \"Profile Information\", \n    \"Preferences\",\n    \"Verification\",\n    \"Complete\"\n  ];\n\n  const progress = (currentStep / (steps.length - 1)) * 100;\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Setup Progress</span>\n          <span>Step {currentStep + 1} of {steps.length}</span>\n        </div>\n        <Progress value={progress} className=\"w-full\" />\n      </div>\n      \n      <div className=\"space-y-2\">\n        {steps.map((step, index) => (\n          <div key={index} className=\"flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              {index < currentStep ? (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-green-500 rounded-full\">\n                  <Check className=\"w-4 h-4 text-white\" />\n                </div>\n              ) : index === currentStep ? (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-primary rounded-full\">\n                  <Circle className=\"w-3 h-3 text-white fill-current\" />\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-muted rounded-full\">\n                  <Circle className=\"w-3 h-3 text-muted-foreground\" />\n                </div>\n              )}\n            </div>\n            <div className=\"flex-1\">\n              <p className={`text-sm ${\n                index <= currentStep ? 'text-foreground' : 'text-muted-foreground'\n              }`}>\n                {step}\n              </p>\n            </div>\n            {index < currentStep && (\n              <Badge variant=\"outline\" className=\"text-xs\">\n                Complete\n              </Badge>\n            )}\n            {index === currentStep && (\n              <Badge variant=\"default\" className=\"text-xs\">\n                Current\n              </Badge>\n            )}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"flex space-x-2\">\n        <Button \n          variant=\"outline\" \n          onClick={() => setCurrentStep(Math.max(0, currentStep - 1))}\n          disabled={currentStep === 0}\n        >\n          Previous\n        </Button>\n        <Button \n          onClick={() => setCurrentStep(Math.min(steps.length - 1, currentStep + 1))}\n          disabled={currentStep === steps.length - 1}\n        >\n          {currentStep === steps.length - 1 ? 'Complete' : 'Next'}\n        </Button>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction MultiStepProgressExample() {\n  const [currentStep, setCurrentStep] = useState(2);\n  \n  const steps = [\n    \"Account Setup\",\n    \"Profile Information\", \n    \"Preferences\",\n    \"Verification\",\n    \"Complete\"\n  ];\n\n  const progress = (currentStep / (steps.length - 1)) * 100;\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <div className=\"flex justify-between text-sm text-muted-foreground mb-2\">\n          <span>Setup Progress</span>\n          <span>Step {currentStep + 1} of {steps.length}</span>\n        </div>\n        <Progress value={progress} className=\"w-full\" />\n      </div>\n      \n      <div className=\"space-y-2\">\n        {steps.map((step, index) => (\n          <div key={index} className=\"flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              {index < currentStep ? (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-green-500 rounded-full\">\n                  <Check className=\"w-4 h-4 text-white\" />\n                </div>\n              ) : index === currentStep ? (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-primary rounded-full\">\n                  <Circle className=\"w-3 h-3 text-white fill-current\" />\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center w-6 h-6 bg-muted rounded-full\">\n                  <Circle className=\"w-3 h-3 text-muted-foreground\" />\n                </div>\n              )}\n            </div>\n            <div className=\"flex-1\">\n              <p className={`text-sm ${\n                index <= currentStep ? 'text-foreground' : 'text-muted-foreground'\n              }`}>\n                {step}\n              </p>\n            </div>\n            {index < currentStep && (\n              <Badge variant=\"outline\" className=\"text-xs\">\n                Complete\n              </Badge>\n            )}\n            {index === currentStep && (\n              <Badge variant=\"default\" className=\"text-xs\">\n                Current\n              </Badge>\n            )}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"flex space-x-2\">\n        <Button \n          variant=\"outline\" \n          onClick={() => setCurrentStep(Math.max(0, currentStep - 1))}\n          disabled={currentStep === 0}\n        >\n          Previous\n        </Button>\n        <Button \n          onClick={() => setCurrentStep(Math.min(steps.length - 1, currentStep + 1))}\n          disabled={currentStep === steps.length - 1}\n        >\n          {currentStep === steps.length - 1 ? 'Complete' : 'Next'}\n        </Button>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#FileUploadProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "FileUploadProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function FileUploadProgressExample() {\n  const [files, setFiles] = useState([\n    { name: \"document.pdf\", size: \"2.4 MB\", progress: 100, status: \"complete\" },\n    { name: \"image.jpg\", size: \"1.8 MB\", progress: 65, status: \"uploading\" },\n    { name: \"video.mp4\", size: \"15.2 MB\", progress: 25, status: \"uploading\" },\n    { name: \"archive.zip\", size: \"5.1 MB\", progress: 0, status: \"error\" },\n  ]);\n\n  const [isUploading, setIsUploading] = useState(false);\n\n  const simulateUpload = () => {\n    setIsUploading(true);\n    const interval = setInterval(() => {\n      setFiles(prevFiles => \n        prevFiles.map(file => {\n          if (file.status === \"uploading\" && file.progress < 100) {\n            const newProgress = Math.min(100, file.progress + Math.random() * 15);\n            return {\n              ...file,\n              progress: newProgress,\n              status: newProgress === 100 ? \"complete\" : \"uploading\"\n            };\n          }\n          return file;\n        })\n      );\n    }, 500);\n\n    setTimeout(() => {\n      clearInterval(interval);\n      setIsUploading(false);\n    }, 5000);\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case \"error\":\n        return <XCircle className=\"w-4 h-4 text-red-500\" />;\n      default:\n        return <FileText className=\"w-4 h-4 text-blue-500\" />;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return <Badge variant=\"outline\" className=\"text-green-600 border-green-200\">Complete</Badge>;\n      case \"error\":\n        return <Badge variant=\"destructive\">Error</Badge>;\n      default:\n        return <Badge variant=\"secondary\">Uploading</Badge>;\n    }\n  };\n\n  const getProgressColor = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return \"[&>div]:bg-green-500\";\n      case \"error\":\n        return \"[&>div]:bg-red-500\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"border-2 border-dashed border-muted rounded-lg p-6 text-center\">\n        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\n        <p className=\"text-sm text-muted-foreground mb-2\">\n          Drop files here or click to browse\n        </p>\n        <Button \n          variant=\"outline\" \n          size=\"sm\"\n          onClick={simulateUpload}\n          disabled={isUploading}\n        >\n          {isUploading ? 'Uploading...' : 'Simulate Upload'}\n        </Button>\n      </div>\n\n      <div className=\"space-y-3\">\n        {files.map((file, index) => (\n          <div key={index} className=\"border rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-3\">\n                {getStatusIcon(file.status)}\n                <div>\n                  <p className=\"text-sm font-medium\">{file.name}</p>\n                  <p className=\"text-xs text-muted-foreground\">{file.size}</p>\n                </div>\n              </div>\n              {getStatusBadge(file.status)}\n            </div>\n            \n            {file.status !== \"error\" && (\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>Progress</span>\n                  <span>{Math.round(file.progress)}%</span>\n                </div>\n                <Progress \n                  value={file.progress} \n                  className={`w-full ${getProgressColor(file.status)}`}\n                />\n              </div>\n            )}\n            \n            {file.status === \"error\" && (\n              <p className=\"text-xs text-red-600 mt-1\">\n                Upload failed. Click to retry.\n              </p>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction FileUploadProgressExample() {\n  const [files, setFiles] = useState([\n    { name: \"document.pdf\", size: \"2.4 MB\", progress: 100, status: \"complete\" },\n    { name: \"image.jpg\", size: \"1.8 MB\", progress: 65, status: \"uploading\" },\n    { name: \"video.mp4\", size: \"15.2 MB\", progress: 25, status: \"uploading\" },\n    { name: \"archive.zip\", size: \"5.1 MB\", progress: 0, status: \"error\" },\n  ]);\n\n  const [isUploading, setIsUploading] = useState(false);\n\n  const simulateUpload = () => {\n    setIsUploading(true);\n    const interval = setInterval(() => {\n      setFiles(prevFiles => \n        prevFiles.map(file => {\n          if (file.status === \"uploading\" && file.progress < 100) {\n            const newProgress = Math.min(100, file.progress + Math.random() * 15);\n            return {\n              ...file,\n              progress: newProgress,\n              status: newProgress === 100 ? \"complete\" : \"uploading\"\n            };\n          }\n          return file;\n        })\n      );\n    }, 500);\n\n    setTimeout(() => {\n      clearInterval(interval);\n      setIsUploading(false);\n    }, 5000);\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case \"error\":\n        return <XCircle className=\"w-4 h-4 text-red-500\" />;\n      default:\n        return <FileText className=\"w-4 h-4 text-blue-500\" />;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return <Badge variant=\"outline\" className=\"text-green-600 border-green-200\">Complete</Badge>;\n      case \"error\":\n        return <Badge variant=\"destructive\">Error</Badge>;\n      default:\n        return <Badge variant=\"secondary\">Uploading</Badge>;\n    }\n  };\n\n  const getProgressColor = (status: string) => {\n    switch (status) {\n      case \"complete\":\n        return \"[&>div]:bg-green-500\";\n      case \"error\":\n        return \"[&>div]:bg-red-500\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"border-2 border-dashed border-muted rounded-lg p-6 text-center\">\n        <Upload className=\"mx-auto h-8 w-8 text-muted-foreground mb-2\" />\n        <p className=\"text-sm text-muted-foreground mb-2\">\n          Drop files here or click to browse\n        </p>\n        <Button \n          variant=\"outline\" \n          size=\"sm\"\n          onClick={simulateUpload}\n          disabled={isUploading}\n        >\n          {isUploading ? 'Uploading...' : 'Simulate Upload'}\n        </Button>\n      </div>\n\n      <div className=\"space-y-3\">\n        {files.map((file, index) => (\n          <div key={index} className=\"border rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-3\">\n                {getStatusIcon(file.status)}\n                <div>\n                  <p className=\"text-sm font-medium\">{file.name}</p>\n                  <p className=\"text-xs text-muted-foreground\">{file.size}</p>\n                </div>\n              </div>\n              {getStatusBadge(file.status)}\n            </div>\n            \n            {file.status !== \"error\" && (\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>Progress</span>\n                  <span>{Math.round(file.progress)}%</span>\n                </div>\n                <Progress \n                  value={file.progress} \n                  className={`w-full ${getProgressColor(file.status)}`}\n                />\n              </div>\n            )}\n            \n            {file.status === \"error\" && (\n              <p className=\"text-xs text-red-600 mt-1\">\n                Upload failed. Click to retry.\n              </p>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#CircularProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "CircularProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function CircularProgressExample() {\n  const CircularProgress = ({ value, size = 120, strokeWidth = 8 }: { value: number, size?: number, strokeWidth?: number }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const offset = circumference - (value / 100) * circumference;\n\n    return (\n      <div className=\"relative inline-flex items-center justify-center\">\n        <svg\n          width={size}\n          height={size}\n          className=\"transform -rotate-90\"\n        >\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            className=\"text-muted\"\n          />\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={offset}\n            strokeLinecap=\"round\"\n            className=\"text-primary transition-all duration-300 ease-in-out\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-2xl font-semibold\">{value}%</span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex justify-center space-x-8\">\n      <div className=\"text-center\">\n        <CircularProgress value={25} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Downloads</p>\n      </div>\n      \n      <div className=\"text-center\">\n        <CircularProgress value={75} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Uploads</p>\n      </div>\n      \n      <div className=\"text-center\">\n        <CircularProgress value={100} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Complete</p>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction CircularProgressExample() {\n  const CircularProgress = ({ value, size = 120, strokeWidth = 8 }: { value: number, size?: number, strokeWidth?: number }) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const offset = circumference - (value / 100) * circumference;\n\n    return (\n      <div className=\"relative inline-flex items-center justify-center\">\n        <svg\n          width={size}\n          height={size}\n          className=\"transform -rotate-90\"\n        >\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            className=\"text-muted\"\n          />\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"currentColor\"\n            strokeWidth={strokeWidth}\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={offset}\n            strokeLinecap=\"round\"\n            className=\"text-primary transition-all duration-300 ease-in-out\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-2xl font-semibold\">{value}%</span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex justify-center space-x-8\">\n      <div className=\"text-center\">\n        <CircularProgress value={25} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Downloads</p>\n      </div>\n      \n      <div className=\"text-center\">\n        <CircularProgress value={75} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Uploads</p>\n      </div>\n      \n      <div className=\"text-center\">\n        <CircularProgress value={100} />\n        <p className=\"text-sm text-muted-foreground mt-2\">Complete</p>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/progress-examples.tsx#SkillProgressExample": {
    "path": "components/data-display-examples/progress-examples.tsx",
    "functionName": "SkillProgressExample",
    "extractedCode": {
      "imports": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";",
      "function": "function SkillProgressExample() {\n  const skills = [\n    { name: \"React\", level: 90, color: \"[&>div]:bg-blue-500\" },\n    { name: \"TypeScript\", level: 85, color: \"[&>div]:bg-blue-600\" },\n    { name: \"Node.js\", level: 75, color: \"[&>div]:bg-green-500\" },\n    { name: \"Python\", level: 70, color: \"[&>div]:bg-yellow-500\" },\n    { name: \"Docker\", level: 60, color: \"[&>div]:bg-blue-400\" },\n    { name: \"AWS\", level: 55, color: \"[&>div]:bg-orange-500\" },\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <h4 className=\"font-semibold\">Skill Levels</h4>\n      <div className=\"space-y-4\">\n        {skills.map((skill, index) => (\n          <div key={index} className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"font-medium\">{skill.name}</span>\n              <span className=\"text-muted-foreground\">{skill.level}%</span>\n            </div>\n            <Progress \n              value={skill.level} \n              className={`w-full h-2 ${skill.color}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}",
      "full": "import { Progress } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nimport { Check, Circle, Upload, FileText, CheckCircle, XCircle } from \"lucide-react\";\nfunction SkillProgressExample() {\n  const skills = [\n    { name: \"React\", level: 90, color: \"[&>div]:bg-blue-500\" },\n    { name: \"TypeScript\", level: 85, color: \"[&>div]:bg-blue-600\" },\n    { name: \"Node.js\", level: 75, color: \"[&>div]:bg-green-500\" },\n    { name: \"Python\", level: 70, color: \"[&>div]:bg-yellow-500\" },\n    { name: \"Docker\", level: 60, color: \"[&>div]:bg-blue-400\" },\n    { name: \"AWS\", level: 55, color: \"[&>div]:bg-orange-500\" },\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <h4 className=\"font-semibold\">Skill Levels</h4>\n      <div className=\"space-y-4\">\n        {skills.map((skill, index) => (\n          <div key={index} className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"font-medium\">{skill.name}</span>\n              <span className=\"text-muted-foreground\">{skill.level}%</span>\n            </div>\n            <Progress \n              value={skill.level} \n              className={`w-full h-2 ${skill.color}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#BasicSeparatorExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "BasicSeparatorExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function BasicSeparatorExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <p className=\"text-sm\">First section content</p>\n      </div>\n      \n      <Separator />\n      \n      <div>\n        <p className=\"text-sm\">Second section content</p>\n      </div>\n      \n      <Separator />\n      \n      <div>\n        <p className=\"text-sm\">Third section content</p>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction BasicSeparatorExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <p className=\"text-sm\">First section content</p>\n      </div>\n      \n      <Separator />\n      \n      <div>\n        <p className=\"text-sm\">Second section content</p>\n      </div>\n      \n      <Separator />\n      \n      <div>\n        <p className=\"text-sm\">Third section content</p>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#VerticalSeparatorExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "VerticalSeparatorExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function VerticalSeparatorExample() {\n  return (\n    <div className=\"flex h-16 items-center space-x-4\">\n      <div className=\"text-sm\">Left content</div>\n      <Separator orientation=\"vertical\" />\n      <div className=\"text-sm\">Middle content</div>\n      <Separator orientation=\"vertical\" />\n      <div className=\"text-sm\">Right content</div>\n    </div>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction VerticalSeparatorExample() {\n  return (\n    <div className=\"flex h-16 items-center space-x-4\">\n      <div className=\"text-sm\">Left content</div>\n      <Separator orientation=\"vertical\" />\n      <div className=\"text-sm\">Middle content</div>\n      <Separator orientation=\"vertical\" />\n      <div className=\"text-sm\">Right content</div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#NavigationMenuExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "NavigationMenuExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function NavigationMenuExample() {\n  return (\n    <div className=\"space-y-1\">\n      <div className=\"px-2 py-1\">\n        <h4 className=\"text-sm font-medium text-muted-foreground\">Navigation</h4>\n      </div>\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Dashboard\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Projects\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Tasks\n      </Button>\n      \n      <Separator className=\"my-2\" />\n      \n      <div className=\"px-2 py-1\">\n        <h4 className=\"text-sm font-medium text-muted-foreground\">Settings</h4>\n      </div>\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Profile\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Preferences\n      </Button>\n      \n      <Separator className=\"my-2\" />\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start text-red-600\">\n        Sign Out\n      </Button>\n    </div>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction NavigationMenuExample() {\n  return (\n    <div className=\"space-y-1\">\n      <div className=\"px-2 py-1\">\n        <h4 className=\"text-sm font-medium text-muted-foreground\">Navigation</h4>\n      </div>\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Dashboard\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Projects\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Tasks\n      </Button>\n      \n      <Separator className=\"my-2\" />\n      \n      <div className=\"px-2 py-1\">\n        <h4 className=\"text-sm font-medium text-muted-foreground\">Settings</h4>\n      </div>\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Profile\n      </Button>\n      <Button variant=\"ghost\" className=\"w-full justify-start\">\n        Preferences\n      </Button>\n      \n      <Separator className=\"my-2\" />\n      \n      <Button variant=\"ghost\" className=\"w-full justify-start text-red-600\">\n        Sign Out\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#BreadcrumbExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "BreadcrumbExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function BreadcrumbExample() {\n  const breadcrumbs = [\n    { label: \"Home\", href: \"/\" },\n    { label: \"Products\", href: \"/products\" },\n    { label: \"Electronics\", href: \"/products/electronics\" },\n    { label: \"Smartphones\", href: \"/products/electronics/smartphones\" },\n  ];\n\n  return (\n    <nav className=\"flex items-center space-x-2 text-sm\">\n      {breadcrumbs.map((item, index) => (\n        <div key={index} className=\"flex items-center space-x-2\">\n          {index > 0 && (\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n          )}\n          <a \n            href={item.href}\n            className={`hover:underline ${\n              index === breadcrumbs.length - 1 \n                ? 'text-foreground font-medium' \n                : 'text-muted-foreground'\n            }`}\n          >\n            {item.label}\n          </a>\n        </div>\n      ))}\n    </nav>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction BreadcrumbExample() {\n  const breadcrumbs = [\n    { label: \"Home\", href: \"/\" },\n    { label: \"Products\", href: \"/products\" },\n    { label: \"Electronics\", href: \"/products/electronics\" },\n    { label: \"Smartphones\", href: \"/products/electronics/smartphones\" },\n  ];\n\n  return (\n    <nav className=\"flex items-center space-x-2 text-sm\">\n      {breadcrumbs.map((item, index) => (\n        <div key={index} className=\"flex items-center space-x-2\">\n          {index > 0 && (\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n          )}\n          <a \n            href={item.href}\n            className={`hover:underline ${\n              index === breadcrumbs.length - 1 \n                ? 'text-foreground font-medium' \n                : 'text-muted-foreground'\n            }`}\n          >\n            {item.label}\n          </a>\n        </div>\n      ))}\n    </nav>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#CardSectionsExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "CardSectionsExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function CardSectionsExample() {\n  return (\n    <Card className=\"w-full max-w-md\">\n      <CardHeader>\n        <CardTitle>Team Meeting</CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Calendar className=\"mr-2 h-4 w-4\" />\n            March 15, 2024 at 2:00 PM\n          </div>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <MapPin className=\"mr-2 h-4 w-4\" />\n            Conference Room A\n          </div>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Users className=\"mr-2 h-4 w-4\" />\n            8 attendees\n          </div>\n        </div>\n        \n        <Separator />\n        \n        <div>\n          <h4 className=\"text-sm font-medium mb-2\">Agenda</h4>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            <li>• Project status update</li>\n            <li>• Q2 planning discussion</li>\n            <li>• Resource allocation</li>\n          </ul>\n        </div>\n        \n        <Separator />\n        \n        <div>\n          <h4 className=\"text-sm font-medium mb-2\">Tags</h4>\n          <div className=\"flex flex-wrap gap-1\">\n            <Badge variant=\"secondary\">Planning</Badge>\n            <Badge variant=\"secondary\">Team</Badge>\n            <Badge variant=\"secondary\">Q2</Badge>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction CardSectionsExample() {\n  return (\n    <Card className=\"w-full max-w-md\">\n      <CardHeader>\n        <CardTitle>Team Meeting</CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Calendar className=\"mr-2 h-4 w-4\" />\n            March 15, 2024 at 2:00 PM\n          </div>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <MapPin className=\"mr-2 h-4 w-4\" />\n            Conference Room A\n          </div>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Users className=\"mr-2 h-4 w-4\" />\n            8 attendees\n          </div>\n        </div>\n        \n        <Separator />\n        \n        <div>\n          <h4 className=\"text-sm font-medium mb-2\">Agenda</h4>\n          <ul className=\"text-sm text-muted-foreground space-y-1\">\n            <li>• Project status update</li>\n            <li>• Q2 planning discussion</li>\n            <li>• Resource allocation</li>\n          </ul>\n        </div>\n        \n        <Separator />\n        \n        <div>\n          <h4 className=\"text-sm font-medium mb-2\">Tags</h4>\n          <div className=\"flex flex-wrap gap-1\">\n            <Badge variant=\"secondary\">Planning</Badge>\n            <Badge variant=\"secondary\">Team</Badge>\n            <Badge variant=\"secondary\">Q2</Badge>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#ToolbarExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "ToolbarExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function ToolbarExample() {\n  return (\n    <div className=\"flex items-center space-x-1 p-2 border rounded-lg bg-background\">\n      {/* File operations */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Save\">\n        <Save className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Undo\">\n        <Undo className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Redo\">\n        <Redo className=\"h-4 w-4\" />\n      </Button>\n      \n      <Separator orientation=\"vertical\" className=\"h-6\" />\n      \n      {/* Text formatting */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Bold\">\n        <Bold className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Italic\">\n        <Italic className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Underline\">\n        <Underline className=\"h-4 w-4\" />\n      </Button>\n      \n      <Separator orientation=\"vertical\" className=\"h-6\" />\n      \n      {/* Alignment */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align left\">\n        <AlignLeft className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align center\">\n        <AlignCenter className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align right\">\n        <AlignRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction ToolbarExample() {\n  return (\n    <div className=\"flex items-center space-x-1 p-2 border rounded-lg bg-background\">\n      {/* File operations */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Save\">\n        <Save className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Undo\">\n        <Undo className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Redo\">\n        <Redo className=\"h-4 w-4\" />\n      </Button>\n      \n      <Separator orientation=\"vertical\" className=\"h-6\" />\n      \n      {/* Text formatting */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Bold\">\n        <Bold className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Italic\">\n        <Italic className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Underline\">\n        <Underline className=\"h-4 w-4\" />\n      </Button>\n      \n      <Separator orientation=\"vertical\" className=\"h-6\" />\n      \n      {/* Alignment */}\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align left\">\n        <AlignLeft className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align center\">\n        <AlignCenter className=\"h-4 w-4\" />\n      </Button>\n      <Button variant=\"ghost\" size=\"sm\" aria-label=\"Align right\">\n        <AlignRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#StatsDashboardExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "StatsDashboardExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function StatsDashboardExample() {\n  const stats = [\n    {\n      label: \"Total Revenue\",\n      value: \"$45,231.89\",\n      change: \"+20.1%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Subscriptions\",\n      value: \"2,350\",\n      change: \"+180.1%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Sales\",\n      value: \"12,234\",\n      change: \"+19%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Active Users\",\n      value: \"573\",\n      change: \"-2%\",\n      trend: \"down\"\n    }\n  ];\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case \"up\":\n        return <TrendingUp className=\"h-3 w-3 text-green-500\" />;\n      case \"down\":\n        return <TrendingDown className=\"h-3 w-3 text-red-500\" />;\n      default:\n        return <Minus className=\"h-3 w-3 text-gray-500\" />;\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-2 lg:grid-cols-4 divide-x\">\n      {stats.map((stat, index) => (\n        <div key={index} className=\"px-4 py-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-muted-foreground\">{stat.label}</p>\n            <p className=\"text-2xl font-bold\">{stat.value}</p>\n            <div className=\"flex items-center space-x-1\">\n              {getTrendIcon(stat.trend)}\n              <span className={`text-xs ${\n                stat.trend === \"up\" \n                  ? \"text-green-600\" \n                  : stat.trend === \"down\" \n                  ? \"text-red-600\" \n                  : \"text-gray-600\"\n              }`}>\n                {stat.change}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                from last month\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction StatsDashboardExample() {\n  const stats = [\n    {\n      label: \"Total Revenue\",\n      value: \"$45,231.89\",\n      change: \"+20.1%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Subscriptions\",\n      value: \"2,350\",\n      change: \"+180.1%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Sales\",\n      value: \"12,234\",\n      change: \"+19%\",\n      trend: \"up\"\n    },\n    {\n      label: \"Active Users\",\n      value: \"573\",\n      change: \"-2%\",\n      trend: \"down\"\n    }\n  ];\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case \"up\":\n        return <TrendingUp className=\"h-3 w-3 text-green-500\" />;\n      case \"down\":\n        return <TrendingDown className=\"h-3 w-3 text-red-500\" />;\n      default:\n        return <Minus className=\"h-3 w-3 text-gray-500\" />;\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-2 lg:grid-cols-4 divide-x\">\n      {stats.map((stat, index) => (\n        <div key={index} className=\"px-4 py-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-muted-foreground\">{stat.label}</p>\n            <p className=\"text-2xl font-bold\">{stat.value}</p>\n            <div className=\"flex items-center space-x-1\">\n              {getTrendIcon(stat.trend)}\n              <span className={`text-xs ${\n                stat.trend === \"up\" \n                  ? \"text-green-600\" \n                  : stat.trend === \"down\" \n                  ? \"text-red-600\" \n                  : \"text-gray-600\"\n              }`}>\n                {stat.change}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                from last month\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/separator-examples.tsx#ContentSectionsExample": {
    "path": "components/data-display-examples/separator-examples.tsx",
    "functionName": "ContentSectionsExample",
    "extractedCode": {
      "imports": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";",
      "function": "function ContentSectionsExample() {\n  return (\n    <article className=\"max-w-2xl space-y-6\">\n      {/* Article header */}\n      <header className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Badge variant=\"secondary\">Technology</Badge>\n          <h1 className=\"text-3xl font-bold\">\n            Building Scalable React Applications\n          </h1>\n          <p className=\"text-lg text-muted-foreground\">\n            Learn best practices for creating maintainable and performant React apps\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center space-x-2\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"Author\" />\n              <AvatarFallback>JD</AvatarFallback>\n            </Avatar>\n            <span>John Doe</span>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-4\" />\n          <div className=\"flex items-center space-x-1\">\n            <Calendar className=\"h-4 w-4\" />\n            <span>Mar 15, 2024</span>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-4\" />\n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"h-4 w-4\" />\n            <span>5 min read</span>\n          </div>\n        </div>\n      </header>\n      \n      <Separator />\n      \n      {/* Article content */}\n      <section className=\"prose prose-gray max-w-none\">\n        <p>\n          React has become one of the most popular frontend frameworks, but building \n          scalable applications requires careful planning and adherence to best practices.\n        </p>\n        <p>\n          In this article, we&apos;ll explore key strategies for creating React applications \n          that can grow with your team and user base while maintaining code quality \n          and performance.\n        </p>\n      </section>\n      \n      <Separator />\n      \n      {/* Tags and sharing */}\n      <footer className=\"space-y-4\">\n        <div>\n          <h3 className=\"text-sm font-medium mb-2\">Tags</h3>\n          <div className=\"flex flex-wrap gap-2\">\n            <Badge variant=\"outline\">React</Badge>\n            <Badge variant=\"outline\">JavaScript</Badge>\n            <Badge variant=\"outline\">Frontend</Badge>\n            <Badge variant=\"outline\">Performance</Badge>\n          </div>\n        </div>\n        \n        <Separator />\n        \n        <div className=\"flex justify-between items-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Share this article\n          </p>\n          <div className=\"flex space-x-2\">\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              Twitter\n            </button>\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              LinkedIn\n            </button>\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              Copy Link\n            </button>\n          </div>\n        </div>\n      </footer>\n    </article>\n  );\n}",
      "full": "import { Separator } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { \n  Calendar, \n  MapPin, \n  Users, \n  Bold, \n  Italic, \n  Underline, \n  AlignLeft, \n  AlignCenter, \n  AlignRight,\n  Undo,\n  Redo,\n  Save,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Clock\n} from \"lucide-react\";\nfunction ContentSectionsExample() {\n  return (\n    <article className=\"max-w-2xl space-y-6\">\n      {/* Article header */}\n      <header className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Badge variant=\"secondary\">Technology</Badge>\n          <h1 className=\"text-3xl font-bold\">\n            Building Scalable React Applications\n          </h1>\n          <p className=\"text-lg text-muted-foreground\">\n            Learn best practices for creating maintainable and performant React apps\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center space-x-2\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"Author\" />\n              <AvatarFallback>JD</AvatarFallback>\n            </Avatar>\n            <span>John Doe</span>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-4\" />\n          <div className=\"flex items-center space-x-1\">\n            <Calendar className=\"h-4 w-4\" />\n            <span>Mar 15, 2024</span>\n          </div>\n          <Separator orientation=\"vertical\" className=\"h-4\" />\n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"h-4 w-4\" />\n            <span>5 min read</span>\n          </div>\n        </div>\n      </header>\n      \n      <Separator />\n      \n      {/* Article content */}\n      <section className=\"prose prose-gray max-w-none\">\n        <p>\n          React has become one of the most popular frontend frameworks, but building \n          scalable applications requires careful planning and adherence to best practices.\n        </p>\n        <p>\n          In this article, we&apos;ll explore key strategies for creating React applications \n          that can grow with your team and user base while maintaining code quality \n          and performance.\n        </p>\n      </section>\n      \n      <Separator />\n      \n      {/* Tags and sharing */}\n      <footer className=\"space-y-4\">\n        <div>\n          <h3 className=\"text-sm font-medium mb-2\">Tags</h3>\n          <div className=\"flex flex-wrap gap-2\">\n            <Badge variant=\"outline\">React</Badge>\n            <Badge variant=\"outline\">JavaScript</Badge>\n            <Badge variant=\"outline\">Frontend</Badge>\n            <Badge variant=\"outline\">Performance</Badge>\n          </div>\n        </div>\n        \n        <Separator />\n        \n        <div className=\"flex justify-between items-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Share this article\n          </p>\n          <div className=\"flex space-x-2\">\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              Twitter\n            </button>\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              LinkedIn\n            </button>\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <button className=\"text-sm text-blue-600 hover:underline\">\n              Copy Link\n            </button>\n          </div>\n        </div>\n      </footer>\n    </article>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#BasicSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "BasicSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function BasicSkeletonExample() {\n  return (\n    <div className=\"space-y-3\">\n      <Skeleton className=\"h-4 w-[250px]\" />\n      <Skeleton className=\"h-4 w-[200px]\" />\n      <Skeleton className=\"h-4 w-[150px]\" />\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction BasicSkeletonExample() {\n  return (\n    <div className=\"space-y-3\">\n      <Skeleton className=\"h-4 w-[250px]\" />\n      <Skeleton className=\"h-4 w-[200px]\" />\n      <Skeleton className=\"h-4 w-[150px]\" />\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#CardSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "CardSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function CardSkeletonExample() {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Skeleton className=\"h-12 w-12 rounded-full\" />\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-[250px]\" />\n        <Skeleton className=\"h-4 w-[200px]\" />\n      </div>\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction CardSkeletonExample() {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <Skeleton className=\"h-12 w-12 rounded-full\" />\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-[250px]\" />\n        <Skeleton className=\"h-4 w-[200px]\" />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#ArticleSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "ArticleSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function ArticleSkeletonExample() {\n  return (\n    <div className=\"space-y-4 max-w-2xl\">\n      {/* Header */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-8 w-3/4\" />\n        <Skeleton className=\"h-4 w-1/2\" />\n      </div>\n      \n      {/* Image */}\n      <Skeleton className=\"h-48 w-full rounded-lg\" />\n      \n      {/* Content */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-3/4\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-2/3\" />\n      </div>\n      \n      {/* Author info */}\n      <div className=\"flex items-center space-x-3 pt-4\">\n        <Skeleton className=\"h-8 w-8 rounded-full\" />\n        <div className=\"space-y-1\">\n          <Skeleton className=\"h-3 w-24\" />\n          <Skeleton className=\"h-3 w-20\" />\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction ArticleSkeletonExample() {\n  return (\n    <div className=\"space-y-4 max-w-2xl\">\n      {/* Header */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-8 w-3/4\" />\n        <Skeleton className=\"h-4 w-1/2\" />\n      </div>\n      \n      {/* Image */}\n      <Skeleton className=\"h-48 w-full rounded-lg\" />\n      \n      {/* Content */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-3/4\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-2/3\" />\n      </div>\n      \n      {/* Author info */}\n      <div className=\"flex items-center space-x-3 pt-4\">\n        <Skeleton className=\"h-8 w-8 rounded-full\" />\n        <div className=\"space-y-1\">\n          <Skeleton className=\"h-3 w-24\" />\n          <Skeleton className=\"h-3 w-20\" />\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#TableSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "TableSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function TableSkeletonExample() {\n  return (\n    <div className=\"space-y-3\">\n      {/* Header */}\n      <div className=\"grid grid-cols-4 gap-4\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n      </div>\n      \n      {/* Separator */}\n      <Skeleton className=\"h-px w-full\" />\n      \n      {/* Rows */}\n      {Array.from({ length: 5 }).map((_, i) => (\n        <div key={i} className=\"grid grid-cols-4 gap-4\">\n          <Skeleton className=\"h-4 w-full\" />\n          <Skeleton className=\"h-4 w-3/4\" />\n          <Skeleton className=\"h-4 w-1/2\" />\n          <Skeleton className=\"h-4 w-2/3\" />\n        </div>\n      ))}\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction TableSkeletonExample() {\n  return (\n    <div className=\"space-y-3\">\n      {/* Header */}\n      <div className=\"grid grid-cols-4 gap-4\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-full\" />\n      </div>\n      \n      {/* Separator */}\n      <Skeleton className=\"h-px w-full\" />\n      \n      {/* Rows */}\n      {Array.from({ length: 5 }).map((_, i) => (\n        <div key={i} className=\"grid grid-cols-4 gap-4\">\n          <Skeleton className=\"h-4 w-full\" />\n          <Skeleton className=\"h-4 w-3/4\" />\n          <Skeleton className=\"h-4 w-1/2\" />\n          <Skeleton className=\"h-4 w-2/3\" />\n        </div>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#ProfileSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "ProfileSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function ProfileSkeletonExample() {\n  return (\n    <div className=\"space-y-6 max-w-md\">\n      {/* Profile header */}\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"h-16 w-16 rounded-full\" />\n        <div className=\"space-y-2 flex-1\">\n          <Skeleton className=\"h-5 w-32\" />\n          <Skeleton className=\"h-4 w-24\" />\n          <Skeleton className=\"h-3 w-20\" />\n        </div>\n      </div>\n      \n      {/* Bio */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-5/6\" />\n        <Skeleton className=\"h-4 w-3/4\" />\n      </div>\n      \n      {/* Stats */}\n      <div className=\"grid grid-cols-3 gap-4\">\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-12 mx-auto\" />\n        </div>\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-16 mx-auto\" />\n        </div>\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-14 mx-auto\" />\n        </div>\n      </div>\n      \n      {/* Actions */}\n      <div className=\"flex space-x-2\">\n        <Skeleton className=\"h-9 flex-1\" />\n        <Skeleton className=\"h-9 w-20\" />\n      </div>\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction ProfileSkeletonExample() {\n  return (\n    <div className=\"space-y-6 max-w-md\">\n      {/* Profile header */}\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"h-16 w-16 rounded-full\" />\n        <div className=\"space-y-2 flex-1\">\n          <Skeleton className=\"h-5 w-32\" />\n          <Skeleton className=\"h-4 w-24\" />\n          <Skeleton className=\"h-3 w-20\" />\n        </div>\n      </div>\n      \n      {/* Bio */}\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-full\" />\n        <Skeleton className=\"h-4 w-5/6\" />\n        <Skeleton className=\"h-4 w-3/4\" />\n      </div>\n      \n      {/* Stats */}\n      <div className=\"grid grid-cols-3 gap-4\">\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-12 mx-auto\" />\n        </div>\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-16 mx-auto\" />\n        </div>\n        <div className=\"text-center space-y-1\">\n          <Skeleton className=\"h-6 w-8 mx-auto\" />\n          <Skeleton className=\"h-3 w-14 mx-auto\" />\n        </div>\n      </div>\n      \n      {/* Actions */}\n      <div className=\"flex space-x-2\">\n        <Skeleton className=\"h-9 flex-1\" />\n        <Skeleton className=\"h-9 w-20\" />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#ProductGridSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "ProductGridSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function ProductGridSkeletonExample() {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {Array.from({ length: 6 }).map((_, i) => (\n        <div key={i} className=\"space-y-3 border rounded-lg p-4\">\n          {/* Product image */}\n          <Skeleton className=\"h-48 w-full rounded-md\" />\n          \n          {/* Product info */}\n          <div className=\"space-y-2\">\n            <Skeleton className=\"h-4 w-3/4\" />\n            <Skeleton className=\"h-3 w-1/2\" />\n            <Skeleton className=\"h-5 w-20\" />\n          </div>\n          \n          {/* Action button */}\n          <Skeleton className=\"h-9 w-full\" />\n        </div>\n      ))}\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction ProductGridSkeletonExample() {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {Array.from({ length: 6 }).map((_, i) => (\n        <div key={i} className=\"space-y-3 border rounded-lg p-4\">\n          {/* Product image */}\n          <Skeleton className=\"h-48 w-full rounded-md\" />\n          \n          {/* Product info */}\n          <div className=\"space-y-2\">\n            <Skeleton className=\"h-4 w-3/4\" />\n            <Skeleton className=\"h-3 w-1/2\" />\n            <Skeleton className=\"h-5 w-20\" />\n          </div>\n          \n          {/* Action button */}\n          <Skeleton className=\"h-9 w-full\" />\n        </div>\n      ))}\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#DashboardSkeletonExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "DashboardSkeletonExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function DashboardSkeletonExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <Skeleton className=\"h-8 w-48\" />\n        <Skeleton className=\"h-9 w-24\" />\n      </div>\n      \n      {/* Stats cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <div key={i} className=\"border rounded-lg p-4 space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-4 w-4 rounded\" />\n            </div>\n            <Skeleton className=\"h-7 w-24\" />\n            <Skeleton className=\"h-3 w-32\" />\n          </div>\n        ))}\n      </div>\n      \n      {/* Chart */}\n      <div className=\"border rounded-lg p-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <Skeleton className=\"h-6 w-32\" />\n          <Skeleton className=\"h-8 w-20\" />\n        </div>\n        <Skeleton className=\"h-64 w-full\" />\n      </div>\n      \n      {/* Recent activity */}\n      <div className=\"border rounded-lg p-4\">\n        <Skeleton className=\"h-6 w-40 mb-4\" />\n        <div className=\"space-y-3\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"flex items-center space-x-3\">\n              <Skeleton className=\"h-8 w-8 rounded-full\" />\n              <div className=\"flex-1 space-y-1\">\n                <Skeleton className=\"h-4 w-3/4\" />\n                <Skeleton className=\"h-3 w-1/2\" />\n              </div>\n              <Skeleton className=\"h-3 w-16\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction DashboardSkeletonExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <Skeleton className=\"h-8 w-48\" />\n        <Skeleton className=\"h-9 w-24\" />\n      </div>\n      \n      {/* Stats cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <div key={i} className=\"border rounded-lg p-4 space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-4 w-4 rounded\" />\n            </div>\n            <Skeleton className=\"h-7 w-24\" />\n            <Skeleton className=\"h-3 w-32\" />\n          </div>\n        ))}\n      </div>\n      \n      {/* Chart */}\n      <div className=\"border rounded-lg p-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <Skeleton className=\"h-6 w-32\" />\n          <Skeleton className=\"h-8 w-20\" />\n        </div>\n        <Skeleton className=\"h-64 w-full\" />\n      </div>\n      \n      {/* Recent activity */}\n      <div className=\"border rounded-lg p-4\">\n        <Skeleton className=\"h-6 w-40 mb-4\" />\n        <div className=\"space-y-3\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"flex items-center space-x-3\">\n              <Skeleton className=\"h-8 w-8 rounded-full\" />\n              <div className=\"flex-1 space-y-1\">\n                <Skeleton className=\"h-4 w-3/4\" />\n                <Skeleton className=\"h-3 w-1/2\" />\n              </div>\n              <Skeleton className=\"h-3 w-16\" />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/skeleton-examples.tsx#LoadingStateToggleExample": {
    "path": "components/data-display-examples/skeleton-examples.tsx",
    "functionName": "LoadingStateToggleExample",
    "extractedCode": {
      "imports": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function LoadingStateToggleExample() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const toggleLoading = () => {\n    setIsLoading(!isLoading);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <Button onClick={toggleLoading}>\n        {isLoading ? \"Show Loaded State\" : \"Show Loading State\"}\n      </Button>\n      \n      <div className=\"border rounded-lg p-6\">\n        {isLoading ? (\n          /* Loading state */\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Skeleton className=\"h-12 w-12 rounded-full\" />\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-[200px]\" />\n                <Skeleton className=\"h-4 w-[160px]\" />\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-3/4\" />\n            </div>\n            <div className=\"flex space-x-2\">\n              <Skeleton className=\"h-6 w-16\" />\n              <Skeleton className=\"h-6 w-20\" />\n              <Skeleton className=\"h-6 w-18\" />\n            </div>\n          </div>\n        ) : (\n          /* Loaded state */\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Avatar>\n                <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />\n                <AvatarFallback>SH</AvatarFallback>\n              </Avatar>\n              <div>\n                <h3 className=\"font-semibold\">Sarah Johnson</h3>\n                <p className=\"text-sm text-muted-foreground\">Senior Developer</p>\n              </div>\n            </div>\n            <p className=\"text-sm\">\n              Experienced full-stack developer with expertise in React, Node.js, and \n              cloud architecture. Passionate about building scalable applications \n              and mentoring junior developers.\n            </p>\n            <div className=\"flex space-x-2\">\n              <Badge variant=\"secondary\">React</Badge>\n              <Badge variant=\"secondary\">TypeScript</Badge>\n              <Badge variant=\"secondary\">Node.js</Badge>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}",
      "full": "import { Skeleton } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@helgadigitals/vera-ui\";\nimport { Badge } from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction LoadingStateToggleExample() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const toggleLoading = () => {\n    setIsLoading(!isLoading);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <Button onClick={toggleLoading}>\n        {isLoading ? \"Show Loaded State\" : \"Show Loading State\"}\n      </Button>\n      \n      <div className=\"border rounded-lg p-6\">\n        {isLoading ? (\n          /* Loading state */\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Skeleton className=\"h-12 w-12 rounded-full\" />\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-[200px]\" />\n                <Skeleton className=\"h-4 w-[160px]\" />\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-3/4\" />\n            </div>\n            <div className=\"flex space-x-2\">\n              <Skeleton className=\"h-6 w-16\" />\n              <Skeleton className=\"h-6 w-20\" />\n              <Skeleton className=\"h-6 w-18\" />\n            </div>\n          </div>\n        ) : (\n          /* Loaded state */\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-4\">\n              <Avatar>\n                <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />\n                <AvatarFallback>SH</AvatarFallback>\n              </Avatar>\n              <div>\n                <h3 className=\"font-semibold\">Sarah Johnson</h3>\n                <p className=\"text-sm text-muted-foreground\">Senior Developer</p>\n              </div>\n            </div>\n            <p className=\"text-sm\">\n              Experienced full-stack developer with expertise in React, Node.js, and \n              cloud architecture. Passionate about building scalable applications \n              and mentoring junior developers.\n            </p>\n            <div className=\"flex space-x-2\">\n              <Badge variant=\"secondary\">React</Badge>\n              <Badge variant=\"secondary\">TypeScript</Badge>\n              <Badge variant=\"secondary\">Node.js</Badge>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/table-examples.tsx#BasicTableExample": {
    "path": "components/data-display-examples/table-examples.tsx",
    "functionName": "BasicTableExample",
    "extractedCode": {
      "imports": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function BasicTableExample() {\n  const users = [\n    { name: \"John Doe\", email: \"john@example.com\", role: \"Admin\" },\n    { name: \"Jane Smith\", email: \"jane@example.com\", role: \"User\" },\n    { name: \"Bob Johnson\", email: \"bob@example.com\", role: \"Editor\" },\n  ];\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Name</TableHead>\n          <TableHead>Email</TableHead>\n          <TableHead>Role</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {users.map((user, index) => (\n          <TableRow key={index}>\n            <TableCell>{user.name}</TableCell>\n            <TableCell>{user.email}</TableCell>\n            <TableCell>{user.role}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}",
      "full": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction BasicTableExample() {\n  const users = [\n    { name: \"John Doe\", email: \"john@example.com\", role: \"Admin\" },\n    { name: \"Jane Smith\", email: \"jane@example.com\", role: \"User\" },\n    { name: \"Bob Johnson\", email: \"bob@example.com\", role: \"Editor\" },\n  ];\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Name</TableHead>\n          <TableHead>Email</TableHead>\n          <TableHead>Role</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {users.map((user, index) => (\n          <TableRow key={index}>\n            <TableCell>{user.name}</TableCell>\n            <TableCell>{user.email}</TableCell>\n            <TableCell>{user.role}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}"
    }
  },
  "components/data-display-examples/table-examples.tsx#SelectableTableExample": {
    "path": "components/data-display-examples/table-examples.tsx",
    "functionName": "SelectableTableExample",
    "extractedCode": {
      "imports": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function SelectableTableExample() {\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n  \n  const data = [\n    { id: 1, name: \"Product A\", price: 99.99, status: \"Active\" },\n    { id: 2, name: \"Product B\", price: 149.99, status: \"Inactive\" },\n    { id: 3, name: \"Product C\", price: 79.99, status: \"Active\" },\n  ];\n\n  const handleSelectRow = (id: number) => {\n    setSelectedRows(prev => \n      prev.includes(id) \n        ? prev.filter(rowId => rowId !== id)\n        : [...prev, id]\n    );\n  };\n\n  const handleSelectAll = () => {\n    setSelectedRows(\n      selectedRows.length === data.length ? [] : data.map(item => item.id)\n    );\n  };\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-12\">\n            <input\n              type=\"checkbox\"\n              checked={selectedRows.length === data.length}\n              onChange={handleSelectAll}\n              className=\"rounded\"\n              aria-label=\"Select all rows\"\n            />\n          </TableHead>\n          <TableHead>Name</TableHead>\n          <TableHead>Price</TableHead>\n          <TableHead>Status</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.map((item) => (\n          <TableRow \n            key={item.id}\n            data-state={selectedRows.includes(item.id) ? \"selected\" : undefined}\n          >\n            <TableCell>\n              <input\n                type=\"checkbox\"\n                checked={selectedRows.includes(item.id)}\n                onChange={() => handleSelectRow(item.id)}\n                className=\"rounded\"\n                aria-label={`Select ${item.name}`}\n              />\n            </TableCell>\n            <TableCell>{item.name}</TableCell>\n            <TableCell>${item.price}</TableCell>\n            <TableCell>\n              <span className={`px-2 py-1 rounded-full text-xs ${\n                item.status === 'Active' \n                  ? 'bg-green-100 text-green-800' \n                  : 'bg-gray-100 text-gray-800'\n              }`}>\n                {item.status}\n              </span>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}",
      "full": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction SelectableTableExample() {\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\n  \n  const data = [\n    { id: 1, name: \"Product A\", price: 99.99, status: \"Active\" },\n    { id: 2, name: \"Product B\", price: 149.99, status: \"Inactive\" },\n    { id: 3, name: \"Product C\", price: 79.99, status: \"Active\" },\n  ];\n\n  const handleSelectRow = (id: number) => {\n    setSelectedRows(prev => \n      prev.includes(id) \n        ? prev.filter(rowId => rowId !== id)\n        : [...prev, id]\n    );\n  };\n\n  const handleSelectAll = () => {\n    setSelectedRows(\n      selectedRows.length === data.length ? [] : data.map(item => item.id)\n    );\n  };\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-12\">\n            <input\n              type=\"checkbox\"\n              checked={selectedRows.length === data.length}\n              onChange={handleSelectAll}\n              className=\"rounded\"\n              aria-label=\"Select all rows\"\n            />\n          </TableHead>\n          <TableHead>Name</TableHead>\n          <TableHead>Price</TableHead>\n          <TableHead>Status</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.map((item) => (\n          <TableRow \n            key={item.id}\n            data-state={selectedRows.includes(item.id) ? \"selected\" : undefined}\n          >\n            <TableCell>\n              <input\n                type=\"checkbox\"\n                checked={selectedRows.includes(item.id)}\n                onChange={() => handleSelectRow(item.id)}\n                className=\"rounded\"\n                aria-label={`Select ${item.name}`}\n              />\n            </TableCell>\n            <TableCell>{item.name}</TableCell>\n            <TableCell>${item.price}</TableCell>\n            <TableCell>\n              <span className={`px-2 py-1 rounded-full text-xs ${\n                item.status === 'Active' \n                  ? 'bg-green-100 text-green-800' \n                  : 'bg-gray-100 text-gray-800'\n              }`}>\n                {item.status}\n              </span>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}"
    }
  },
  "components/data-display-examples/table-examples.tsx#TableWithFooterExample": {
    "path": "components/data-display-examples/table-examples.tsx",
    "functionName": "TableWithFooterExample",
    "extractedCode": {
      "imports": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function TableWithFooterExample() {\n  const invoices = [\n    { invoice: \"INV001\", paymentStatus: \"Paid\", totalAmount: 250.00 },\n    { invoice: \"INV002\", paymentStatus: \"Pending\", totalAmount: 150.00 },\n    { invoice: \"INV003\", paymentStatus: \"Unpaid\", totalAmount: 350.00 },\n    { invoice: \"INV004\", paymentStatus: \"Paid\", totalAmount: 450.00 },\n  ];\n\n  const total = invoices.reduce((sum, invoice) => sum + invoice.totalAmount, 0);\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell className=\"text-right\">${invoice.totalAmount.toFixed(2)}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={2}>Total</TableCell>\n          <TableCell className=\"text-right\">${total.toFixed(2)}</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}",
      "full": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction TableWithFooterExample() {\n  const invoices = [\n    { invoice: \"INV001\", paymentStatus: \"Paid\", totalAmount: 250.00 },\n    { invoice: \"INV002\", paymentStatus: \"Pending\", totalAmount: 150.00 },\n    { invoice: \"INV003\", paymentStatus: \"Unpaid\", totalAmount: 350.00 },\n    { invoice: \"INV004\", paymentStatus: \"Paid\", totalAmount: 450.00 },\n  ];\n\n  const total = invoices.reduce((sum, invoice) => sum + invoice.totalAmount, 0);\n\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell className=\"text-right\">${invoice.totalAmount.toFixed(2)}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={2}>Total</TableCell>\n          <TableCell className=\"text-right\">${total.toFixed(2)}</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}"
    }
  },
  "components/data-display-examples/table-examples.tsx#TableWithCaptionExample": {
    "path": "components/data-display-examples/table-examples.tsx",
    "functionName": "TableWithCaptionExample",
    "extractedCode": {
      "imports": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";",
      "function": "function TableWithCaptionExample() {\n  const recentSales = [\n    { customer: \"Liam Johnson\", email: \"liam@example.com\", amount: 250.00 },\n    { customer: \"Olivia Smith\", email: \"olivia@example.com\", amount: 150.00 },\n    { customer: \"Noah Williams\", email: \"noah@example.com\", amount: 350.00 },\n  ];\n\n  return (\n    <Table>\n      <TableCaption>A list of your recent sales.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Customer</TableHead>\n          <TableHead>Email</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {recentSales.map((sale, index) => (\n          <TableRow key={index}>\n            <TableCell className=\"font-medium\">{sale.customer}</TableCell>\n            <TableCell>{sale.email}</TableCell>\n            <TableCell className=\"text-right\">${sale.amount.toFixed(2)}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}",
      "full": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@helgadigitals/vera-ui\";\nimport { useState } from \"react\";\nfunction TableWithCaptionExample() {\n  const recentSales = [\n    { customer: \"Liam Johnson\", email: \"liam@example.com\", amount: 250.00 },\n    { customer: \"Olivia Smith\", email: \"olivia@example.com\", amount: 150.00 },\n    { customer: \"Noah Williams\", email: \"noah@example.com\", amount: 350.00 },\n  ];\n\n  return (\n    <Table>\n      <TableCaption>A list of your recent sales.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Customer</TableHead>\n          <TableHead>Email</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {recentSales.map((sale, index) => (\n          <TableRow key={index}>\n            <TableCell className=\"font-medium\">{sale.customer}</TableCell>\n            <TableCell>{sale.email}</TableCell>\n            <TableCell className=\"text-right\">${sale.amount.toFixed(2)}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#BasicTabsContainerExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "BasicTabsContainerExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function BasicTabsContainerExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"overview\",\n      label: \"Overview\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Project Overview</h3>\n          <p className=\"text-muted-foreground\">\n            This is the main overview of your project with key metrics and\n            summary information.\n          </p>\n        </div>\n      ),\n    },\n    {\n      value: \"analytics\",\n      label: \"Analytics\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Analytics Dashboard</h3>\n          <p className=\"text-muted-foreground\">\n            View detailed analytics and performance metrics for your project.\n          </p>\n        </div>\n      ),\n      disabled: false,\n    },\n    {\n      value: \"settings\",\n      label: \"Settings\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Project Settings</h3>\n          <p className=\"text-muted-foreground\">\n            Configure your project settings and preferences here.\n          </p>\n        </div>\n      ),\n      disabled: false,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"overview\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction BasicTabsContainerExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"overview\",\n      label: \"Overview\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Project Overview</h3>\n          <p className=\"text-muted-foreground\">\n            This is the main overview of your project with key metrics and\n            summary information.\n          </p>\n        </div>\n      ),\n    },\n    {\n      value: \"analytics\",\n      label: \"Analytics\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Analytics Dashboard</h3>\n          <p className=\"text-muted-foreground\">\n            View detailed analytics and performance metrics for your project.\n          </p>\n        </div>\n      ),\n      disabled: false,\n    },\n    {\n      value: \"settings\",\n      label: \"Settings\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Project Settings</h3>\n          <p className=\"text-muted-foreground\">\n            Configure your project settings and preferences here.\n          </p>\n        </div>\n      ),\n      disabled: false,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"overview\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#URLPersistedTabsExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "URLPersistedTabsExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function URLPersistedTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"dashboard\",\n      label: \"Dashboard\",\n      content: (\n        <div className=\"p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium\">Key Metrics</h4>\n              <p className=\"text-2xl font-bold text-primary\">1,234</p>\n            </div>\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium\">Active Users</h4>\n              <p className=\"text-2xl font-bold text-green-600\">5,678</p>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"reports\",\n      label: \"Reports\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Generated Reports</h3>\n          <div className=\"space-y-2\">\n            <div className=\"p-3 border rounded\">Monthly Sales Report</div>\n            <div className=\"p-3 border rounded\">User Activity Report</div>\n            <div className=\"p-3 border rounded\">Performance Analysis</div>\n          </div>\n        </div>\n      ),\n      disabled: false,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"dashboard\"\n      persistInUrl={true}\n      urlParamName=\"view\"\n      containerHeight=\"300px\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction URLPersistedTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"dashboard\",\n      label: \"Dashboard\",\n      content: (\n        <div className=\"p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium\">Key Metrics</h4>\n              <p className=\"text-2xl font-bold text-primary\">1,234</p>\n            </div>\n            <div className=\"p-4 border rounded-lg\">\n              <h4 className=\"font-medium\">Active Users</h4>\n              <p className=\"text-2xl font-bold text-green-600\">5,678</p>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"reports\",\n      label: \"Reports\",\n      content: (\n        <div className=\"space-y-4 p-4\">\n          <h3 className=\"text-lg font-semibold\">Generated Reports</h3>\n          <div className=\"space-y-2\">\n            <div className=\"p-3 border rounded\">Monthly Sales Report</div>\n            <div className=\"p-3 border rounded\">User Activity Report</div>\n            <div className=\"p-3 border rounded\">Performance Analysis</div>\n          </div>\n        </div>\n      ),\n      disabled: false,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"dashboard\"\n      persistInUrl={true}\n      urlParamName=\"view\"\n      containerHeight=\"300px\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#ScrollableTabsExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "ScrollableTabsExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function ScrollableTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"tab1\",\n      label: \"Overview\",\n      content: <div className=\"space-y-4 p-4\">Overview content</div>,\n    },\n    {\n      value: \"tab2\",\n      label: \"Analytics\",\n      content: <div className=\"space-y-4 p-4\">Analytics content</div>,\n    },\n    {\n      value: \"tab3\",\n      label: \"Performance\",\n      content: <div className=\"space-y-4 p-4\">Performance content</div>,\n    },\n    {\n      value: \"tab4\",\n      label: \"Security\",\n      content: <div className=\"space-y-4 p-4\">Security content</div>,\n    },\n    {\n      value: \"tab5\",\n      label: \"Integration\",\n      content: <div className=\"space-y-4 p-4\">Integration content</div>,\n    },\n    {\n      value: \"tab6\",\n      label: \"Documentation\",\n      content: <div className=\"space-y-4 p-4\">Documentation content</div>,\n    },\n    {\n      value: \"tab7\",\n      label: \"API Reference\",\n      content: <div className=\"space-y-4 p-4\">API Reference content</div>,\n    },\n    {\n      value: \"tab8\",\n      label: \"Support\",\n      content: <div className=\"space-y-4 p-4\">Support content</div>,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"tab1\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction ScrollableTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"tab1\",\n      label: \"Overview\",\n      content: <div className=\"space-y-4 p-4\">Overview content</div>,\n    },\n    {\n      value: \"tab2\",\n      label: \"Analytics\",\n      content: <div className=\"space-y-4 p-4\">Analytics content</div>,\n    },\n    {\n      value: \"tab3\",\n      label: \"Performance\",\n      content: <div className=\"space-y-4 p-4\">Performance content</div>,\n    },\n    {\n      value: \"tab4\",\n      label: \"Security\",\n      content: <div className=\"space-y-4 p-4\">Security content</div>,\n    },\n    {\n      value: \"tab5\",\n      label: \"Integration\",\n      content: <div className=\"space-y-4 p-4\">Integration content</div>,\n    },\n    {\n      value: \"tab6\",\n      label: \"Documentation\",\n      content: <div className=\"space-y-4 p-4\">Documentation content</div>,\n    },\n    {\n      value: \"tab7\",\n      label: \"API Reference\",\n      content: <div className=\"space-y-4 p-4\">API Reference content</div>,\n    },\n    {\n      value: \"tab8\",\n      label: \"Support\",\n      content: <div className=\"space-y-4 p-4\">Support content</div>,\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"tab1\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#ConditionalTabsExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "ConditionalTabsExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function ConditionalTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"public\",\n      label: \"Public Data\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Public Information</h3>\n          <p>This content is available to all users.</p>\n        </div>\n      ),\n    },\n    {\n      value: \"private\",\n      label: \"Private Data\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Private Information</h3>\n          <p>This content requires special permissions.</p>\n        </div>\n      ),\n      disabled: true,\n    },\n    {\n      value: \"help\",\n      label: \"Help & Support\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Help Center</h3>\n          <p>Find answers to common questions and get support.</p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"public\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction ConditionalTabsExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"public\",\n      label: \"Public Data\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Public Information</h3>\n          <p>This content is available to all users.</p>\n        </div>\n      ),\n    },\n    {\n      value: \"private\",\n      label: \"Private Data\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Private Information</h3>\n          <p>This content requires special permissions.</p>\n        </div>\n      ),\n      disabled: true,\n    },\n    {\n      value: \"help\",\n      label: \"Help & Support\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold\">Help Center</h3>\n          <p>Find answers to common questions and get support.</p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"public\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#CompactLayoutExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "CompactLayoutExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function CompactLayoutExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"inbox\",\n      label: \"Inbox\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Inbox Messages</h3>\n          <div className=\"space-y-2\">\n            <div className=\"p-3 border rounded\">Email from John Doe</div>\n            <div className=\"p-3 border rounded\">Team Meeting Notes</div>\n            <div className=\"p-3 border rounded\">Project Update</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"sent\",\n      label: \"Sent\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Sent Messages</h3>\n          <p className=\"text-muted-foreground\">\n            Your sent messages appear here.\n          </p>\n        </div>\n      ),\n    },\n    {\n      value: \"drafts\",\n      label: \"Drafts\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Draft Messages</h3>\n          <p className=\"text-muted-foreground\">\n            Your draft messages appear here.\n          </p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"inbox\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n      tabsLayout=\"compact\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction CompactLayoutExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"inbox\",\n      label: \"Inbox\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Inbox Messages</h3>\n          <div className=\"space-y-2\">\n            <div className=\"p-3 border rounded\">Email from John Doe</div>\n            <div className=\"p-3 border rounded\">Team Meeting Notes</div>\n            <div className=\"p-3 border rounded\">Project Update</div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"sent\",\n      label: \"Sent\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Sent Messages</h3>\n          <p className=\"text-muted-foreground\">\n            Your sent messages appear here.\n          </p>\n        </div>\n      ),\n    },\n    {\n      value: \"drafts\",\n      label: \"Drafts\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Draft Messages</h3>\n          <p className=\"text-muted-foreground\">\n            Your draft messages appear here.\n          </p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"inbox\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n      tabsLayout=\"compact\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/tabs-container-examples.tsx#FullWidthLayoutExample": {
    "path": "components/data-display-examples/tabs-container-examples.tsx",
    "functionName": "FullWidthLayoutExample",
    "extractedCode": {
      "imports": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";",
      "function": "function FullWidthLayoutExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"overview\",\n      label: \"Overview\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">System Overview</h3>\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">CPU Usage</p>\n              <p className=\"text-2xl font-bold\">45%</p>\n            </div>\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">Memory</p>\n              <p className=\"text-2xl font-bold\">8.2 GB</p>\n            </div>\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">Disk</p>\n              <p className=\"text-2xl font-bold\">234 GB</p>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"performance\",\n      label: \"Performance\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Performance Metrics</h3>\n          <p className=\"text-muted-foreground\">Real-time performance data.</p>\n        </div>\n      ),\n    },\n    {\n      value: \"logs\",\n      label: \"Logs\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">System Logs</h3>\n          <p className=\"text-muted-foreground\">View system logs and events.</p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"overview\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n      tabsLayout=\"full\"\n    />\n  );\n}",
      "full": "import { type TabItem, TabsContainer } from \"@helgadigitals/vera-ui\";\nimport { Suspense } from \"react\";\nfunction FullWidthLayoutExample() {\n  const tabs: TabItem[] = [\n    {\n      value: \"overview\",\n      label: \"Overview\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">System Overview</h3>\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">CPU Usage</p>\n              <p className=\"text-2xl font-bold\">45%</p>\n            </div>\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">Memory</p>\n              <p className=\"text-2xl font-bold\">8.2 GB</p>\n            </div>\n            <div className=\"p-4 border rounded\">\n              <p className=\"text-sm text-muted-foreground\">Disk</p>\n              <p className=\"text-2xl font-bold\">234 GB</p>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n    {\n      value: \"performance\",\n      label: \"Performance\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">Performance Metrics</h3>\n          <p className=\"text-muted-foreground\">Real-time performance data.</p>\n        </div>\n      ),\n    },\n    {\n      value: \"logs\",\n      label: \"Logs\",\n      content: (\n        <div className=\"p-4\">\n          <h3 className=\"font-semibold mb-4\">System Logs</h3>\n          <p className=\"text-muted-foreground\">View system logs and events.</p>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <TabsContainerWithSuspense\n      tabs={tabs}\n      defaultTab=\"overview\"\n      persistInUrl={false}\n      containerHeight=\"300px\"\n      tabsLayout=\"full\"\n    />\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#BasicToastExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "BasicToastExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function BasicToastExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button onClick={() => toast(\"Basic toast message\")}>Show Basic Toast</Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction BasicToastExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button onClick={() => toast(\"Basic toast message\")}>Show Basic Toast</Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastTypesExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastTypesExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastTypesExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button onClick={() => toast.success(\"Success! Operation completed\")}>\n        Success\n      </Button>\n      <Button variant={'destructive'} onClick={() => toast.error(\"Error! Something went wrong\")}>\n        Error\n      </Button>\n      <Button variant={'secondary'} onClick={() => toast.warning(\"Warning! Please check your input\")}>\n        Warning\n      </Button>\n      <Button variant={'outline'} onClick={() => toast.info(\"Info: This is an information message\")}>\n        Info\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastTypesExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button onClick={() => toast.success(\"Success! Operation completed\")}>\n        Success\n      </Button>\n      <Button variant={'destructive'} onClick={() => toast.error(\"Error! Something went wrong\")}>\n        Error\n      </Button>\n      <Button variant={'secondary'} onClick={() => toast.warning(\"Warning! Please check your input\")}>\n        Warning\n      </Button>\n      <Button variant={'outline'} onClick={() => toast.info(\"Info: This is an information message\")}>\n        Info\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastWithDescriptionExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastWithDescriptionExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastWithDescriptionExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast(\"Event has been created\", {\n            description: \"Sunday, December 03, 2023 at 9:00 AM\",\n          })\n        }\n      >\n        Show with Description\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastWithDescriptionExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast(\"Event has been created\", {\n            description: \"Sunday, December 03, 2023 at 9:00 AM\",\n          })\n        }\n      >\n        Show with Description\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastWithActionsExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastWithActionsExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastWithActionsExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast(\"Event has been created\", {\n            description: \"Sunday, December 03, 2023 at 9:00 AM\",\n            action: {\n              label: \"Undo\",\n              onClick: () => console.log(\"Undo\"),\n            },\n          })\n        }\n      >\n        Show with Action\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastWithActionsExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast(\"Event has been created\", {\n            description: \"Sunday, December 03, 2023 at 9:00 AM\",\n            action: {\n              label: \"Undo\",\n              onClick: () => console.log(\"Undo\"),\n            },\n          })\n        }\n      >\n        Show with Action\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastWithCustomIconExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastWithCustomIconExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastWithCustomIconExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast.success(\"Starred!\", {\n            icon: <Star className=\"h-4 w-4\" />,\n          })\n        }\n      >\n        Custom Success Icon\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"You have mail!\", {\n            icon: <Mail className=\"h-4 w-4\" />,\n          })\n        }\n      >\n        Custom Icon\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastWithCustomIconExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast.success(\"Starred!\", {\n            icon: <Star className=\"h-4 w-4\" />,\n          })\n        }\n      >\n        Custom Success Icon\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"You have mail!\", {\n            icon: <Mail className=\"h-4 w-4\" />,\n          })\n        }\n      >\n        Custom Icon\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastPositionExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastPositionExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastPositionExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast(\"Toast on top-left\", {\n            position: \"top-left\",\n          })\n        }\n      >\n        Top Left\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on top-right\", {\n            position: \"top-right\",\n          })\n        }\n      >\n        Top Right\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on bottom-left\", {\n            position: \"bottom-left\",\n          })\n        }\n      >\n        Bottom Left\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on bottom-right\", {\n            position: \"bottom-right\",\n          })\n        }\n      >\n        Bottom Right\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastPositionExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast(\"Toast on top-left\", {\n            position: \"top-left\",\n          })\n        }\n      >\n        Top Left\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on top-right\", {\n            position: \"top-right\",\n          })\n        }\n      >\n        Top Right\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on bottom-left\", {\n            position: \"bottom-left\",\n          })\n        }\n      >\n        Bottom Left\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Toast on bottom-right\", {\n            position: \"bottom-right\",\n          })\n        }\n      >\n        Bottom Right\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastDurationExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastDurationExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastDurationExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast(\"Short duration (1s)\", {\n            duration: 1000,\n          })\n        }\n      >\n        1 Second\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Long duration (10s)\", {\n            duration: 10000,\n          })\n        }\n      >\n        10 Seconds\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Persistent toast\", {\n            duration: Infinity,\n            action: {\n              label: \"Dismiss\",\n              onClick: () => {},\n            },\n          })\n        }\n      >\n        Persistent\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastDurationExample() {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Button \n        onClick={() => \n          toast(\"Short duration (1s)\", {\n            duration: 1000,\n          })\n        }\n      >\n        1 Second\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Long duration (10s)\", {\n            duration: 10000,\n          })\n        }\n      >\n        10 Seconds\n      </Button>\n      <Button \n        onClick={() => \n          toast(\"Persistent toast\", {\n            duration: Infinity,\n            action: {\n              label: \"Dismiss\",\n              onClick: () => {},\n            },\n          })\n        }\n      >\n        Persistent\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastPromiseExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastPromiseExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastPromiseExample() {\n  const simulateAsyncOperation = () => {\n    return new Promise<string>((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.5) {\n          resolve(\"Success!\");\n        } else {\n          reject(\"Failed!\");\n        }\n      }, 2000);\n    });\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast.promise(simulateAsyncOperation(), {\n            loading: \"Loading...\",\n            success: (data: string) => `Operation completed: ${data}`,\n            error: (error: string) => `Error: ${error}`,\n          })\n        }\n      >\n        Promise Toast\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastPromiseExample() {\n  const simulateAsyncOperation = () => {\n    return new Promise<string>((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.5) {\n          resolve(\"Success!\");\n        } else {\n          reject(\"Failed!\");\n        }\n      }, 2000);\n    });\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast.promise(simulateAsyncOperation(), {\n            loading: \"Loading...\",\n            success: (data: string) => `Operation completed: ${data}`,\n            error: (error: string) => `Error: ${error}`,\n          })\n        }\n      >\n        Promise Toast\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/data-display-examples/toast-examples.tsx#ToastCustomExample": {
    "path": "components/data-display-examples/toast-examples.tsx",
    "functionName": "ToastCustomExample",
    "extractedCode": {
      "imports": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";",
      "function": "function ToastCustomExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast.custom((t: string | number) => (\n            <div className=\"flex items-center space-x-3 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg border\">\n              <Heart className=\"h-5 w-5 text-red-500\" />\n              <div>\n                <p className=\"font-semibold\">Custom Toast</p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  This is a completely custom toast\n                </p>\n              </div>\n              <Button \n                size=\"sm\" \n                variant=\"ghost\"\n                onClick={() => toast.dismiss(t)}\n              >\n                ×\n              </Button>\n            </div>\n          ))\n        }\n      >\n        Custom Toast\n      </Button>\n    </div>\n  );\n}",
      "full": "import { toast } from \"@helgadigitals/vera-ui\";\nimport { Button } from \"@helgadigitals/vera-ui\";\nimport { Star, Heart, Mail } from \"lucide-react\";\nfunction ToastCustomExample() {\n  return (\n    <div className=\"space-y-2\">\n      <Button \n        onClick={() => \n          toast.custom((t: string | number) => (\n            <div className=\"flex items-center space-x-3 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg border\">\n              <Heart className=\"h-5 w-5 text-red-500\" />\n              <div>\n                <p className=\"font-semibold\">Custom Toast</p>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  This is a completely custom toast\n                </p>\n              </div>\n              <Button \n                size=\"sm\" \n                variant=\"ghost\"\n                onClick={() => toast.dismiss(t)}\n              >\n                ×\n              </Button>\n            </div>\n          ))\n        }\n      >\n        Custom Toast\n      </Button>\n    </div>\n  );\n}"
    }
  },
  "components/form-components-examples/button-examples.tsx#ButtonUsageExample": {
    "path": "components/form-components-examples/button-examples.tsx",
    "functionName": "ButtonUsageExample",
    "extractedCode": {
      "imports": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"",
      "function": "function ButtonUsageExample() {\n  return <Button>Click me</Button>\n}",
      "full": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"\nfunction ButtonUsageExample() {\n  return <Button>Click me</Button>\n}"
    }
  },
  "components/form-components-examples/button-examples.tsx#ButtonVariantsExample": {
    "path": "components/form-components-examples/button-examples.tsx",
    "functionName": "ButtonVariantsExample",
    "extractedCode": {
      "imports": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"",
      "function": "function ButtonVariantsExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Button variant=\"default\">Default</Button>\n      <Button variant=\"destructive\">Destructive</Button>\n      <Button variant=\"outline\">Outline</Button>\n      <Button variant=\"secondary\">Secondary</Button>\n      <Button variant=\"ghost\">Ghost</Button>\n      <Button variant=\"link\">Link</Button>\n    </div>\n  )\n}",
      "full": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"\nfunction ButtonVariantsExample() {\n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      <Button variant=\"default\">Default</Button>\n      <Button variant=\"destructive\">Destructive</Button>\n      <Button variant=\"outline\">Outline</Button>\n      <Button variant=\"secondary\">Secondary</Button>\n      <Button variant=\"ghost\">Ghost</Button>\n      <Button variant=\"link\">Link</Button>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/button-examples.tsx#ButtonSizesExample": {
    "path": "components/form-components-examples/button-examples.tsx",
    "functionName": "ButtonSizesExample",
    "extractedCode": {
      "imports": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"",
      "function": "function ButtonSizesExample() {\n  return (\n    <div className=\"flex flex-wrap items-center gap-2\">\n      <Button size=\"sm\">Small</Button>\n      <Button size=\"default\">Default</Button>\n      <Button size=\"lg\">Large</Button>\n      <Button size=\"icon\">\n        <PlusIcon className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  )\n}",
      "full": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"\nfunction ButtonSizesExample() {\n  return (\n    <div className=\"flex flex-wrap items-center gap-2\">\n      <Button size=\"sm\">Small</Button>\n      <Button size=\"default\">Default</Button>\n      <Button size=\"lg\">Large</Button>\n      <Button size=\"icon\">\n        <PlusIcon className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/button-examples.tsx#ButtonIconExample": {
    "path": "components/form-components-examples/button-examples.tsx",
    "functionName": "ButtonIconExample",
    "extractedCode": {
      "imports": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"",
      "function": "function ButtonIconExample() {\n  return (\n    <Button size=\"icon\" aria-label=\"Add new item\">\n      <PlusIcon className=\"h-4 w-4\" />\n    </Button>\n  )\n}",
      "full": "import { Button } from \"@helgadigitals/vera-ui\"\nimport { PlusIcon } from \"lucide-react\"\nfunction ButtonIconExample() {\n  return (\n    <Button size=\"icon\" aria-label=\"Add new item\">\n      <PlusIcon className=\"h-4 w-4\" />\n    </Button>\n  )\n}"
    }
  },
  "components/form-components-examples/checkbox-examples.tsx#CheckboxExample": {
    "path": "components/form-components-examples/checkbox-examples.tsx",
    "functionName": "CheckboxExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"",
      "function": "function CheckboxExample() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms\" />\n      <label htmlFor=\"terms\">Accept terms and conditions</label>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"\nfunction CheckboxExample() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms\" />\n      <label htmlFor=\"terms\">Accept terms and conditions</label>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/checkbox-examples.tsx#BasicCheckboxExample": {
    "path": "components/form-components-examples/checkbox-examples.tsx",
    "functionName": "BasicCheckboxExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"",
      "function": "function BasicCheckboxExample() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"example\" />\n      <label htmlFor=\"example\">Example checkbox</label>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"\nfunction BasicCheckboxExample() {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"example\" />\n      <label htmlFor=\"example\">Example checkbox</label>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/checkbox-examples.tsx#DisabledExample": {
    "path": "components/form-components-examples/checkbox-examples.tsx",
    "functionName": "DisabledExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"",
      "function": "function DisabledExample() {\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"disabled-unchecked\" disabled />\n        <label htmlFor=\"disabled-unchecked\">Disabled unchecked</label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"disabled-checked\" disabled checked />\n        <label htmlFor=\"disabled-checked\">Disabled checked</label>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"\nfunction DisabledExample() {\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"disabled-unchecked\" disabled />\n        <label htmlFor=\"disabled-unchecked\">Disabled unchecked</label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"disabled-checked\" disabled checked />\n        <label htmlFor=\"disabled-checked\">Disabled checked</label>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/checkbox-examples.tsx#CheckboxFormExample": {
    "path": "components/form-components-examples/checkbox-examples.tsx",
    "functionName": "CheckboxFormExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"",
      "function": "function CheckboxFormExample() {\n  const { control, handleSubmit } = useForm()\n\n  const onSubmit = (data: Record<string, unknown>) => {\n    console.log(data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n      <Controller\n        name=\"newsletter\"\n        control={control}\n        render={({ field }) => (\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox\n              id=\"newsletter\"\n              checked={field.value}\n              onCheckedChange={field.onChange}\n            />\n            <label htmlFor=\"newsletter\">Subscribe to newsletter</label>\n          </div>\n        )}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"\nfunction CheckboxFormExample() {\n  const { control, handleSubmit } = useForm()\n\n  const onSubmit = (data: Record<string, unknown>) => {\n    console.log(data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n      <Controller\n        name=\"newsletter\"\n        control={control}\n        render={({ field }) => (\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox\n              id=\"newsletter\"\n              checked={field.value}\n              onCheckedChange={field.onChange}\n            />\n            <label htmlFor=\"newsletter\">Subscribe to newsletter</label>\n          </div>\n        )}\n      />\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  )\n}"
    }
  },
  "components/form-components-examples/checkbox-examples.tsx#CheckboxIndeterminateExample": {
    "path": "components/form-components-examples/checkbox-examples.tsx",
    "functionName": "CheckboxIndeterminateExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"",
      "function": "function CheckboxIndeterminateExample() {\n  const [items, setItems] = useState([\n    { id: 1, checked: false, label: \"Item 1\" },\n    { id: 2, checked: true, label: \"Item 2\" },\n    { id: 3, checked: false, label: \"Item 3\" },\n  ])\n\n  const allChecked = items.every((item) => item.checked)\n  const someChecked = items.some((item) => item.checked) && !allChecked\n\n  const handleSelectAll = (checked: boolean | string) => {\n    setItems(items.map((item) => ({ ...item, checked: checked === true })))\n  }\n\n  const handleItemChange = (id: number, checked: boolean | string) => {\n    setItems(items.map((item) => \n      item.id === id ? { ...item, checked: checked === true } : item\n    ))\n  }\n\n  return (\n    <div className=\"space-y-2\">\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox \n        id=\"select-all\"\n        checked={someChecked ? \"indeterminate\" : allChecked}\n        onCheckedChange={handleSelectAll}\n      />\n      <label htmlFor=\"select-all\">Select all</label>\n    </div>\n    <div className=\"ml-6 space-y-2\">\n      {items.map((item) => (\n        <div key={item.id} className=\"flex items-center space-x-2\">\n          <Checkbox \n            id={`item-${item.id}`}\n            checked={item.checked}\n            onCheckedChange={(checked) => handleItemChange(item.id, checked)}\n          />\n          <label htmlFor={`item-${item.id}`}>{item.label}</label>\n        </div>\n      ))}\n    </div>\n  </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Checkbox, Button  } from \"@helgadigitals/vera-ui\"\nimport { useForm, Controller } from \"react-hook-form\"\nfunction CheckboxIndeterminateExample() {\n  const [items, setItems] = useState([\n    { id: 1, checked: false, label: \"Item 1\" },\n    { id: 2, checked: true, label: \"Item 2\" },\n    { id: 3, checked: false, label: \"Item 3\" },\n  ])\n\n  const allChecked = items.every((item) => item.checked)\n  const someChecked = items.some((item) => item.checked) && !allChecked\n\n  const handleSelectAll = (checked: boolean | string) => {\n    setItems(items.map((item) => ({ ...item, checked: checked === true })))\n  }\n\n  const handleItemChange = (id: number, checked: boolean | string) => {\n    setItems(items.map((item) => \n      item.id === id ? { ...item, checked: checked === true } : item\n    ))\n  }\n\n  return (\n    <div className=\"space-y-2\">\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox \n        id=\"select-all\"\n        checked={someChecked ? \"indeterminate\" : allChecked}\n        onCheckedChange={handleSelectAll}\n      />\n      <label htmlFor=\"select-all\">Select all</label>\n    </div>\n    <div className=\"ml-6 space-y-2\">\n      {items.map((item) => (\n        <div key={item.id} className=\"flex items-center space-x-2\">\n          <Checkbox \n            id={`item-${item.id}`}\n            checked={item.checked}\n            onCheckedChange={(checked) => handleItemChange(item.id, checked)}\n          />\n          <label htmlFor={`item-${item.id}`}>{item.label}</label>\n        </div>\n      ))}\n    </div>\n  </div>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#ZodExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "ZodExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function ZodExample() {\n  const form = useForm<z.infer<typeof schema>>({\n    resolver: zodResolver(schema),\n    defaultValues: { email: \"\", password: \"\" },\n  })\n\n  function onSubmit(values: z.infer<typeof schema>) {\n    console.log(\"Form submitted:\", values)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input type=\"email\" placeholder=\"Enter your email\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"Enter password\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction ZodExample() {\n  const form = useForm<z.infer<typeof schema>>({\n    resolver: zodResolver(schema),\n    defaultValues: { email: \"\", password: \"\" },\n  })\n\n  function onSubmit(values: z.infer<typeof schema>) {\n    console.log(\"Form submitted:\", values)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input type=\"email\" placeholder=\"Enter your email\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"Enter password\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#ErrorStateExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "ErrorStateExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function ErrorStateExample() {\n  const form = useForm<z.infer<typeof errorSchema>>({\n    resolver: zodResolver(errorSchema),\n    defaultValues: { email: \"\", username: \"\" },\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  {...field}\n                  className={fieldState.error ? \"border-red-500\" : \"\"}\n                />\n              </FormControl>\n              {fieldState.error && (\n                <FormMessage className=\"text-red-600\" />\n              )}\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage className=\"text-orange-500 font-medium\" />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction ErrorStateExample() {\n  const form = useForm<z.infer<typeof errorSchema>>({\n    resolver: zodResolver(errorSchema),\n    defaultValues: { email: \"\", username: \"\" },\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field, fieldState }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input \n                  {...field}\n                  className={fieldState.error ? \"border-red-500\" : \"\"}\n                />\n              </FormControl>\n              {fieldState.error && (\n                <FormMessage className=\"text-red-600\" />\n              )}\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input {...field} />\n              </FormControl>\n              <FormMessage className=\"text-orange-500 font-medium\" />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#SubmissionStateExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "SubmissionStateExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function SubmissionStateExample() {\n  const form = useForm({\n    defaultValues: { message: \"\" },\n  })\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const onSubmit = async (data: { message: string }) => {\n    setIsSubmitting(true)\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      console.log(\"Form submitted:\", data)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"message\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Message</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your message\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? \"Submitting...\" : \"Submit\"}\n        </Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction SubmissionStateExample() {\n  const form = useForm({\n    defaultValues: { message: \"\" },\n  })\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const onSubmit = async (data: { message: string }) => {\n    setIsSubmitting(true)\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      console.log(\"Form submitted:\", data)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"message\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Message</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your message\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? \"Submitting...\" : \"Submit\"}\n        </Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#ConditionalFieldsExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "ConditionalFieldsExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function ConditionalFieldsExample() {\n  const form = useForm({\n    defaultValues: {\n      showAdvanced: false,\n      advancedOption: \"\",\n    },\n  })\n\n  const showAdvanced = form.watch(\"showAdvanced\")\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"showAdvanced\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <FormLabel>Show advanced options</FormLabel>\n            </FormItem>\n          )}\n        />\n        \n        {showAdvanced && (\n          <FormField\n            control={form.control}\n            name=\"advancedOption\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Advanced Setting</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Enter advanced setting\" {...field} />\n                </FormControl>\n              </FormItem>\n            )}\n          />\n        )}\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction ConditionalFieldsExample() {\n  const form = useForm({\n    defaultValues: {\n      showAdvanced: false,\n      advancedOption: \"\",\n    },\n  })\n\n  const showAdvanced = form.watch(\"showAdvanced\")\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"showAdvanced\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <FormLabel>Show advanced options</FormLabel>\n            </FormItem>\n          )}\n        />\n        \n        {showAdvanced && (\n          <FormField\n            control={form.control}\n            name=\"advancedOption\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Advanced Setting</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Enter advanced setting\" {...field} />\n                </FormControl>\n              </FormItem>\n            )}\n          />\n        )}\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#FormResetExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "FormResetExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function FormResetExample() {\n  const form = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n    },\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your name\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your email\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"flex gap-2\">\n          <Button \n            type=\"button\" \n            variant=\"outline\"\n            onClick={() => form.reset()}\n          >\n            Reset\n          </Button>\n\n          <Button \n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => form.reset({ name: \"\", email: \"user@example.com\" })}\n          >\n            Reset to Template\n          </Button>\n\n          <Button \n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => form.resetField(\"email\")}\n          >\n            Clear Email\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction FormResetExample() {\n  const form = useForm({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n    },\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your name\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your email\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"flex gap-2\">\n          <Button \n            type=\"button\" \n            variant=\"outline\"\n            onClick={() => form.reset()}\n          >\n            Reset\n          </Button>\n\n          <Button \n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => form.reset({ name: \"\", email: \"user@example.com\" })}\n          >\n            Reset to Template\n          </Button>\n\n          <Button \n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => form.resetField(\"email\")}\n          >\n            Clear Email\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#CustomLayoutExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "CustomLayoutExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function CustomLayoutExample() {\n  const form = useForm({\n    defaultValues: {\n      horizontal: \"\",\n      inline: \"\",\n    },\n  })\n\n  return (\n    <Form {...form}>\n      <div className=\"space-y-6\">\n        {/* Horizontal form layout */}\n        <FormField\n          control={form.control}\n          name=\"horizontal\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-center space-x-4 space-y-0\">\n              <FormLabel className=\"w-1/4\">Horizontal Label</FormLabel>\n              <FormControl className=\"flex-1\">\n                <Input {...field} />\n              </FormControl>\n            </FormItem>\n          )}\n        />\n\n        {/* Inline form */}\n        <FormField\n          control={form.control}\n          name=\"inline\"\n          render={({ field }) => (\n            <FormItem className=\"flex items-center gap-2\">\n              <FormLabel>Search:</FormLabel>\n              <FormControl>\n                <Input className=\"w-auto\" {...field} />\n              </FormControl>\n              <Button size=\"sm\">Go</Button>\n            </FormItem>\n          )}\n        />\n      </div>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction CustomLayoutExample() {\n  const form = useForm({\n    defaultValues: {\n      horizontal: \"\",\n      inline: \"\",\n    },\n  })\n\n  return (\n    <Form {...form}>\n      <div className=\"space-y-6\">\n        {/* Horizontal form layout */}\n        <FormField\n          control={form.control}\n          name=\"horizontal\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-center space-x-4 space-y-0\">\n              <FormLabel className=\"w-1/4\">Horizontal Label</FormLabel>\n              <FormControl className=\"flex-1\">\n                <Input {...field} />\n              </FormControl>\n            </FormItem>\n          )}\n        />\n\n        {/* Inline form */}\n        <FormField\n          control={form.control}\n          name=\"inline\"\n          render={({ field }) => (\n            <FormItem className=\"flex items-center gap-2\">\n              <FormLabel>Search:</FormLabel>\n              <FormControl>\n                <Input className=\"w-auto\" {...field} />\n              </FormControl>\n              <Button size=\"sm\">Go</Button>\n            </FormItem>\n          )}\n        />\n      </div>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#ProfileSettingsFormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "ProfileSettingsFormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function ProfileSettingsFormExample() {\n  const form = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      bio: \"\",\n      country: \"\",\n      website: \"\",\n      newsletter: false\n    }\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormItem>\n            <FormLabel>First Name</FormLabel>\n            <FormControl>\n              <Input placeholder=\"John\" />\n            </FormControl>\n          </FormItem>\n\n          <FormItem>\n            <FormLabel>Last Name</FormLabel>\n            <FormControl>\n              <Input placeholder=\"Doe\" />\n            </FormControl>\n          </FormItem>\n        </div>\n\n        <FormItem>\n          <FormLabel>Bio</FormLabel>\n          <FormControl>\n            <Textarea\n              placeholder=\"Tell us about yourself...\"\n              className=\"resize-none\"\n            />\n          </FormControl>\n          <FormDescription>\n            Brief description for your profile. Maximum 500 characters.\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Country</FormLabel>\n          <FormControl>\n            <Select>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select your country\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"us\">United States</SelectItem>\n                <SelectItem value=\"ca\">Canada</SelectItem>\n                <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                <SelectItem value=\"au\">Australia</SelectItem>\n                <SelectItem value=\"de\">Germany</SelectItem>\n                <SelectItem value=\"fr\">France</SelectItem>\n              </SelectContent>\n            </Select>\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Website</FormLabel>\n          <FormControl>\n            <Input \n              type=\"url\" \n              placeholder=\"https://yourwebsite.com\" \n            />\n          </FormControl>\n          <FormDescription>\n            Your personal or professional website (optional)\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"newsletter\" />\n            <FormLabel htmlFor=\"newsletter\">Subscribe to newsletter</FormLabel>\n          </div>\n          <FormDescription>\n            Receive updates about new features and announcements.\n          </FormDescription>\n        </FormItem>\n\n        <div className=\"flex gap-4\">\n          <Button type=\"submit\">Save Changes</Button>\n          <Button type=\"button\" variant=\"outline\">\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction ProfileSettingsFormExample() {\n  const form = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      bio: \"\",\n      country: \"\",\n      website: \"\",\n      newsletter: false\n    }\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormItem>\n            <FormLabel>First Name</FormLabel>\n            <FormControl>\n              <Input placeholder=\"John\" />\n            </FormControl>\n          </FormItem>\n\n          <FormItem>\n            <FormLabel>Last Name</FormLabel>\n            <FormControl>\n              <Input placeholder=\"Doe\" />\n            </FormControl>\n          </FormItem>\n        </div>\n\n        <FormItem>\n          <FormLabel>Bio</FormLabel>\n          <FormControl>\n            <Textarea\n              placeholder=\"Tell us about yourself...\"\n              className=\"resize-none\"\n            />\n          </FormControl>\n          <FormDescription>\n            Brief description for your profile. Maximum 500 characters.\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Country</FormLabel>\n          <FormControl>\n            <Select>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select your country\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"us\">United States</SelectItem>\n                <SelectItem value=\"ca\">Canada</SelectItem>\n                <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                <SelectItem value=\"au\">Australia</SelectItem>\n                <SelectItem value=\"de\">Germany</SelectItem>\n                <SelectItem value=\"fr\">France</SelectItem>\n              </SelectContent>\n            </Select>\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Website</FormLabel>\n          <FormControl>\n            <Input \n              type=\"url\" \n              placeholder=\"https://yourwebsite.com\" \n            />\n          </FormControl>\n          <FormDescription>\n            Your personal or professional website (optional)\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"newsletter\" />\n            <FormLabel htmlFor=\"newsletter\">Subscribe to newsletter</FormLabel>\n          </div>\n          <FormDescription>\n            Receive updates about new features and announcements.\n          </FormDescription>\n        </FormItem>\n\n        <div className=\"flex gap-4\">\n          <Button type=\"submit\">Save Changes</Button>\n          <Button type=\"button\" variant=\"outline\">\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#DynamicFieldsFormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "DynamicFieldsFormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function DynamicFieldsFormExample() {\n  const [emails, setEmails] = useState([\"\"])\n  const form = useForm({\n    defaultValues: {\n      name: \"\"\n    }\n  })\n\n  const addEmail = () => {\n    setEmails([...emails, \"\"])\n  }\n\n  const removeEmail = (index: number) => {\n    setEmails(emails.filter((_, i) => i !== index))\n  }\n\n  const updateEmail = (index: number, value: string) => {\n    const newEmails = [...emails]\n    newEmails[index] = value\n    setEmails(newEmails)\n  }\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Name</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Your name\" />\n          </FormControl>\n        </FormItem>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Email Addresses</FormLabel>\n          {emails.map((email, index) => (\n            <FormItem key={index}>\n              <div className=\"flex gap-2\">\n                <FormControl>\n                  <Input\n                    className=\"flex-1\"\n                    placeholder=\"email@example.com\"\n                    value={email}\n                    onChange={(e) => updateEmail(index, e.target.value)}\n                  />\n                </FormControl>\n                {emails.length > 1 && (\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => removeEmail(index)}\n                  >\n                    Remove\n                  </Button>\n                )}\n              </div>\n            </FormItem>\n          ))}\n          \n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={addEmail}\n          >\n            Add Email\n          </Button>\n        </div>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"terms\" />\n            <FormLabel htmlFor=\"terms\">I agree to the terms and conditions</FormLabel>\n          </div>\n        </FormItem>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction DynamicFieldsFormExample() {\n  const [emails, setEmails] = useState([\"\"])\n  const form = useForm({\n    defaultValues: {\n      name: \"\"\n    }\n  })\n\n  const addEmail = () => {\n    setEmails([...emails, \"\"])\n  }\n\n  const removeEmail = (index: number) => {\n    setEmails(emails.filter((_, i) => i !== index))\n  }\n\n  const updateEmail = (index: number, value: string) => {\n    const newEmails = [...emails]\n    newEmails[index] = value\n    setEmails(newEmails)\n  }\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Name</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Your name\" />\n          </FormControl>\n        </FormItem>\n\n        <div className=\"space-y-4\">\n          <FormLabel>Email Addresses</FormLabel>\n          {emails.map((email, index) => (\n            <FormItem key={index}>\n              <div className=\"flex gap-2\">\n                <FormControl>\n                  <Input\n                    className=\"flex-1\"\n                    placeholder=\"email@example.com\"\n                    value={email}\n                    onChange={(e) => updateEmail(index, e.target.value)}\n                  />\n                </FormControl>\n                {emails.length > 1 && (\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => removeEmail(index)}\n                  >\n                    Remove\n                  </Button>\n                )}\n              </div>\n            </FormItem>\n          ))}\n          \n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={addEmail}\n          >\n            Add Email\n          </Button>\n        </div>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"terms\" />\n            <FormLabel htmlFor=\"terms\">I agree to the terms and conditions</FormLabel>\n          </div>\n        </FormItem>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#FileUploadFormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "FileUploadFormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function FileUploadFormExample() {\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      public: false\n    }\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Title</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Enter title\" />\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Description</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Enter description\" />\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Attachments</FormLabel>\n          <FormControl>\n            <Input\n              type=\"file\"\n              multiple\n              accept=\"image/*,.pdf,.doc,.docx\"\n            />\n          </FormControl>\n          <FormDescription>\n            Upload images, PDFs, or documents (max 10MB each)\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"public\" />\n            <FormLabel htmlFor=\"public\">Make files publicly accessible</FormLabel>\n          </div>\n          <FormDescription>\n            Allow others to view and download these files.\n          </FormDescription>\n        </FormItem>\n\n        <Button type=\"submit\">Upload Files</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction FileUploadFormExample() {\n  const form = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      public: false\n    }\n  })\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Title</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Enter title\" />\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Description</FormLabel>\n          <FormControl>\n            <Input placeholder=\"Enter description\" />\n          </FormControl>\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Attachments</FormLabel>\n          <FormControl>\n            <Input\n              type=\"file\"\n              multiple\n              accept=\"image/*,.pdf,.doc,.docx\"\n            />\n          </FormControl>\n          <FormDescription>\n            Upload images, PDFs, or documents (max 10MB each)\n          </FormDescription>\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"public\" />\n            <FormLabel htmlFor=\"public\">Make files publicly accessible</FormLabel>\n          </div>\n          <FormDescription>\n            Allow others to view and download these files.\n          </FormDescription>\n        </FormItem>\n\n        <Button type=\"submit\">Upload Files</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#CustomValidationFormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "CustomValidationFormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function CustomValidationFormExample() {\n  const [errors, setErrors] = useState<{[key: string]: string}>({})\n  const form = useForm({\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      privacy: false\n    }\n  })\n\n  const validateForm = (e: React.FormEvent) => {\n    e.preventDefault()\n    const form = e.target as HTMLFormElement\n    const formData = new FormData(form)\n    const username = formData.get('username') as string\n    const email = formData.get('email') as string\n    \n    const newErrors: {[key: string]: string} = {}\n    \n    if (!username) {\n      newErrors.username = \"Username is required\"\n    } else if (username.length < 3) {\n      newErrors.username = \"Username must be at least 3 characters\"\n    } else if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n      newErrors.username = \"Username can only contain letters, numbers, and underscores\"\n    }\n    \n    if (!email) {\n      newErrors.email = \"Email is required\"\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      newErrors.email = \"Please enter a valid email address\"\n    }\n    \n    setErrors(newErrors)\n    \n    if (Object.keys(newErrors).length === 0) {\n      console.log(\"Form submitted successfully!\")\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={validateForm} className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Username</FormLabel>\n          <FormControl>\n            <Input \n              name=\"username\"\n              placeholder=\"Enter username\" \n              className={errors.username ? \"border-red-500\" : \"\"}\n            />\n          </FormControl>\n          {errors.username && (\n            <FormMessage>{errors.username}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Email</FormLabel>\n          <FormControl>\n            <Input \n              name=\"email\"\n              type=\"email\" \n              placeholder=\"Enter email\" \n              className={errors.email ? \"border-red-500\" : \"\"}\n            />\n          </FormControl>\n          {errors.email && (\n            <FormMessage>{errors.email}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"privacy\" />\n            <FormLabel htmlFor=\"privacy\">I accept the privacy policy</FormLabel>\n          </div>\n          <FormDescription>\n            Read our privacy policy to understand how we handle your data.\n          </FormDescription>\n        </FormItem>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction CustomValidationFormExample() {\n  const [errors, setErrors] = useState<{[key: string]: string}>({})\n  const form = useForm({\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      privacy: false\n    }\n  })\n\n  const validateForm = (e: React.FormEvent) => {\n    e.preventDefault()\n    const form = e.target as HTMLFormElement\n    const formData = new FormData(form)\n    const username = formData.get('username') as string\n    const email = formData.get('email') as string\n    \n    const newErrors: {[key: string]: string} = {}\n    \n    if (!username) {\n      newErrors.username = \"Username is required\"\n    } else if (username.length < 3) {\n      newErrors.username = \"Username must be at least 3 characters\"\n    } else if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n      newErrors.username = \"Username can only contain letters, numbers, and underscores\"\n    }\n    \n    if (!email) {\n      newErrors.email = \"Email is required\"\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n      newErrors.email = \"Please enter a valid email address\"\n    }\n    \n    setErrors(newErrors)\n    \n    if (Object.keys(newErrors).length === 0) {\n      console.log(\"Form submitted successfully!\")\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={validateForm} className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Username</FormLabel>\n          <FormControl>\n            <Input \n              name=\"username\"\n              placeholder=\"Enter username\" \n              className={errors.username ? \"border-red-500\" : \"\"}\n            />\n          </FormControl>\n          {errors.username && (\n            <FormMessage>{errors.username}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <FormLabel>Email</FormLabel>\n          <FormControl>\n            <Input \n              name=\"email\"\n              type=\"email\" \n              placeholder=\"Enter email\" \n              className={errors.email ? \"border-red-500\" : \"\"}\n            />\n          </FormControl>\n          {errors.email && (\n            <FormMessage>{errors.email}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"privacy\" />\n            <FormLabel htmlFor=\"privacy\">I accept the privacy policy</FormLabel>\n          </div>\n          <FormDescription>\n            Read our privacy policy to understand how we handle your data.\n          </FormDescription>\n        </FormItem>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#AsyncValidationFormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "AsyncValidationFormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function AsyncValidationFormExample() {\n  const [isChecking, setIsChecking] = useState(false)\n  const [usernameError, setUsernameError] = useState(\"\")\n  const form = useForm({\n    defaultValues: {\n      username: \"\",\n      notifications: false\n    }\n  })\n  \n  // Mock API call\n  const checkUsernameAvailability = async (username: string) => {\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    return username !== \"admin\" && username !== \"test\"\n  }\n\n  const handleUsernameChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    \n    if (!value) {\n      setUsernameError(\"Username is required\")\n      return\n    }\n    \n    if (value.length < 3) {\n      setUsernameError(\"Username must be at least 3 characters\")\n      return\n    }\n    \n    setIsChecking(true)\n    setUsernameError(\"\")\n    \n    try {\n      const isAvailable = await checkUsernameAvailability(value)\n      if (!isAvailable) {\n        setUsernameError(\"Username is already taken\")\n      }\n    } finally {\n      setIsChecking(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Username</FormLabel>\n          <FormControl>\n            <div className=\"relative\">\n              <Input \n                placeholder=\"Enter username\"\n                onChange={handleUsernameChange}\n                className={usernameError ? \"border-red-500\" : \"\"}\n              />\n              {isChecking && (\n                <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-primary border-t-transparent\" />\n                </div>\n              )}\n            </div>\n          </FormControl>\n          <FormDescription>\n            Choose a unique username for your account.\n          </FormDescription>\n          {usernameError && (\n            <FormMessage>{usernameError}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"notifications\" />\n            <FormLabel htmlFor=\"notifications\">Enable notifications</FormLabel>\n          </div>\n          <FormDescription>\n            Receive email notifications for account activity.\n          </FormDescription>\n        </FormItem>\n\n        <Button \n          type=\"submit\" \n          disabled={isChecking || !!usernameError}\n        >\n          Submit\n        </Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction AsyncValidationFormExample() {\n  const [isChecking, setIsChecking] = useState(false)\n  const [usernameError, setUsernameError] = useState(\"\")\n  const form = useForm({\n    defaultValues: {\n      username: \"\",\n      notifications: false\n    }\n  })\n  \n  // Mock API call\n  const checkUsernameAvailability = async (username: string) => {\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    return username !== \"admin\" && username !== \"test\"\n  }\n\n  const handleUsernameChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    \n    if (!value) {\n      setUsernameError(\"Username is required\")\n      return\n    }\n    \n    if (value.length < 3) {\n      setUsernameError(\"Username must be at least 3 characters\")\n      return\n    }\n    \n    setIsChecking(true)\n    setUsernameError(\"\")\n    \n    try {\n      const isAvailable = await checkUsernameAvailability(value)\n      if (!isAvailable) {\n        setUsernameError(\"Username is already taken\")\n      }\n    } finally {\n      setIsChecking(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form className=\"space-y-6\">\n        <FormItem>\n          <FormLabel>Username</FormLabel>\n          <FormControl>\n            <div className=\"relative\">\n              <Input \n                placeholder=\"Enter username\"\n                onChange={handleUsernameChange}\n                className={usernameError ? \"border-red-500\" : \"\"}\n              />\n              {isChecking && (\n                <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-primary border-t-transparent\" />\n                </div>\n              )}\n            </div>\n          </FormControl>\n          <FormDescription>\n            Choose a unique username for your account.\n          </FormDescription>\n          {usernameError && (\n            <FormMessage>{usernameError}</FormMessage>\n          )}\n        </FormItem>\n\n        <FormItem>\n          <div className=\"flex items-center space-x-2\">\n            <Checkbox id=\"notifications\" />\n            <FormLabel htmlFor=\"notifications\">Enable notifications</FormLabel>\n          </div>\n          <FormDescription>\n            Receive email notifications for account activity.\n          </FormDescription>\n        </FormItem>\n\n        <Button \n          type=\"submit\" \n          disabled={isChecking || !!usernameError}\n        >\n          Submit\n        </Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/input-otp-examples.tsx#FormIntegrationExample": {
    "path": "components/form-components-examples/input-otp-examples.tsx",
    "functionName": "FormIntegrationExample",
    "extractedCode": {
      "imports": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors } } = useForm()\n\n  const onSubmit = (data: any) => {\n    console.log(\"Verification code:\", data.code)\n    alert(`Verification code: ${data.code}`)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Verification Code *\n        </label>\n        <Controller\n          name=\"code\"\n          control={control}\n          rules={{\n            required: \"Verification code is required\",\n            minLength: {\n              value: 6,\n              message: \"Please enter the complete 6-digit code\"\n            }\n          }}\n          render={({ field }) => (\n            <InputOTP\n              maxLength={6}\n              value={field.value || \"\"}\n              onChange={field.onChange}\n            >\n              <InputOTPGroup>\n                <InputOTPSlot index={0} />\n                <InputOTPSlot index={1} />\n                <InputOTPSlot index={2} />\n                <InputOTPSlot index={3} />\n                <InputOTPSlot index={4} />\n                <InputOTPSlot index={5} />\n              </InputOTPGroup>\n            </InputOTP>\n          )}\n        />\n        {errors.code && (\n          <p className=\"text-sm text-red-600\">\n            {errors.code.message as string}\n          </p>\n        )}\n      </div>\n\n      <Button type=\"submit\" className=\"w-full\">\n        Verify Code\n      </Button>\n    </form>\n  )\n}",
      "full": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors } } = useForm()\n\n  const onSubmit = (data: any) => {\n    console.log(\"Verification code:\", data.code)\n    alert(`Verification code: ${data.code}`)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Verification Code *\n        </label>\n        <Controller\n          name=\"code\"\n          control={control}\n          rules={{\n            required: \"Verification code is required\",\n            minLength: {\n              value: 6,\n              message: \"Please enter the complete 6-digit code\"\n            }\n          }}\n          render={({ field }) => (\n            <InputOTP\n              maxLength={6}\n              value={field.value || \"\"}\n              onChange={field.onChange}\n            >\n              <InputOTPGroup>\n                <InputOTPSlot index={0} />\n                <InputOTPSlot index={1} />\n                <InputOTPSlot index={2} />\n                <InputOTPSlot index={3} />\n                <InputOTPSlot index={4} />\n                <InputOTPSlot index={5} />\n              </InputOTPGroup>\n            </InputOTP>\n          )}\n        />\n        {errors.code && (\n          <p className=\"text-sm text-red-600\">\n            {errors.code.message as string}\n          </p>\n        )}\n      </div>\n\n      <Button type=\"submit\" className=\"w-full\">\n        Verify Code\n      </Button>\n    </form>\n  )\n}"
    }
  },
  "components/form-components-examples/input-otp-examples.tsx#WithTimerAndResendExample": {
    "path": "components/form-components-examples/input-otp-examples.tsx",
    "functionName": "WithTimerAndResendExample",
    "extractedCode": {
      "imports": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"",
      "function": "function WithTimerAndResendExample() {\n  const [value, setValue] = useState(\"\")\n  const [timeLeft, setTimeLeft] = useState(60)\n  const [canResend, setCanResend] = useState(false)\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000)\n      return () => clearTimeout(timer)\n    } else {\n      setCanResend(true)\n    }\n  }, [timeLeft])\n\n  const handleResend = () => {\n    // Simulate sending new code\n    console.log(\"Resending code...\")\n    alert(\"New verification code sent!\")\n    setTimeLeft(60)\n    setCanResend(false)\n    setValue(\"\")\n  }\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs.toString().padStart(2, '0')}`\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Enter verification code\n        </label>\n        <InputOTP\n          maxLength={6}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot index={0} />\n            <InputOTPSlot index={1} />\n            <InputOTPSlot index={2} />\n            <InputOTPSlot index={3} />\n            <InputOTPSlot index={4} />\n            <InputOTPSlot index={5} />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n\n      <div className=\"text-center space-y-2\">\n        {canResend ? (\n          <Button variant=\"outline\" onClick={handleResend}>\n            Resend Code\n          </Button>\n        ) : (\n          <p className=\"text-sm text-muted-foreground\">\n            Resend code in {formatTime(timeLeft)}\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}",
      "full": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"\nfunction WithTimerAndResendExample() {\n  const [value, setValue] = useState(\"\")\n  const [timeLeft, setTimeLeft] = useState(60)\n  const [canResend, setCanResend] = useState(false)\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000)\n      return () => clearTimeout(timer)\n    } else {\n      setCanResend(true)\n    }\n  }, [timeLeft])\n\n  const handleResend = () => {\n    // Simulate sending new code\n    console.log(\"Resending code...\")\n    alert(\"New verification code sent!\")\n    setTimeLeft(60)\n    setCanResend(false)\n    setValue(\"\")\n  }\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs.toString().padStart(2, '0')}`\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Enter verification code\n        </label>\n        <InputOTP\n          maxLength={6}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot index={0} />\n            <InputOTPSlot index={1} />\n            <InputOTPSlot index={2} />\n            <InputOTPSlot index={3} />\n            <InputOTPSlot index={4} />\n            <InputOTPSlot index={5} />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n\n      <div className=\"text-center space-y-2\">\n        {canResend ? (\n          <Button variant=\"outline\" onClick={handleResend}>\n            Resend Code\n          </Button>\n        ) : (\n          <p className=\"text-sm text-muted-foreground\">\n            Resend code in {formatTime(timeLeft)}\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/input-otp-examples.tsx#CustomStylingExample": {
    "path": "components/form-components-examples/input-otp-examples.tsx",
    "functionName": "CustomStylingExample",
    "extractedCode": {
      "imports": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"",
      "function": "function CustomStylingExample() {\n  const [value, setValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Large slots */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Large OTP Input</label>\n        <InputOTP\n          maxLength={4}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot \n              index={0} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={1} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={2} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={3} \n              className=\"w-12 h-12 text-lg\"\n            />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n\n      {/* Rounded slots */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Rounded OTP Input</label>\n        <InputOTP\n          maxLength={6}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot \n              index={0} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={1} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={2} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={3} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={4} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={5} \n              className=\"rounded-full\"\n            />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n    </div>\n  )\n}",
      "full": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"\nfunction CustomStylingExample() {\n  const [value, setValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Large slots */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Large OTP Input</label>\n        <InputOTP\n          maxLength={4}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot \n              index={0} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={1} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={2} \n              className=\"w-12 h-12 text-lg\"\n            />\n            <InputOTPSlot \n              index={3} \n              className=\"w-12 h-12 text-lg\"\n            />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n\n      {/* Rounded slots */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Rounded OTP Input</label>\n        <InputOTP\n          maxLength={6}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot \n              index={0} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={1} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={2} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={3} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={4} \n              className=\"rounded-full\"\n            />\n            <InputOTPSlot \n              index={5} \n              className=\"rounded-full\"\n            />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/input-otp-examples.tsx#AlphanumericCodeExample": {
    "path": "components/form-components-examples/input-otp-examples.tsx",
    "functionName": "AlphanumericCodeExample",
    "extractedCode": {
      "imports": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"",
      "function": "function AlphanumericCodeExample() {\n  const [value, setValue] = useState(\"\")\n  const REGEXP_ONLY_CHARS_AND_DIGITS = \"^[A-Z0-9]+$\"\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Enter backup code (letters and numbers)\n        </label>\n        <InputOTP\n          maxLength={8}\n          pattern={REGEXP_ONLY_CHARS_AND_DIGITS}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot index={0} />\n            <InputOTPSlot index={1} />\n            <InputOTPSlot index={2} />\n            <InputOTPSlot index={3} />\n          </InputOTPGroup>\n          <InputOTPSeparator />\n          <InputOTPGroup>\n            <InputOTPSlot index={4} />\n            <InputOTPSlot index={5} />\n            <InputOTPSlot index={6} />\n            <InputOTPSlot index={7} />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n      \n      <p className=\"text-xs text-muted-foreground text-center\">\n        Format: XXXX-XXXX (letters and numbers only)\n      </p>\n    </div>\n  )\n}",
      "full": "import React, { useState, useEffect } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  InputOTPSeparator,\n  Button,\n} from \"@helgadigitals/vera-ui\"\nfunction AlphanumericCodeExample() {\n  const [value, setValue] = useState(\"\")\n  const REGEXP_ONLY_CHARS_AND_DIGITS = \"^[A-Z0-9]+$\"\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">\n          Enter backup code (letters and numbers)\n        </label>\n        <InputOTP\n          maxLength={8}\n          pattern={REGEXP_ONLY_CHARS_AND_DIGITS}\n          value={value}\n          onChange={(value) => setValue(value)}\n        >\n          <InputOTPGroup>\n            <InputOTPSlot index={0} />\n            <InputOTPSlot index={1} />\n            <InputOTPSlot index={2} />\n            <InputOTPSlot index={3} />\n          </InputOTPGroup>\n          <InputOTPSeparator />\n          <InputOTPGroup>\n            <InputOTPSlot index={4} />\n            <InputOTPSlot index={5} />\n            <InputOTPSlot index={6} />\n            <InputOTPSlot index={7} />\n          </InputOTPGroup>\n        </InputOTP>\n      </div>\n      \n      <p className=\"text-xs text-muted-foreground text-center\">\n        Format: XXXX-XXXX (letters and numbers only)\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/label-examples.tsx#WithDescriptionExample": {
    "path": "components/form-components-examples/label-examples.tsx",
    "functionName": "WithDescriptionExample",
    "extractedCode": {
      "imports": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"",
      "function": "function WithDescriptionExample() {\n  return (\n    <div className=\"space-y-2\">\n      <div>\n        <Label htmlFor=\"api-key\" className=\"flex items-center gap-2\">\n          <User className=\"h-4 w-4\" />\n          API Key\n        </Label>\n        <p className=\"text-sm text-muted-foreground\">\n          Your API key is used to authenticate requests\n        </p>\n      </div>\n      <Input id=\"api-key\" type=\"text\" placeholder=\"Enter your API key\" />\n      <Button type=\"button\" variant=\"outline\" size=\"sm\">\n        Generate New Key\n      </Button>\n    </div>\n  )\n}",
      "full": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"\nfunction WithDescriptionExample() {\n  return (\n    <div className=\"space-y-2\">\n      <div>\n        <Label htmlFor=\"api-key\" className=\"flex items-center gap-2\">\n          <User className=\"h-4 w-4\" />\n          API Key\n        </Label>\n        <p className=\"text-sm text-muted-foreground\">\n          Your API key is used to authenticate requests\n        </p>\n      </div>\n      <Input id=\"api-key\" type=\"text\" placeholder=\"Enter your API key\" />\n      <Button type=\"button\" variant=\"outline\" size=\"sm\">\n        Generate New Key\n      </Button>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/label-examples.tsx#FormIntegrationExample": {
    "path": "components/form-components-examples/label-examples.tsx",
    "functionName": "FormIntegrationExample",
    "extractedCode": {
      "imports": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationExample() {\n  const form = useForm({\n    defaultValues: {\n      standalone: \"\",\n      integrated: \"\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        {/* Using standalone Label */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"standalone\" className=\"flex items-center gap-2\">\n            <User className=\"h-4 w-4\" />\n            Standalone Label\n          </Label>\n          <Input id=\"standalone\" type=\"text\" placeholder=\"Enter standalone value\" />\n        </div>\n\n        {/* Using FormLabel (automatically integrated) */}\n        <FormField\n          control={form.control}\n          name=\"integrated\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel className=\"flex items-center gap-2\">\n                <User className=\"h-4 w-4\" />\n                Integrated Form Label\n              </FormLabel>\n              <FormControl>\n                <Input {...field} placeholder=\"Enter integrated value\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex gap-2\">\n          <Button type=\"submit\">Submit Form</Button>\n          <Button type=\"button\" variant=\"outline\" onClick={() => form.reset()}>\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}",
      "full": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationExample() {\n  const form = useForm({\n    defaultValues: {\n      standalone: \"\",\n      integrated: \"\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        {/* Using standalone Label */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"standalone\" className=\"flex items-center gap-2\">\n            <User className=\"h-4 w-4\" />\n            Standalone Label\n          </Label>\n          <Input id=\"standalone\" type=\"text\" placeholder=\"Enter standalone value\" />\n        </div>\n\n        {/* Using FormLabel (automatically integrated) */}\n        <FormField\n          control={form.control}\n          name=\"integrated\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel className=\"flex items-center gap-2\">\n                <User className=\"h-4 w-4\" />\n                Integrated Form Label\n              </FormLabel>\n              <FormControl>\n                <Input {...field} placeholder=\"Enter integrated value\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex gap-2\">\n          <Button type=\"submit\">Submit Form</Button>\n          <Button type=\"button\" variant=\"outline\" onClick={() => form.reset()}>\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/label-examples.tsx#CustomStylingExample": {
    "path": "components/form-components-examples/label-examples.tsx",
    "functionName": "CustomStylingExample",
    "extractedCode": {
      "imports": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"",
      "function": "function CustomStylingExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Large label */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"large\" className=\"text-base font-semibold flex items-center gap-2\">\n          <User className=\"h-5 w-5\" />\n          Large Label\n        </Label>\n        <Input id=\"large\" type=\"text\" placeholder=\"Large label input\" />\n        <Button variant=\"secondary\" size=\"sm\">\n          Update Large Field\n        </Button>\n      </div>\n\n      {/* Colored label */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"colored\" className=\"text-blue-600 font-medium flex items-center gap-2\">\n          <User className=\"h-4 w-4 text-blue-600\" />\n          Colored Label\n        </Label>\n        <Input id=\"colored\" type=\"text\" placeholder=\"Colored label input\" />\n        <Button variant=\"outline\" className=\"text-blue-600 border-blue-600 hover:bg-blue-50\">\n          Save Colored Field\n        </Button>\n      </div>\n\n      {/* Label with background */}\n      <div className=\"space-y-2\">\n        <Label \n          htmlFor=\"background\" \n          className=\"bg-muted px-2 py-1 rounded text-sm flex items-center gap-2 w-fit\"\n        >\n          <User className=\"h-4 w-4\" />\n          Label with Background\n        </Label>\n        <Input id=\"background\" type=\"text\" placeholder=\"Background label input\" />\n        <div className=\"flex gap-2\">\n          <Button size=\"sm\">Submit</Button>\n          <Button variant=\"ghost\" size=\"sm\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useForm } from \"react-hook-form\"\nimport { User } from \"lucide-react\"\nimport { \n  Label, \n  Input, \n  Button,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n  Form\n} from \"@helgadigitals/vera-ui\"\nfunction CustomStylingExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Large label */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"large\" className=\"text-base font-semibold flex items-center gap-2\">\n          <User className=\"h-5 w-5\" />\n          Large Label\n        </Label>\n        <Input id=\"large\" type=\"text\" placeholder=\"Large label input\" />\n        <Button variant=\"secondary\" size=\"sm\">\n          Update Large Field\n        </Button>\n      </div>\n\n      {/* Colored label */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"colored\" className=\"text-blue-600 font-medium flex items-center gap-2\">\n          <User className=\"h-4 w-4 text-blue-600\" />\n          Colored Label\n        </Label>\n        <Input id=\"colored\" type=\"text\" placeholder=\"Colored label input\" />\n        <Button variant=\"outline\" className=\"text-blue-600 border-blue-600 hover:bg-blue-50\">\n          Save Colored Field\n        </Button>\n      </div>\n\n      {/* Label with background */}\n      <div className=\"space-y-2\">\n        <Label \n          htmlFor=\"background\" \n          className=\"bg-muted px-2 py-1 rounded text-sm flex items-center gap-2 w-fit\"\n        >\n          <User className=\"h-4 w-4\" />\n          Label with Background\n        </Label>\n        <Input id=\"background\" type=\"text\" placeholder=\"Background label input\" />\n        <div className=\"flex gap-2\">\n          <Button size=\"sm\">Submit</Button>\n          <Button variant=\"ghost\" size=\"sm\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#BasicMultiSelectExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "BasicMultiSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function BasicMultiSelectExample() {\n  const [selectedFruits, setSelectedFruits] = useState<string[]>([])\n\n  const fruits = [\n    { value: \"apple\", label: \"Apple\" },\n    { value: \"banana\", label: \"Banana\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"grape\", label: \"Grape\" },\n    { value: \"strawberry\", label: \"Strawberry\" },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Choose your favorite fruits</label>\n        <MultiSelect\n          options={fruits}\n          onValueChange={setSelectedFruits}\n          defaultValue={selectedFruits}\n          placeholder=\"Select fruits\"\n          className=\"w-full max-w-md\"\n        />\n      </div>\n      \n      {selectedFruits.length > 0 && (\n        <div>\n          <p className=\"text-sm font-medium mb-2\">Selected fruits:</p>\n          <ul className=\"text-sm text-muted-foreground\">\n            {selectedFruits.map((value) => {\n              const fruit = fruits.find(f => f.value === value)\n              return <li key={value}>• {fruit?.label}</li>\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction BasicMultiSelectExample() {\n  const [selectedFruits, setSelectedFruits] = useState<string[]>([])\n\n  const fruits = [\n    { value: \"apple\", label: \"Apple\" },\n    { value: \"banana\", label: \"Banana\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"grape\", label: \"Grape\" },\n    { value: \"strawberry\", label: \"Strawberry\" },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Choose your favorite fruits</label>\n        <MultiSelect\n          options={fruits}\n          onValueChange={setSelectedFruits}\n          defaultValue={selectedFruits}\n          placeholder=\"Select fruits\"\n          className=\"w-full max-w-md\"\n        />\n      </div>\n      \n      {selectedFruits.length > 0 && (\n        <div>\n          <p className=\"text-sm font-medium mb-2\">Selected fruits:</p>\n          <ul className=\"text-sm text-muted-foreground\">\n            {selectedFruits.map((value) => {\n              const fruit = fruits.find(f => f.value === value)\n              return <li key={value}>• {fruit?.label}</li>\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#WithIconsExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "WithIconsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function WithIconsExample() {\n  const [selectedTech, setSelectedTech] = useState<string[]>([])\n\n  const technologies = [\n    { value: \"frontend\", label: \"Frontend\", icon: Globe },\n    { value: \"backend\", label: \"Backend\", icon: Database },\n    { value: \"mobile\", label: \"Mobile\", icon: Smartphone },\n    { value: \"devops\", label: \"DevOps\", icon: Code },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Technology areas</label>\n      <MultiSelect\n        options={technologies}\n        onValueChange={setSelectedTech}\n        defaultValue={selectedTech}\n        placeholder=\"Select technology areas\"\n        className=\"w-full max-w-md\"\n      />\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction WithIconsExample() {\n  const [selectedTech, setSelectedTech] = useState<string[]>([])\n\n  const technologies = [\n    { value: \"frontend\", label: \"Frontend\", icon: Globe },\n    { value: \"backend\", label: \"Backend\", icon: Database },\n    { value: \"mobile\", label: \"Mobile\", icon: Smartphone },\n    { value: \"devops\", label: \"DevOps\", icon: Code },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Technology areas</label>\n      <MultiSelect\n        options={technologies}\n        onValueChange={setSelectedTech}\n        defaultValue={selectedTech}\n        placeholder=\"Select technology areas\"\n        className=\"w-full max-w-md\"\n      />\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#ContactMethodsExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "ContactMethodsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function ContactMethodsExample() {\n  const [selectedMethods, setSelectedMethods] = useState<string[]>([])\n\n  const contactMethods = [\n    { value: \"email\", label: \"Email\", icon: Mail },\n    { value: \"phone\", label: \"Phone\", icon: Phone },\n    { value: \"sms\", label: \"SMS\", icon: MessageSquare },\n    { value: \"web\", label: \"Website\", icon: Globe },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Preferred contact methods</label>\n        <MultiSelect\n          options={contactMethods}\n          onValueChange={setSelectedMethods}\n          defaultValue={selectedMethods}\n          placeholder=\"Select contact methods\"\n          className=\"w-full max-w-md\"\n        />\n      </div>\n      \n      {selectedMethods.length > 0 && (\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            Save Preferences\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setSelectedMethods([])}>\n            Clear All\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction ContactMethodsExample() {\n  const [selectedMethods, setSelectedMethods] = useState<string[]>([])\n\n  const contactMethods = [\n    { value: \"email\", label: \"Email\", icon: Mail },\n    { value: \"phone\", label: \"Phone\", icon: Phone },\n    { value: \"sms\", label: \"SMS\", icon: MessageSquare },\n    { value: \"web\", label: \"Website\", icon: Globe },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Preferred contact methods</label>\n        <MultiSelect\n          options={contactMethods}\n          onValueChange={setSelectedMethods}\n          defaultValue={selectedMethods}\n          placeholder=\"Select contact methods\"\n          className=\"w-full max-w-md\"\n        />\n      </div>\n      \n      {selectedMethods.length > 0 && (\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            Save Preferences\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => setSelectedMethods([])}>\n            Clear All\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#WithAnimationExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "WithAnimationExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function WithAnimationExample() {\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([])\n\n  const countries = [\n    { value: \"us\", label: \"United States\" },\n    { value: \"ca\", label: \"Canada\" },\n    { value: \"uk\", label: \"United Kingdom\" },\n    { value: \"de\", label: \"Germany\" },\n    { value: \"fr\", label: \"France\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Countries (with animation)</label>\n      <MultiSelect\n        options={countries}\n        onValueChange={setSelectedCountries}\n        defaultValue={selectedCountries}\n        placeholder=\"Select countries\"\n        animation={0.5}\n        className=\"w-full max-w-md\"\n      />\n      <p className=\"text-xs text-muted-foreground\">\n        Click the sparkle icon to animate selected badges\n      </p>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction WithAnimationExample() {\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([])\n\n  const countries = [\n    { value: \"us\", label: \"United States\" },\n    { value: \"ca\", label: \"Canada\" },\n    { value: \"uk\", label: \"United Kingdom\" },\n    { value: \"de\", label: \"Germany\" },\n    { value: \"fr\", label: \"France\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Countries (with animation)</label>\n      <MultiSelect\n        options={countries}\n        onValueChange={setSelectedCountries}\n        defaultValue={selectedCountries}\n        placeholder=\"Select countries\"\n        animation={0.5}\n        className=\"w-full max-w-md\"\n      />\n      <p className=\"text-xs text-muted-foreground\">\n        Click the sparkle icon to animate selected badges\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#MaxCountExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "MaxCountExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function MaxCountExample() {\n  const [selectedSkills, setSelectedSkills] = useState<string[]>([])\n  const [selectedSkills2, setSelectedSkills2] = useState<string[]>([])\n\n  const skills = [\n    { value: \"javascript\", label: \"JavaScript\" },\n    { value: \"typescript\", label: \"TypeScript\" },\n    { value: \"react\", label: \"React\" },\n    { value: \"vue\", label: \"Vue\" },\n    { value: \"angular\", label: \"Angular\" },\n    { value: \"nodejs\", label: \"Node.js\" },\n    { value: \"python\", label: \"Python\" },\n    { value: \"java\", label: \"Java\" },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Show only 2 badges */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Skills (max 2 visible)</label>\n        <MultiSelect\n          options={skills}\n          onValueChange={setSelectedSkills}\n          defaultValue={selectedSkills}\n          placeholder=\"Select skills\"\n          maxCount={2}\n          className=\"w-full max-w-md\"\n        />\n      </div>\n\n      {/* Show 5 badges */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Skills (max 5 visible)</label>\n        <MultiSelect\n          options={skills}\n          onValueChange={setSelectedSkills2}\n          defaultValue={selectedSkills2}\n          placeholder=\"Select skills\"\n          maxCount={5}\n          className=\"w-full max-w-md\"\n        />\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction MaxCountExample() {\n  const [selectedSkills, setSelectedSkills] = useState<string[]>([])\n  const [selectedSkills2, setSelectedSkills2] = useState<string[]>([])\n\n  const skills = [\n    { value: \"javascript\", label: \"JavaScript\" },\n    { value: \"typescript\", label: \"TypeScript\" },\n    { value: \"react\", label: \"React\" },\n    { value: \"vue\", label: \"Vue\" },\n    { value: \"angular\", label: \"Angular\" },\n    { value: \"nodejs\", label: \"Node.js\" },\n    { value: \"python\", label: \"Python\" },\n    { value: \"java\", label: \"Java\" },\n  ]\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Show only 2 badges */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Skills (max 2 visible)</label>\n        <MultiSelect\n          options={skills}\n          onValueChange={setSelectedSkills}\n          defaultValue={selectedSkills}\n          placeholder=\"Select skills\"\n          maxCount={2}\n          className=\"w-full max-w-md\"\n        />\n      </div>\n\n      {/* Show 5 badges */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Skills (max 5 visible)</label>\n        <MultiSelect\n          options={skills}\n          onValueChange={setSelectedSkills2}\n          defaultValue={selectedSkills2}\n          placeholder=\"Select skills\"\n          maxCount={5}\n          className=\"w-full max-w-md\"\n        />\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#FormIntegrationExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "FormIntegrationExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm()\n\n  const interests = [\n    { value: \"technology\", label: \"Technology\" },\n    { value: \"sports\", label: \"Sports\" },\n    { value: \"music\", label: \"Music\" },\n    { value: \"art\", label: \"Art\" },\n    { value: \"travel\", label: \"Travel\" },\n    { value: \"food\", label: \"Food\" },\n  ]\n\n  const skills = [\n    { value: \"coding\", label: \"Coding\" },\n    { value: \"design\", label: \"Design\" },\n    { value: \"marketing\", label: \"Marketing\" },\n    { value: \"management\", label: \"Management\" },\n  ]\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Check console for details.`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Interests *</label>\n          <Controller\n            name=\"interests\"\n            control={control}\n            rules={{\n              required: \"Please select at least one interest\",\n              validate: (value) => \n                value?.length >= 2 || \"Please select at least 2 interests\"\n            }}\n            render={({ field }) => (\n              <MultiSelect\n                options={interests}\n                onValueChange={field.onChange}\n                formValue={field.value || []}\n                placeholder=\"Select your interests\"\n                className=\"w-full max-w-md\"\n              />\n            )}\n          />\n          {errors.interests && (\n            <p className=\"text-sm text-destructive\">\n              {errors.interests.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Skills (Optional)</label>\n          <Controller\n            name=\"skills\"\n            control={control}\n            render={({ field }) => (\n              <MultiSelect\n                options={skills}\n                onValueChange={field.onChange}\n                formValue={field.value || []}\n                placeholder=\"Select your skills\"\n                maxCount={2}\n                className=\"w-full max-w-md\"\n              />\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      {(watchedValues.interests || watchedValues.skills) && (\n        <div className=\"mt-4 p-3 bg-muted rounded-md\">\n          <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n          <pre className=\"text-xs\">\n            {JSON.stringify({ interests: watchedValues.interests || [], skills: watchedValues.skills || [] }, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm()\n\n  const interests = [\n    { value: \"technology\", label: \"Technology\" },\n    { value: \"sports\", label: \"Sports\" },\n    { value: \"music\", label: \"Music\" },\n    { value: \"art\", label: \"Art\" },\n    { value: \"travel\", label: \"Travel\" },\n    { value: \"food\", label: \"Food\" },\n  ]\n\n  const skills = [\n    { value: \"coding\", label: \"Coding\" },\n    { value: \"design\", label: \"Design\" },\n    { value: \"marketing\", label: \"Marketing\" },\n    { value: \"management\", label: \"Management\" },\n  ]\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Check console for details.`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Interests *</label>\n          <Controller\n            name=\"interests\"\n            control={control}\n            rules={{\n              required: \"Please select at least one interest\",\n              validate: (value) => \n                value?.length >= 2 || \"Please select at least 2 interests\"\n            }}\n            render={({ field }) => (\n              <MultiSelect\n                options={interests}\n                onValueChange={field.onChange}\n                formValue={field.value || []}\n                placeholder=\"Select your interests\"\n                className=\"w-full max-w-md\"\n              />\n            )}\n          />\n          {errors.interests && (\n            <p className=\"text-sm text-destructive\">\n              {errors.interests.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Skills (Optional)</label>\n          <Controller\n            name=\"skills\"\n            control={control}\n            render={({ field }) => (\n              <MultiSelect\n                options={skills}\n                onValueChange={field.onChange}\n                formValue={field.value || []}\n                placeholder=\"Select your skills\"\n                maxCount={2}\n                className=\"w-full max-w-md\"\n              />\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      {(watchedValues.interests || watchedValues.skills) && (\n        <div className=\"mt-4 p-3 bg-muted rounded-md\">\n          <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n          <pre className=\"text-xs\">\n            {JSON.stringify({ interests: watchedValues.interests || [], skills: watchedValues.skills || [] }, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#ModalPopoverExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "ModalPopoverExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function ModalPopoverExample() {\n  const [selectedLanguages, setSelectedLanguages] = useState<string[]>([])\n\n  const languages = [\n    { value: \"en\", label: \"English\" },\n    { value: \"es\", label: \"Spanish\" },\n    { value: \"fr\", label: \"French\" },\n    { value: \"de\", label: \"German\" },\n    { value: \"ja\", label: \"Japanese\" },\n    { value: \"zh\", label: \"Chinese\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Languages (modal)</label>\n      <MultiSelect\n        options={languages}\n        onValueChange={setSelectedLanguages}\n        defaultValue={selectedLanguages}\n        placeholder=\"Select languages\"\n        modalPopover={true}\n        className=\"w-full max-w-md\"\n      />\n      <p className=\"text-xs text-muted-foreground\">\n        Modal popover blocks interaction with other elements\n      </p>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction ModalPopoverExample() {\n  const [selectedLanguages, setSelectedLanguages] = useState<string[]>([])\n\n  const languages = [\n    { value: \"en\", label: \"English\" },\n    { value: \"es\", label: \"Spanish\" },\n    { value: \"fr\", label: \"French\" },\n    { value: \"de\", label: \"German\" },\n    { value: \"ja\", label: \"Japanese\" },\n    { value: \"zh\", label: \"Chinese\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Languages (modal)</label>\n      <MultiSelect\n        options={languages}\n        onValueChange={setSelectedLanguages}\n        defaultValue={selectedLanguages}\n        placeholder=\"Select languages\"\n        modalPopover={true}\n        className=\"w-full max-w-md\"\n      />\n      <p className=\"text-xs text-muted-foreground\">\n        Modal popover blocks interaction with other elements\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/multi-select-examples.tsx#LargeDatasetExample": {
    "path": "components/form-components-examples/multi-select-examples.tsx",
    "functionName": "LargeDatasetExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function LargeDatasetExample() {\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([])\n\n  // Generate a large list of options\n  const generateOptions = (count: number) => {\n    return Array.from({ length: count }, (_, i) => ({\n      value: `option-${i + 1}`,\n      label: `Option ${i + 1}`,\n    }))\n  }\n\n  const options = generateOptions(100)\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">\n        Large dataset (100 options) - use search to filter\n      </label>\n      <MultiSelect\n        options={options}\n        onValueChange={setSelectedOptions}\n        defaultValue={selectedOptions}\n        placeholder=\"Search and select options\"\n        maxCount={5}\n        className=\"w-full max-w-md\"\n      />\n      {selectedOptions.length > 0 && (\n        <p className=\"text-xs text-muted-foreground\">\n          Selected {selectedOptions.length} options\n        </p>\n      )}\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Code, Database, Globe, Smartphone, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { MultiSelect, Button } from \"@helgadigitals/vera-ui\"\nfunction LargeDatasetExample() {\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([])\n\n  // Generate a large list of options\n  const generateOptions = (count: number) => {\n    return Array.from({ length: count }, (_, i) => ({\n      value: `option-${i + 1}`,\n      label: `Option ${i + 1}`,\n    }))\n  }\n\n  const options = generateOptions(100)\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">\n        Large dataset (100 options) - use search to filter\n      </label>\n      <MultiSelect\n        options={options}\n        onValueChange={setSelectedOptions}\n        defaultValue={selectedOptions}\n        placeholder=\"Search and select options\"\n        maxCount={5}\n        className=\"w-full max-w-md\"\n      />\n      {selectedOptions.length > 0 && (\n        <p className=\"text-xs text-muted-foreground\">\n          Selected {selectedOptions.length} options\n        </p>\n      )}\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/radio-group-examples.tsx#WithDescriptionsExample": {
    "path": "components/form-components-examples/radio-group-examples.tsx",
    "functionName": "WithDescriptionsExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function WithDescriptionsExample() {\n  return (\n    <div className=\"space-y-3\">\n      <h3 className=\"text-sm font-medium\">Choose delivery option</h3>\n      <RadioGroup defaultValue=\"standard\" className=\"space-y-4\">\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"standard\" id=\"delivery-standard\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-standard\">Standard Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              5-7 business days • Free\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"express\" id=\"delivery-express\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-express\">Express Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              2-3 business days • $9.99\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"overnight\" id=\"delivery-overnight\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-overnight\">Overnight Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              Next business day • $24.99\n            </p>\n          </div>\n        </div>\n      </RadioGroup>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction WithDescriptionsExample() {\n  return (\n    <div className=\"space-y-3\">\n      <h3 className=\"text-sm font-medium\">Choose delivery option</h3>\n      <RadioGroup defaultValue=\"standard\" className=\"space-y-4\">\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"standard\" id=\"delivery-standard\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-standard\">Standard Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              5-7 business days • Free\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"express\" id=\"delivery-express\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-express\">Express Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              2-3 business days • $9.99\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-start space-x-3\">\n          <RadioGroupItem value=\"overnight\" id=\"delivery-overnight\" className=\"mt-1\" />\n          <div className=\"space-y-1\">\n            <Label htmlFor=\"delivery-overnight\">Overnight Delivery</Label>\n            <p className=\"text-sm text-muted-foreground\">\n              Next business day • $24.99\n            </p>\n          </div>\n        </div>\n      </RadioGroup>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/radio-group-examples.tsx#DisabledStateExample": {
    "path": "components/form-components-examples/radio-group-examples.tsx",
    "functionName": "DisabledStateExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function DisabledStateExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled group */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium\">Disabled Group</h3>\n        <RadioGroup defaultValue=\"option1\" disabled>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"option1\" id=\"disabled-1\" />\n            <Label htmlFor=\"disabled-1\">Option 1</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"option2\" id=\"disabled-2\" />\n            <Label htmlFor=\"disabled-2\">Option 2</Label>\n          </div>\n        </RadioGroup>\n      </div>\n\n      {/* Individual disabled items */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium\">Mixed State</h3>\n        <RadioGroup defaultValue=\"available1\">\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"available1\" id=\"mixed-1\" />\n            <Label htmlFor=\"mixed-1\">Available Option 1</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"disabled\" id=\"mixed-2\" disabled />\n            <Label htmlFor=\"mixed-2\">Disabled Option</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"available2\" id=\"mixed-3\" />\n            <Label htmlFor=\"mixed-3\">Available Option 2</Label>\n          </div>\n        </RadioGroup>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction DisabledStateExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled group */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium\">Disabled Group</h3>\n        <RadioGroup defaultValue=\"option1\" disabled>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"option1\" id=\"disabled-1\" />\n            <Label htmlFor=\"disabled-1\">Option 1</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"option2\" id=\"disabled-2\" />\n            <Label htmlFor=\"disabled-2\">Option 2</Label>\n          </div>\n        </RadioGroup>\n      </div>\n\n      {/* Individual disabled items */}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium\">Mixed State</h3>\n        <RadioGroup defaultValue=\"available1\">\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"available1\" id=\"mixed-1\" />\n            <Label htmlFor=\"mixed-1\">Available Option 1</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"disabled\" id=\"mixed-2\" disabled />\n            <Label htmlFor=\"mixed-2\">Disabled Option</Label>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <RadioGroupItem value=\"available2\" id=\"mixed-3\" />\n            <Label htmlFor=\"mixed-3\">Available Option 2</Label>\n          </div>\n        </RadioGroup>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/radio-group-examples.tsx#FormIntegrationExample": {
    "path": "components/form-components-examples/radio-group-examples.tsx",
    "functionName": "FormIntegrationExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm({\n    defaultValues: {\n      contactMethod: \"email\",\n      frequency: \"never\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Contact method: ${data.contactMethod}, Frequency: ${data.frequency}`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-sm font-medium\">Preferred contact method *</h3>\n          <Controller\n            name=\"contactMethod\"\n            control={control}\n            rules={{ required: \"Please select a contact method\" }}\n            render={({ field }) => (\n              <RadioGroup\n                value={field.value}\n                onValueChange={field.onChange}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"email\" id=\"contact-email\" />\n                  <Label htmlFor=\"contact-email\">Email</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"phone\" id=\"contact-phone\" />\n                  <Label htmlFor=\"contact-phone\">Phone</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"sms\" id=\"contact-sms\" />\n                  <Label htmlFor=\"contact-sms\">SMS</Label>\n                </div>\n              </RadioGroup>\n            )}\n          />\n          {errors.contactMethod && (\n            <p className=\"text-sm text-destructive\">\n              {errors.contactMethod.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-sm font-medium\">Newsletter frequency</h3>\n          <Controller\n            name=\"frequency\"\n            control={control}\n            render={({ field }) => (\n              <RadioGroup\n                value={field.value}\n                onValueChange={field.onChange}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"daily\" id=\"freq-daily\" />\n                  <Label htmlFor=\"freq-daily\">Daily</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"weekly\" id=\"freq-weekly\" />\n                  <Label htmlFor=\"freq-weekly\">Weekly</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"monthly\" id=\"freq-monthly\" />\n                  <Label htmlFor=\"freq-monthly\">Monthly</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"never\" id=\"freq-never\" />\n                  <Label htmlFor=\"freq-never\">Never</Label>\n                </div>\n              </RadioGroup>\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n        <pre className=\"text-xs\">\n          {JSON.stringify({\n            contactMethod: watchedValues.contactMethod || \"none\",\n            frequency: watchedValues.frequency || \"none\"\n          }, null, 2)}\n        </pre>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm({\n    defaultValues: {\n      contactMethod: \"email\",\n      frequency: \"never\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Contact method: ${data.contactMethod}, Frequency: ${data.frequency}`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-sm font-medium\">Preferred contact method *</h3>\n          <Controller\n            name=\"contactMethod\"\n            control={control}\n            rules={{ required: \"Please select a contact method\" }}\n            render={({ field }) => (\n              <RadioGroup\n                value={field.value}\n                onValueChange={field.onChange}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"email\" id=\"contact-email\" />\n                  <Label htmlFor=\"contact-email\">Email</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"phone\" id=\"contact-phone\" />\n                  <Label htmlFor=\"contact-phone\">Phone</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"sms\" id=\"contact-sms\" />\n                  <Label htmlFor=\"contact-sms\">SMS</Label>\n                </div>\n              </RadioGroup>\n            )}\n          />\n          {errors.contactMethod && (\n            <p className=\"text-sm text-destructive\">\n              {errors.contactMethod.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-sm font-medium\">Newsletter frequency</h3>\n          <Controller\n            name=\"frequency\"\n            control={control}\n            render={({ field }) => (\n              <RadioGroup\n                value={field.value}\n                onValueChange={field.onChange}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"daily\" id=\"freq-daily\" />\n                  <Label htmlFor=\"freq-daily\">Daily</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"weekly\" id=\"freq-weekly\" />\n                  <Label htmlFor=\"freq-weekly\">Weekly</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"monthly\" id=\"freq-monthly\" />\n                  <Label htmlFor=\"freq-monthly\">Monthly</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"never\" id=\"freq-never\" />\n                  <Label htmlFor=\"freq-never\">Never</Label>\n                </div>\n              </RadioGroup>\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n        <pre className=\"text-xs\">\n          {JSON.stringify({\n            contactMethod: watchedValues.contactMethod || \"none\",\n            frequency: watchedValues.frequency || \"none\"\n          }, null, 2)}\n        </pre>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/radio-group-examples.tsx#CardStyleExample": {
    "path": "components/form-components-examples/radio-group-examples.tsx",
    "functionName": "CardStyleExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function CardStyleExample() {\n  const [selectedTier, setSelectedTier] = useState(\"pro\")\n\n  const plans = [\n    {\n      value: \"free\",\n      title: \"Free\",\n      description: \"Perfect for getting started\",\n      price: \"$0\",\n      features: [\"Up to 3 projects\", \"Community support\"]\n    },\n    {\n      value: \"pro\",\n      title: \"Pro\",\n      description: \"Best for professionals\",\n      price: \"$10\",\n      features: [\"Unlimited projects\", \"Priority support\", \"Advanced features\"]\n    },\n    {\n      value: \"enterprise\",\n      title: \"Enterprise\",\n      description: \"For large organizations\",\n      price: \"$50\",\n      features: [\"Everything in Pro\", \"Custom integrations\", \"Dedicated support\"]\n    }\n  ]\n\n  return (\n    <div className=\"space-y-3\">\n      <h3 className=\"text-sm font-medium\">Choose your plan</h3>\n      <RadioGroup \n        value={selectedTier} \n        onValueChange={setSelectedTier}\n        className=\"space-y-2\"\n      >\n        {plans.map((plan) => (\n          <div\n            key={plan.value}\n            className={`relative flex items-start p-4 border rounded-lg cursor-pointer transition-colors ${\n              selectedTier === plan.value \n                ? \"border-primary bg-primary/5\" \n                : \"border-input hover:bg-accent\"\n            }`}\n          >\n            <RadioGroupItem \n              value={plan.value} \n              id={`plan-${plan.value}`}\n              className=\"mt-1\"\n            />\n            <div className=\"ml-3 flex-1\">\n              <Label htmlFor={`plan-${plan.value}`} className=\"font-medium cursor-pointer\">\n                {plan.title} - {plan.price}/month\n              </Label>\n              <p className=\"text-sm text-muted-foreground mb-2\">\n                {plan.description}\n              </p>\n              <ul className=\"text-sm text-muted-foreground space-y-1\">\n                {plan.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-center gap-2\">\n                    <Check className=\"h-3 w-3 text-primary\" />\n                    {feature}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        ))}\n      </RadioGroup>\n      \n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <p className=\"text-sm font-medium\">Selected Plan: {selectedTier}</p>\n        <p className=\"text-xs text-muted-foreground\">\n          {plans.find(p => p.value === selectedTier)?.description}\n        </p>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Check } from \"lucide-react\"\nimport { RadioGroup, RadioGroupItem, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction CardStyleExample() {\n  const [selectedTier, setSelectedTier] = useState(\"pro\")\n\n  const plans = [\n    {\n      value: \"free\",\n      title: \"Free\",\n      description: \"Perfect for getting started\",\n      price: \"$0\",\n      features: [\"Up to 3 projects\", \"Community support\"]\n    },\n    {\n      value: \"pro\",\n      title: \"Pro\",\n      description: \"Best for professionals\",\n      price: \"$10\",\n      features: [\"Unlimited projects\", \"Priority support\", \"Advanced features\"]\n    },\n    {\n      value: \"enterprise\",\n      title: \"Enterprise\",\n      description: \"For large organizations\",\n      price: \"$50\",\n      features: [\"Everything in Pro\", \"Custom integrations\", \"Dedicated support\"]\n    }\n  ]\n\n  return (\n    <div className=\"space-y-3\">\n      <h3 className=\"text-sm font-medium\">Choose your plan</h3>\n      <RadioGroup \n        value={selectedTier} \n        onValueChange={setSelectedTier}\n        className=\"space-y-2\"\n      >\n        {plans.map((plan) => (\n          <div\n            key={plan.value}\n            className={`relative flex items-start p-4 border rounded-lg cursor-pointer transition-colors ${\n              selectedTier === plan.value \n                ? \"border-primary bg-primary/5\" \n                : \"border-input hover:bg-accent\"\n            }`}\n          >\n            <RadioGroupItem \n              value={plan.value} \n              id={`plan-${plan.value}`}\n              className=\"mt-1\"\n            />\n            <div className=\"ml-3 flex-1\">\n              <Label htmlFor={`plan-${plan.value}`} className=\"font-medium cursor-pointer\">\n                {plan.title} - {plan.price}/month\n              </Label>\n              <p className=\"text-sm text-muted-foreground mb-2\">\n                {plan.description}\n              </p>\n              <ul className=\"text-sm text-muted-foreground space-y-1\">\n                {plan.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-center gap-2\">\n                    <Check className=\"h-3 w-3 text-primary\" />\n                    {feature}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        ))}\n      </RadioGroup>\n      \n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <p className=\"text-sm font-medium\">Selected Plan: {selectedTier}</p>\n        <p className=\"text-xs text-muted-foreground\">\n          {plans.find(p => p.value === selectedTier)?.description}\n        </p>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#ControlledSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "ControlledSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function ControlledSelectExample() {\n  const [selectedValue, setSelectedValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Choose a country</label>\n        <Select value={selectedValue} onValueChange={setSelectedValue}>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Select country\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"us\">United States</SelectItem>\n            <SelectItem value=\"ca\">Canada</SelectItem>\n            <SelectItem value=\"uk\">United Kingdom</SelectItem>\n            <SelectItem value=\"au\">Australia</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      \n      {selectedValue && (\n        <p className=\"text-sm text-muted-foreground\">\n          Selected: {selectedValue}\n        </p>\n      )}\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction ControlledSelectExample() {\n  const [selectedValue, setSelectedValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Choose a country</label>\n        <Select value={selectedValue} onValueChange={setSelectedValue}>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Select country\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"us\">United States</SelectItem>\n            <SelectItem value=\"ca\">Canada</SelectItem>\n            <SelectItem value=\"uk\">United Kingdom</SelectItem>\n            <SelectItem value=\"au\">Australia</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n      \n      {selectedValue && (\n        <p className=\"text-sm text-muted-foreground\">\n          Selected: {selectedValue}\n        </p>\n      )}\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#GroupedSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "GroupedSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function GroupedSelectExample() {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Choose a programming language</label>\n      <Select>\n        <SelectTrigger className=\"w-[250px]\">\n          <SelectValue placeholder=\"Select language\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectGroup>\n            <SelectLabel>Frontend</SelectLabel>\n            <SelectItem value=\"javascript\">JavaScript</SelectItem>\n            <SelectItem value=\"typescript\">TypeScript</SelectItem>\n            <SelectItem value=\"css\">CSS</SelectItem>\n          </SelectGroup>\n          \n          <SelectSeparator />\n          \n          <SelectGroup>\n            <SelectLabel>Backend</SelectLabel>\n            <SelectItem value=\"python\">Python</SelectItem>\n            <SelectItem value=\"java\">Java</SelectItem>\n            <SelectItem value=\"go\">Go</SelectItem>\n            <SelectItem value=\"rust\">Rust</SelectItem>\n          </SelectGroup>\n          \n          <SelectSeparator />\n          \n          <SelectGroup>\n            <SelectLabel>Mobile</SelectLabel>\n            <SelectItem value=\"swift\">Swift</SelectItem>\n            <SelectItem value=\"kotlin\">Kotlin</SelectItem>\n            <SelectItem value=\"dart\">Dart</SelectItem>\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction GroupedSelectExample() {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Choose a programming language</label>\n      <Select>\n        <SelectTrigger className=\"w-[250px]\">\n          <SelectValue placeholder=\"Select language\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectGroup>\n            <SelectLabel>Frontend</SelectLabel>\n            <SelectItem value=\"javascript\">JavaScript</SelectItem>\n            <SelectItem value=\"typescript\">TypeScript</SelectItem>\n            <SelectItem value=\"css\">CSS</SelectItem>\n          </SelectGroup>\n          \n          <SelectSeparator />\n          \n          <SelectGroup>\n            <SelectLabel>Backend</SelectLabel>\n            <SelectItem value=\"python\">Python</SelectItem>\n            <SelectItem value=\"java\">Java</SelectItem>\n            <SelectItem value=\"go\">Go</SelectItem>\n            <SelectItem value=\"rust\">Rust</SelectItem>\n          </SelectGroup>\n          \n          <SelectSeparator />\n          \n          <SelectGroup>\n            <SelectLabel>Mobile</SelectLabel>\n            <SelectItem value=\"swift\">Swift</SelectItem>\n            <SelectItem value=\"kotlin\">Kotlin</SelectItem>\n            <SelectItem value=\"dart\">Dart</SelectItem>\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#SizesSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "SizesSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function SizesSelectExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Small Select</label>\n        <Select>\n          <SelectTrigger size=\"sm\" className=\"w-[150px]\">\n            <SelectValue placeholder=\"Small\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Default Select</label>\n        <Select>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Default\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction SizesSelectExample() {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Small Select</label>\n        <Select>\n          <SelectTrigger size=\"sm\" className=\"w-[150px]\">\n            <SelectValue placeholder=\"Small\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Default Select</label>\n        <Select>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Default\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#DisabledSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "DisabledSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function DisabledSelectExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled select */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Disabled Select</label>\n        <Select disabled>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Disabled select\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Individual disabled items */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">With Disabled Items</label>\n        <Select>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Select option\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"available1\">Available Option 1</SelectItem>\n            <SelectItem value=\"disabled\" disabled>\n              Disabled Option\n            </SelectItem>\n            <SelectItem value=\"available2\">Available Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction DisabledSelectExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled select */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Disabled Select</label>\n        <Select disabled>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Disabled select\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"option1\">Option 1</SelectItem>\n            <SelectItem value=\"option2\">Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Individual disabled items */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">With Disabled Items</label>\n        <Select>\n          <SelectTrigger className=\"w-[200px]\">\n            <SelectValue placeholder=\"Select option\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"available1\">Available Option 1</SelectItem>\n            <SelectItem value=\"disabled\" disabled>\n              Disabled Option\n            </SelectItem>\n            <SelectItem value=\"available2\">Available Option 2</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#WithIconsSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "WithIconsSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function WithIconsSelectExample() {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Contact method</label>\n      <Select>\n        <SelectTrigger className=\"w-[220px]\">\n          <SelectValue placeholder=\"Choose contact method\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"email\">\n            <Mail className=\"mr-2 h-4 w-4\" />\n            Email\n          </SelectItem>\n          <SelectItem value=\"phone\">\n            <Phone className=\"mr-2 h-4 w-4\" />\n            Phone\n          </SelectItem>\n          <SelectItem value=\"message\">\n            <MessageSquare className=\"mr-2 h-4 w-4\" />\n            Message\n          </SelectItem>\n          <SelectItem value=\"in-person\">\n            <User className=\"mr-2 h-4 w-4\" />\n            In Person\n          </SelectItem>\n        </SelectContent>\n      </Select>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction WithIconsSelectExample() {\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Contact method</label>\n      <Select>\n        <SelectTrigger className=\"w-[220px]\">\n          <SelectValue placeholder=\"Choose contact method\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"email\">\n            <Mail className=\"mr-2 h-4 w-4\" />\n            Email\n          </SelectItem>\n          <SelectItem value=\"phone\">\n            <Phone className=\"mr-2 h-4 w-4\" />\n            Phone\n          </SelectItem>\n          <SelectItem value=\"message\">\n            <MessageSquare className=\"mr-2 h-4 w-4\" />\n            Message\n          </SelectItem>\n          <SelectItem value=\"in-person\">\n            <User className=\"mr-2 h-4 w-4\" />\n            In Person\n          </SelectItem>\n        </SelectContent>\n      </Select>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#FormIntegrationSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "FormIntegrationSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationSelectExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm({\n    defaultValues: {\n      country: \"\",\n      theme: \"system\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Country: ${data.country}, Theme: ${data.theme}`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Country *</label>\n          <Controller\n            name=\"country\"\n            control={control}\n            rules={{ required: \"Please select a country\" }}\n            render={({ field }) => (\n              <Select onValueChange={field.onChange} value={field.value || \"\"}>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select your country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"us\">United States</SelectItem>\n                  <SelectItem value=\"ca\">Canada</SelectItem>\n                  <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                  <SelectItem value=\"au\">Australia</SelectItem>\n                  <SelectItem value=\"de\">Germany</SelectItem>\n                  <SelectItem value=\"fr\">France</SelectItem>\n                </SelectContent>\n              </Select>\n            )}\n          />\n          {errors.country && (\n            <p className=\"text-sm text-destructive\">\n              {errors.country.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Theme preference</label>\n          <Controller\n            name=\"theme\"\n            control={control}\n            render={({ field }) => (\n              <Select onValueChange={field.onChange} value={field.value}>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"light\">Light</SelectItem>\n                  <SelectItem value=\"dark\">Dark</SelectItem>\n                  <SelectItem value=\"system\">System</SelectItem>\n                </SelectContent>\n              </Select>\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n        <pre className=\"text-xs\">\n          {JSON.stringify({\n            country: watchedValues.country || \"none\",\n            theme: watchedValues.theme || \"none\"\n          }, null, 2)}\n        </pre>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationSelectExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm({\n    defaultValues: {\n      country: \"\",\n      theme: \"system\"\n    }\n  })\n\n  const onSubmit = (data: any) => {\n    console.log(\"Form submitted:\", data)\n    alert(`Form submitted! Country: ${data.country}, Theme: ${data.theme}`)\n  }\n\n  const watchedValues = watch()\n\n  return (\n    <div className=\"space-y-6\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Country *</label>\n          <Controller\n            name=\"country\"\n            control={control}\n            rules={{ required: \"Please select a country\" }}\n            render={({ field }) => (\n              <Select onValueChange={field.onChange} value={field.value || \"\"}>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select your country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"us\">United States</SelectItem>\n                  <SelectItem value=\"ca\">Canada</SelectItem>\n                  <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                  <SelectItem value=\"au\">Australia</SelectItem>\n                  <SelectItem value=\"de\">Germany</SelectItem>\n                  <SelectItem value=\"fr\">France</SelectItem>\n                </SelectContent>\n              </Select>\n            )}\n          />\n          {errors.country && (\n            <p className=\"text-sm text-destructive\">\n              {errors.country.message as string}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Theme preference</label>\n          <Controller\n            name=\"theme\"\n            control={control}\n            render={({ field }) => (\n              <Select onValueChange={field.onChange} value={field.value}>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"light\">Light</SelectItem>\n                  <SelectItem value=\"dark\">Dark</SelectItem>\n                  <SelectItem value=\"system\">System</SelectItem>\n                </SelectContent>\n              </Select>\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\">Submit</Button>\n      </form>\n\n      <div className=\"mt-4 p-3 bg-muted rounded-md\">\n        <h4 className=\"text-sm font-medium mb-2\">Current Values:</h4>\n        <pre className=\"text-xs\">\n          {JSON.stringify({\n            country: watchedValues.country || \"none\",\n            theme: watchedValues.theme || \"none\"\n          }, null, 2)}\n        </pre>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/select-examples.tsx#LongListSelectExample": {
    "path": "components/form-components-examples/select-examples.tsx",
    "functionName": "LongListSelectExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"",
      "function": "function LongListSelectExample() {\n  const countries = [\n    { value: \"af\", label: \"Afghanistan\" },\n    { value: \"al\", label: \"Albania\" },\n    { value: \"dz\", label: \"Algeria\" },\n    { value: \"ad\", label: \"Andorra\" },\n    { value: \"ao\", label: \"Angola\" },\n    { value: \"ar\", label: \"Argentina\" },\n    { value: \"am\", label: \"Armenia\" },\n    { value: \"au\", label: \"Australia\" },\n    { value: \"at\", label: \"Austria\" },\n    { value: \"az\", label: \"Azerbaijan\" },\n    { value: \"bs\", label: \"Bahamas\" },\n    { value: \"bh\", label: \"Bahrain\" },\n    { value: \"bd\", label: \"Bangladesh\" },\n    { value: \"bb\", label: \"Barbados\" },\n    { value: \"by\", label: \"Belarus\" },\n    { value: \"be\", label: \"Belgium\" },\n    { value: \"bz\", label: \"Belize\" },\n    { value: \"bj\", label: \"Benin\" },\n    { value: \"bt\", label: \"Bhutan\" },\n    { value: \"bo\", label: \"Bolivia\" },\n    { value: \"ba\", label: \"Bosnia and Herzegovina\" },\n    { value: \"bw\", label: \"Botswana\" },\n    { value: \"br\", label: \"Brazil\" },\n    { value: \"bn\", label: \"Brunei\" },\n    { value: \"bg\", label: \"Bulgaria\" },\n    { value: \"bf\", label: \"Burkina Faso\" },\n    { value: \"bi\", label: \"Burundi\" },\n    { value: \"kh\", label: \"Cambodia\" },\n    { value: \"cm\", label: \"Cameroon\" },\n    { value: \"ca\", label: \"Canada\" },\n    { value: \"cv\", label: \"Cape Verde\" },\n    { value: \"cf\", label: \"Central African Republic\" },\n    { value: \"td\", label: \"Chad\" },\n    { value: \"cl\", label: \"Chile\" },\n    { value: \"cn\", label: \"China\" },\n    { value: \"co\", label: \"Colombia\" },\n    { value: \"km\", label: \"Comoros\" },\n    { value: \"cg\", label: \"Congo\" },\n    { value: \"cr\", label: \"Costa Rica\" },\n    { value: \"ci\", label: \"Côte d'Ivoire\" },\n    { value: \"hr\", label: \"Croatia\" },\n    { value: \"cu\", label: \"Cuba\" },\n    { value: \"cy\", label: \"Cyprus\" },\n    { value: \"cz\", label: \"Czech Republic\" },\n    { value: \"dk\", label: \"Denmark\" },\n    { value: \"dj\", label: \"Djibouti\" },\n    { value: \"dm\", label: \"Dominica\" },\n    { value: \"do\", label: \"Dominican Republic\" },\n    { value: \"ec\", label: \"Ecuador\" },\n    { value: \"eg\", label: \"Egypt\" },\n    { value: \"sv\", label: \"El Salvador\" },\n    { value: \"gq\", label: \"Equatorial Guinea\" },\n    { value: \"er\", label: \"Eritrea\" },\n    { value: \"ee\", label: \"Estonia\" },\n    { value: \"et\", label: \"Ethiopia\" },\n    { value: \"fj\", label: \"Fiji\" },\n    { value: \"fi\", label: \"Finland\" },\n    { value: \"fr\", label: \"France\" },\n    { value: \"ga\", label: \"Gabon\" },\n    { value: \"gm\", label: \"Gambia\" },\n    { value: \"ge\", label: \"Georgia\" },\n    { value: \"de\", label: \"Germany\" },\n    { value: \"gh\", label: \"Ghana\" },\n    { value: \"gr\", label: \"Greece\" },\n    { value: \"gd\", label: \"Grenada\" },\n    { value: \"gt\", label: \"Guatemala\" },\n    { value: \"gn\", label: \"Guinea\" },\n    { value: \"gw\", label: \"Guinea-Bissau\" },\n    { value: \"gy\", label: \"Guyana\" },\n    { value: \"ht\", label: \"Haiti\" },\n    { value: \"hn\", label: \"Honduras\" },\n    { value: \"hu\", label: \"Hungary\" },\n    { value: \"is\", label: \"Iceland\" },\n    { value: \"in\", label: \"India\" },\n    { value: \"id\", label: \"Indonesia\" },\n    { value: \"ir\", label: \"Iran\" },\n    { value: \"iq\", label: \"Iraq\" },\n    { value: \"ie\", label: \"Ireland\" },\n    { value: \"il\", label: \"Israel\" },\n    { value: \"it\", label: \"Italy\" },\n    { value: \"jm\", label: \"Jamaica\" },\n    { value: \"jp\", label: \"Japan\" },\n    { value: \"jo\", label: \"Jordan\" },\n    { value: \"kz\", label: \"Kazakhstan\" },\n    { value: \"ke\", label: \"Kenya\" },\n    { value: \"ki\", label: \"Kiribati\" },\n    { value: \"kp\", label: \"Korea, North\" },\n    { value: \"kr\", label: \"Korea, South\" },\n    { value: \"kw\", label: \"Kuwait\" },\n    { value: \"kg\", label: \"Kyrgyzstan\" },\n    { value: \"la\", label: \"Laos\" },\n    { value: \"lv\", label: \"Latvia\" },\n    { value: \"lb\", label: \"Lebanon\" },\n    { value: \"ls\", label: \"Lesotho\" },\n    { value: \"lr\", label: \"Liberia\" },\n    { value: \"ly\", label: \"Libya\" },\n    { value: \"li\", label: \"Liechtenstein\" },\n    { value: \"lt\", label: \"Lithuania\" },\n    { value: \"lu\", label: \"Luxembourg\" },\n    { value: \"mk\", label: \"Macedonia\" },\n    { value: \"mg\", label: \"Madagascar\" },\n    { value: \"mw\", label: \"Malawi\" },\n    { value: \"my\", label: \"Malaysia\" },\n    { value: \"mv\", label: \"Maldives\" },\n    { value: \"ml\", label: \"Mali\" },\n    { value: \"mt\", label: \"Malta\" },\n    { value: \"mh\", label: \"Marshall Islands\" },\n    { value: \"mr\", label: \"Mauritania\" },\n    { value: \"mu\", label: \"Mauritius\" },\n    { value: \"mx\", label: \"Mexico\" },\n    { value: \"fm\", label: \"Micronesia\" },\n    { value: \"md\", label: \"Moldova\" },\n    { value: \"mc\", label: \"Monaco\" },\n    { value: \"mn\", label: \"Mongolia\" },\n    { value: \"me\", label: \"Montenegro\" },\n    { value: \"ma\", label: \"Morocco\" },\n    { value: \"mz\", label: \"Mozambique\" },\n    { value: \"mm\", label: \"Myanmar\" },\n    { value: \"na\", label: \"Namibia\" },\n    { value: \"nr\", label: \"Nauru\" },\n    { value: \"np\", label: \"Nepal\" },\n    { value: \"nl\", label: \"Netherlands\" },\n    { value: \"nz\", label: \"New Zealand\" },\n    { value: \"ni\", label: \"Nicaragua\" },\n    { value: \"ne\", label: \"Niger\" },\n    { value: \"ng\", label: \"Nigeria\" },\n    { value: \"no\", label: \"Norway\" },\n    { value: \"om\", label: \"Oman\" },\n    { value: \"pk\", label: \"Pakistan\" },\n    { value: \"pw\", label: \"Palau\" },\n    { value: \"pa\", label: \"Panama\" },\n    { value: \"pg\", label: \"Papua New Guinea\" },\n    { value: \"py\", label: \"Paraguay\" },\n    { value: \"pe\", label: \"Peru\" },\n    { value: \"ph\", label: \"Philippines\" },\n    { value: \"pl\", label: \"Poland\" },\n    { value: \"pt\", label: \"Portugal\" },\n    { value: \"qa\", label: \"Qatar\" },\n    { value: \"ro\", label: \"Romania\" },\n    { value: \"ru\", label: \"Russia\" },\n    { value: \"rw\", label: \"Rwanda\" },\n    { value: \"kn\", label: \"Saint Kitts and Nevis\" },\n    { value: \"lc\", label: \"Saint Lucia\" },\n    { value: \"vc\", label: \"Saint Vincent and the Grenadines\" },\n    { value: \"ws\", label: \"Samoa\" },\n    { value: \"sm\", label: \"San Marino\" },\n    { value: \"st\", label: \"São Tomé and Príncipe\" },\n    { value: \"sa\", label: \"Saudi Arabia\" },\n    { value: \"sn\", label: \"Senegal\" },\n    { value: \"rs\", label: \"Serbia\" },\n    { value: \"sc\", label: \"Seychelles\" },\n    { value: \"sl\", label: \"Sierra Leone\" },\n    { value: \"sg\", label: \"Singapore\" },\n    { value: \"sk\", label: \"Slovakia\" },\n    { value: \"si\", label: \"Slovenia\" },\n    { value: \"sb\", label: \"Solomon Islands\" },\n    { value: \"so\", label: \"Somalia\" },\n    { value: \"za\", label: \"South Africa\" },\n    { value: \"ss\", label: \"South Sudan\" },\n    { value: \"es\", label: \"Spain\" },\n    { value: \"lk\", label: \"Sri Lanka\" },\n    { value: \"sd\", label: \"Sudan\" },\n    { value: \"sr\", label: \"Suriname\" },\n    { value: \"sz\", label: \"Swaziland\" },\n    { value: \"se\", label: \"Sweden\" },\n    { value: \"ch\", label: \"Switzerland\" },\n    { value: \"sy\", label: \"Syria\" },\n    { value: \"tw\", label: \"Taiwan\" },\n    { value: \"tj\", label: \"Tajikistan\" },\n    { value: \"tz\", label: \"Tanzania\" },\n    { value: \"th\", label: \"Thailand\" },\n    { value: \"tl\", label: \"Timor-Leste\" },\n    { value: \"tg\", label: \"Togo\" },\n    { value: \"to\", label: \"Tonga\" },\n    { value: \"tt\", label: \"Trinidad and Tobago\" },\n    { value: \"tn\", label: \"Tunisia\" },\n    { value: \"tr\", label: \"Turkey\" },\n    { value: \"tm\", label: \"Turkmenistan\" },\n    { value: \"tv\", label: \"Tuvalu\" },\n    { value: \"ug\", label: \"Uganda\" },\n    { value: \"ua\", label: \"Ukraine\" },\n    { value: \"ae\", label: \"United Arab Emirates\" },\n    { value: \"gb\", label: \"United Kingdom\" },\n    { value: \"us\", label: \"United States\" },\n    { value: \"uy\", label: \"Uruguay\" },\n    { value: \"uz\", label: \"Uzbekistan\" },\n    { value: \"vu\", label: \"Vanuatu\" },\n    { value: \"va\", label: \"Vatican City\" },\n    { value: \"ve\", label: \"Venezuela\" },\n    { value: \"vn\", label: \"Vietnam\" },\n    { value: \"ye\", label: \"Yemen\" },\n    { value: \"zm\", label: \"Zambia\" },\n    { value: \"zw\", label: \"Zimbabwe\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Country (searchable)</label>\n      <Select>\n        <SelectTrigger className=\"w-[250px]\">\n          <SelectValue placeholder=\"Select a country\" />\n        </SelectTrigger>\n        <SelectContent>\n          {countries.map((country) => (\n            <SelectItem key={country.value} value={country.value}>\n              {country.label}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n      <p className=\"text-xs text-muted-foreground\">\n        Type to search through {countries.length} countries\n      </p>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { User, Mail, Phone, MessageSquare } from \"lucide-react\"\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  SelectGroup,\n  SelectLabel,\n  SelectSeparator,\n  Button \n} from \"@helgadigitals/vera-ui\"\nfunction LongListSelectExample() {\n  const countries = [\n    { value: \"af\", label: \"Afghanistan\" },\n    { value: \"al\", label: \"Albania\" },\n    { value: \"dz\", label: \"Algeria\" },\n    { value: \"ad\", label: \"Andorra\" },\n    { value: \"ao\", label: \"Angola\" },\n    { value: \"ar\", label: \"Argentina\" },\n    { value: \"am\", label: \"Armenia\" },\n    { value: \"au\", label: \"Australia\" },\n    { value: \"at\", label: \"Austria\" },\n    { value: \"az\", label: \"Azerbaijan\" },\n    { value: \"bs\", label: \"Bahamas\" },\n    { value: \"bh\", label: \"Bahrain\" },\n    { value: \"bd\", label: \"Bangladesh\" },\n    { value: \"bb\", label: \"Barbados\" },\n    { value: \"by\", label: \"Belarus\" },\n    { value: \"be\", label: \"Belgium\" },\n    { value: \"bz\", label: \"Belize\" },\n    { value: \"bj\", label: \"Benin\" },\n    { value: \"bt\", label: \"Bhutan\" },\n    { value: \"bo\", label: \"Bolivia\" },\n    { value: \"ba\", label: \"Bosnia and Herzegovina\" },\n    { value: \"bw\", label: \"Botswana\" },\n    { value: \"br\", label: \"Brazil\" },\n    { value: \"bn\", label: \"Brunei\" },\n    { value: \"bg\", label: \"Bulgaria\" },\n    { value: \"bf\", label: \"Burkina Faso\" },\n    { value: \"bi\", label: \"Burundi\" },\n    { value: \"kh\", label: \"Cambodia\" },\n    { value: \"cm\", label: \"Cameroon\" },\n    { value: \"ca\", label: \"Canada\" },\n    { value: \"cv\", label: \"Cape Verde\" },\n    { value: \"cf\", label: \"Central African Republic\" },\n    { value: \"td\", label: \"Chad\" },\n    { value: \"cl\", label: \"Chile\" },\n    { value: \"cn\", label: \"China\" },\n    { value: \"co\", label: \"Colombia\" },\n    { value: \"km\", label: \"Comoros\" },\n    { value: \"cg\", label: \"Congo\" },\n    { value: \"cr\", label: \"Costa Rica\" },\n    { value: \"ci\", label: \"Côte d'Ivoire\" },\n    { value: \"hr\", label: \"Croatia\" },\n    { value: \"cu\", label: \"Cuba\" },\n    { value: \"cy\", label: \"Cyprus\" },\n    { value: \"cz\", label: \"Czech Republic\" },\n    { value: \"dk\", label: \"Denmark\" },\n    { value: \"dj\", label: \"Djibouti\" },\n    { value: \"dm\", label: \"Dominica\" },\n    { value: \"do\", label: \"Dominican Republic\" },\n    { value: \"ec\", label: \"Ecuador\" },\n    { value: \"eg\", label: \"Egypt\" },\n    { value: \"sv\", label: \"El Salvador\" },\n    { value: \"gq\", label: \"Equatorial Guinea\" },\n    { value: \"er\", label: \"Eritrea\" },\n    { value: \"ee\", label: \"Estonia\" },\n    { value: \"et\", label: \"Ethiopia\" },\n    { value: \"fj\", label: \"Fiji\" },\n    { value: \"fi\", label: \"Finland\" },\n    { value: \"fr\", label: \"France\" },\n    { value: \"ga\", label: \"Gabon\" },\n    { value: \"gm\", label: \"Gambia\" },\n    { value: \"ge\", label: \"Georgia\" },\n    { value: \"de\", label: \"Germany\" },\n    { value: \"gh\", label: \"Ghana\" },\n    { value: \"gr\", label: \"Greece\" },\n    { value: \"gd\", label: \"Grenada\" },\n    { value: \"gt\", label: \"Guatemala\" },\n    { value: \"gn\", label: \"Guinea\" },\n    { value: \"gw\", label: \"Guinea-Bissau\" },\n    { value: \"gy\", label: \"Guyana\" },\n    { value: \"ht\", label: \"Haiti\" },\n    { value: \"hn\", label: \"Honduras\" },\n    { value: \"hu\", label: \"Hungary\" },\n    { value: \"is\", label: \"Iceland\" },\n    { value: \"in\", label: \"India\" },\n    { value: \"id\", label: \"Indonesia\" },\n    { value: \"ir\", label: \"Iran\" },\n    { value: \"iq\", label: \"Iraq\" },\n    { value: \"ie\", label: \"Ireland\" },\n    { value: \"il\", label: \"Israel\" },\n    { value: \"it\", label: \"Italy\" },\n    { value: \"jm\", label: \"Jamaica\" },\n    { value: \"jp\", label: \"Japan\" },\n    { value: \"jo\", label: \"Jordan\" },\n    { value: \"kz\", label: \"Kazakhstan\" },\n    { value: \"ke\", label: \"Kenya\" },\n    { value: \"ki\", label: \"Kiribati\" },\n    { value: \"kp\", label: \"Korea, North\" },\n    { value: \"kr\", label: \"Korea, South\" },\n    { value: \"kw\", label: \"Kuwait\" },\n    { value: \"kg\", label: \"Kyrgyzstan\" },\n    { value: \"la\", label: \"Laos\" },\n    { value: \"lv\", label: \"Latvia\" },\n    { value: \"lb\", label: \"Lebanon\" },\n    { value: \"ls\", label: \"Lesotho\" },\n    { value: \"lr\", label: \"Liberia\" },\n    { value: \"ly\", label: \"Libya\" },\n    { value: \"li\", label: \"Liechtenstein\" },\n    { value: \"lt\", label: \"Lithuania\" },\n    { value: \"lu\", label: \"Luxembourg\" },\n    { value: \"mk\", label: \"Macedonia\" },\n    { value: \"mg\", label: \"Madagascar\" },\n    { value: \"mw\", label: \"Malawi\" },\n    { value: \"my\", label: \"Malaysia\" },\n    { value: \"mv\", label: \"Maldives\" },\n    { value: \"ml\", label: \"Mali\" },\n    { value: \"mt\", label: \"Malta\" },\n    { value: \"mh\", label: \"Marshall Islands\" },\n    { value: \"mr\", label: \"Mauritania\" },\n    { value: \"mu\", label: \"Mauritius\" },\n    { value: \"mx\", label: \"Mexico\" },\n    { value: \"fm\", label: \"Micronesia\" },\n    { value: \"md\", label: \"Moldova\" },\n    { value: \"mc\", label: \"Monaco\" },\n    { value: \"mn\", label: \"Mongolia\" },\n    { value: \"me\", label: \"Montenegro\" },\n    { value: \"ma\", label: \"Morocco\" },\n    { value: \"mz\", label: \"Mozambique\" },\n    { value: \"mm\", label: \"Myanmar\" },\n    { value: \"na\", label: \"Namibia\" },\n    { value: \"nr\", label: \"Nauru\" },\n    { value: \"np\", label: \"Nepal\" },\n    { value: \"nl\", label: \"Netherlands\" },\n    { value: \"nz\", label: \"New Zealand\" },\n    { value: \"ni\", label: \"Nicaragua\" },\n    { value: \"ne\", label: \"Niger\" },\n    { value: \"ng\", label: \"Nigeria\" },\n    { value: \"no\", label: \"Norway\" },\n    { value: \"om\", label: \"Oman\" },\n    { value: \"pk\", label: \"Pakistan\" },\n    { value: \"pw\", label: \"Palau\" },\n    { value: \"pa\", label: \"Panama\" },\n    { value: \"pg\", label: \"Papua New Guinea\" },\n    { value: \"py\", label: \"Paraguay\" },\n    { value: \"pe\", label: \"Peru\" },\n    { value: \"ph\", label: \"Philippines\" },\n    { value: \"pl\", label: \"Poland\" },\n    { value: \"pt\", label: \"Portugal\" },\n    { value: \"qa\", label: \"Qatar\" },\n    { value: \"ro\", label: \"Romania\" },\n    { value: \"ru\", label: \"Russia\" },\n    { value: \"rw\", label: \"Rwanda\" },\n    { value: \"kn\", label: \"Saint Kitts and Nevis\" },\n    { value: \"lc\", label: \"Saint Lucia\" },\n    { value: \"vc\", label: \"Saint Vincent and the Grenadines\" },\n    { value: \"ws\", label: \"Samoa\" },\n    { value: \"sm\", label: \"San Marino\" },\n    { value: \"st\", label: \"São Tomé and Príncipe\" },\n    { value: \"sa\", label: \"Saudi Arabia\" },\n    { value: \"sn\", label: \"Senegal\" },\n    { value: \"rs\", label: \"Serbia\" },\n    { value: \"sc\", label: \"Seychelles\" },\n    { value: \"sl\", label: \"Sierra Leone\" },\n    { value: \"sg\", label: \"Singapore\" },\n    { value: \"sk\", label: \"Slovakia\" },\n    { value: \"si\", label: \"Slovenia\" },\n    { value: \"sb\", label: \"Solomon Islands\" },\n    { value: \"so\", label: \"Somalia\" },\n    { value: \"za\", label: \"South Africa\" },\n    { value: \"ss\", label: \"South Sudan\" },\n    { value: \"es\", label: \"Spain\" },\n    { value: \"lk\", label: \"Sri Lanka\" },\n    { value: \"sd\", label: \"Sudan\" },\n    { value: \"sr\", label: \"Suriname\" },\n    { value: \"sz\", label: \"Swaziland\" },\n    { value: \"se\", label: \"Sweden\" },\n    { value: \"ch\", label: \"Switzerland\" },\n    { value: \"sy\", label: \"Syria\" },\n    { value: \"tw\", label: \"Taiwan\" },\n    { value: \"tj\", label: \"Tajikistan\" },\n    { value: \"tz\", label: \"Tanzania\" },\n    { value: \"th\", label: \"Thailand\" },\n    { value: \"tl\", label: \"Timor-Leste\" },\n    { value: \"tg\", label: \"Togo\" },\n    { value: \"to\", label: \"Tonga\" },\n    { value: \"tt\", label: \"Trinidad and Tobago\" },\n    { value: \"tn\", label: \"Tunisia\" },\n    { value: \"tr\", label: \"Turkey\" },\n    { value: \"tm\", label: \"Turkmenistan\" },\n    { value: \"tv\", label: \"Tuvalu\" },\n    { value: \"ug\", label: \"Uganda\" },\n    { value: \"ua\", label: \"Ukraine\" },\n    { value: \"ae\", label: \"United Arab Emirates\" },\n    { value: \"gb\", label: \"United Kingdom\" },\n    { value: \"us\", label: \"United States\" },\n    { value: \"uy\", label: \"Uruguay\" },\n    { value: \"uz\", label: \"Uzbekistan\" },\n    { value: \"vu\", label: \"Vanuatu\" },\n    { value: \"va\", label: \"Vatican City\" },\n    { value: \"ve\", label: \"Venezuela\" },\n    { value: \"vn\", label: \"Vietnam\" },\n    { value: \"ye\", label: \"Yemen\" },\n    { value: \"zm\", label: \"Zambia\" },\n    { value: \"zw\", label: \"Zimbabwe\" },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Country (searchable)</label>\n      <Select>\n        <SelectTrigger className=\"w-[250px]\">\n          <SelectValue placeholder=\"Select a country\" />\n        </SelectTrigger>\n        <SelectContent>\n          {countries.map((country) => (\n            <SelectItem key={country.value} value={country.value}>\n              {country.label}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n      <p className=\"text-xs text-muted-foreground\">\n        Type to search through {countries.length} countries\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/switch-examples.tsx#FeatureTogglesExample": {
    "path": "components/form-components-examples/switch-examples.tsx",
    "functionName": "FeatureTogglesExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Switch, Label, Card } from \"@helgadigitals/vera-ui\"",
      "function": "function FeatureTogglesExample() {\n  const [features, setFeatures] = useState({\n    betaFeatures: false,\n    advancedMode: false,\n    autoSave: true,\n    realTimeSync: false,\n  })\n\n  const handleFeatureToggle = (feature: string) => (checked: boolean) => {\n    setFeatures(prev => ({ ...prev, [feature]: checked }))\n  }\n\n  return (\n    <Card className=\"p-6 max-w-md\">\n      <h3 className=\"text-lg font-semibold mb-4\">Feature Toggles</h3>\n      \n      <div className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"beta\" className=\"flex-1\">\n            Beta Features\n          </Label>\n          <Switch\n            id=\"beta\"\n            checked={features.betaFeatures}\n            onCheckedChange={handleFeatureToggle('betaFeatures')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"advanced\" className=\"flex-1\">\n            Advanced Mode\n          </Label>\n          <Switch\n            id=\"advanced\"\n            checked={features.advancedMode}\n            onCheckedChange={handleFeatureToggle('advancedMode')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"autosave\" className=\"flex-1\">\n            Auto Save\n          </Label>\n          <Switch\n            id=\"autosave\"\n            checked={features.autoSave}\n            onCheckedChange={handleFeatureToggle('autoSave')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"sync\" className=\"flex-1\">\n            Real-time Sync\n          </Label>\n          <Switch\n            id=\"sync\"\n            checked={features.realTimeSync}\n            onCheckedChange={handleFeatureToggle('realTimeSync')}\n          />\n        </div>\n      </div>\n    </Card>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Switch, Label, Card } from \"@helgadigitals/vera-ui\"\nfunction FeatureTogglesExample() {\n  const [features, setFeatures] = useState({\n    betaFeatures: false,\n    advancedMode: false,\n    autoSave: true,\n    realTimeSync: false,\n  })\n\n  const handleFeatureToggle = (feature: string) => (checked: boolean) => {\n    setFeatures(prev => ({ ...prev, [feature]: checked }))\n  }\n\n  return (\n    <Card className=\"p-6 max-w-md\">\n      <h3 className=\"text-lg font-semibold mb-4\">Feature Toggles</h3>\n      \n      <div className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"beta\" className=\"flex-1\">\n            Beta Features\n          </Label>\n          <Switch\n            id=\"beta\"\n            checked={features.betaFeatures}\n            onCheckedChange={handleFeatureToggle('betaFeatures')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"advanced\" className=\"flex-1\">\n            Advanced Mode\n          </Label>\n          <Switch\n            id=\"advanced\"\n            checked={features.advancedMode}\n            onCheckedChange={handleFeatureToggle('advancedMode')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"autosave\" className=\"flex-1\">\n            Auto Save\n          </Label>\n          <Switch\n            id=\"autosave\"\n            checked={features.autoSave}\n            onCheckedChange={handleFeatureToggle('autoSave')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"sync\" className=\"flex-1\">\n            Real-time Sync\n          </Label>\n          <Switch\n            id=\"sync\"\n            checked={features.realTimeSync}\n            onCheckedChange={handleFeatureToggle('realTimeSync')}\n          />\n        </div>\n      </div>\n    </Card>\n  )\n}"
    }
  },
  "components/form-components-examples/switch-examples.tsx#CustomStylingExample": {
    "path": "components/form-components-examples/switch-examples.tsx",
    "functionName": "CustomStylingExample",
    "extractedCode": {
      "imports": "import { useState } from \"react\"\nimport { Switch, Label, Card } from \"@helgadigitals/vera-ui\"",
      "function": "function CustomStylingExample() {\n  const [isEnabled, setIsEnabled] = useState(false)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Large switch */}\n      <div className=\"flex items-center space-x-3\">\n        <Switch\n          id=\"large\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"h-6 w-11\"\n        />\n        <Label htmlFor=\"large\" className=\"text-lg\">\n          Large Switch\n        </Label>\n      </div>\n\n      {/* Colored switch */}\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"colored\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"data-[state=checked]:bg-green-600\"\n        />\n        <Label htmlFor=\"colored\">\n          Custom Color Switch\n        </Label>\n      </div>\n\n      {/* Switch with custom thumb */}\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"custom-thumb\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"[&>span]:bg-blue-600 [&>span]:data-[state=checked]:bg-white\"\n        />\n        <Label htmlFor=\"custom-thumb\">\n          Custom Thumb Color\n        </Label>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState } from \"react\"\nimport { Switch, Label, Card } from \"@helgadigitals/vera-ui\"\nfunction CustomStylingExample() {\n  const [isEnabled, setIsEnabled] = useState(false)\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Large switch */}\n      <div className=\"flex items-center space-x-3\">\n        <Switch\n          id=\"large\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"h-6 w-11\"\n        />\n        <Label htmlFor=\"large\" className=\"text-lg\">\n          Large Switch\n        </Label>\n      </div>\n\n      {/* Colored switch */}\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"colored\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"data-[state=checked]:bg-green-600\"\n        />\n        <Label htmlFor=\"colored\">\n          Custom Color Switch\n        </Label>\n      </div>\n\n      {/* Switch with custom thumb */}\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id=\"custom-thumb\"\n          checked={isEnabled}\n          onCheckedChange={setIsEnabled}\n          className=\"[&>span]:bg-blue-600 [&>span]:data-[state=checked]:bg-white\"\n        />\n        <Label htmlFor=\"custom-thumb\">\n          Custom Thumb Color\n        </Label>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#DifferentSizesExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "DifferentSizesExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function DifferentSizesExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Small textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"small\">Small Textarea</Label>\n        <Textarea\n          id=\"small\"\n          placeholder=\"Small textarea...\"\n          className=\"min-h-[80px] w-[300px]\"\n        />\n      </div>\n\n      {/* Default textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"default\">Default Textarea</Label>\n        <Textarea\n          id=\"default\"\n          placeholder=\"Default textarea...\"\n          className=\"w-[300px]\"\n        />\n      </div>\n\n      {/* Large textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"large\">Large Textarea</Label>\n        <Textarea\n          id=\"large\"\n          placeholder=\"Large textarea...\"\n          className=\"min-h-[150px] w-[300px]\"\n        />\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction DifferentSizesExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Small textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"small\">Small Textarea</Label>\n        <Textarea\n          id=\"small\"\n          placeholder=\"Small textarea...\"\n          className=\"min-h-[80px] w-[300px]\"\n        />\n      </div>\n\n      {/* Default textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"default\">Default Textarea</Label>\n        <Textarea\n          id=\"default\"\n          placeholder=\"Default textarea...\"\n          className=\"w-[300px]\"\n        />\n      </div>\n\n      {/* Large textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"large\">Large Textarea</Label>\n        <Textarea\n          id=\"large\"\n          placeholder=\"Large textarea...\"\n          className=\"min-h-[150px] w-[300px]\"\n        />\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#DisabledReadonlyStatesExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "DisabledReadonlyStatesExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function DisabledReadonlyStatesExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"disabled\">Disabled Textarea</Label>\n        <Textarea\n          id=\"disabled\"\n          placeholder=\"This textarea is disabled\"\n          disabled\n          className=\"w-[300px]\"\n        />\n      </div>\n\n      {/* Read-only textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"readonly\">Read-only Textarea</Label>\n        <Textarea\n          id=\"readonly\"\n          value=\"This textarea is read-only and cannot be edited.\"\n          readOnly\n          className=\"w-[300px]\"\n        />\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction DisabledReadonlyStatesExample() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Disabled textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"disabled\">Disabled Textarea</Label>\n        <Textarea\n          id=\"disabled\"\n          placeholder=\"This textarea is disabled\"\n          disabled\n          className=\"w-[300px]\"\n        />\n      </div>\n\n      {/* Read-only textarea */}\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"readonly\">Read-only Textarea</Label>\n        <Textarea\n          id=\"readonly\"\n          value=\"This textarea is read-only and cannot be edited.\"\n          readOnly\n          className=\"w-[300px]\"\n        />\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#FormIntegrationExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "FormIntegrationExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm()\n\n  const watchedValues = watch()\n\n  const onSubmit = (data: any) => {\n    console.log(data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"feedback\">Feedback *</Label>\n        <Controller\n          name=\"feedback\"\n          control={control}\n          rules={{\n            required: \"Feedback is required\",\n            minLength: {\n              value: 10,\n              message: \"Feedback must be at least 10 characters\"\n            }\n          }}\n          render={({ field }) => (\n            <Textarea\n              id=\"feedback\"\n              placeholder=\"Please share your feedback...\"\n              className={`w-[300px] ${errors.feedback ? \"border-destructive\" : \"\"}`}\n              {...field}\n            />\n          )}\n        />\n        {errors.feedback && (\n          <p className=\"text-sm text-destructive\">\n            {errors.feedback.message as string}\n          </p>\n        )}\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"comments\">Additional Comments</Label>\n        <Controller\n          name=\"comments\"\n          control={control}\n          render={({ field }) => (\n            <Textarea\n              id=\"comments\"\n              placeholder=\"Any additional comments (optional)...\"\n              className=\"w-[300px]\"\n              {...field}\n            />\n          )}\n        />\n      </div>\n\n      <Button type=\"submit\" className=\"w-[300px]\">Submit Feedback</Button>\n      \n      {/* Display current form values */}\n      {(watchedValues.feedback || watchedValues.comments) && (\n        <div className=\"text-sm text-muted-foreground\">\n          <p><strong>Form data:</strong></p>\n          <pre className=\"text-xs\">{JSON.stringify(watchedValues, null, 2)}</pre>\n        </div>\n      )}\n    </form>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction FormIntegrationExample() {\n  const { control, handleSubmit, formState: { errors }, watch } = useForm()\n\n  const watchedValues = watch()\n\n  const onSubmit = (data: any) => {\n    console.log(data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"feedback\">Feedback *</Label>\n        <Controller\n          name=\"feedback\"\n          control={control}\n          rules={{\n            required: \"Feedback is required\",\n            minLength: {\n              value: 10,\n              message: \"Feedback must be at least 10 characters\"\n            }\n          }}\n          render={({ field }) => (\n            <Textarea\n              id=\"feedback\"\n              placeholder=\"Please share your feedback...\"\n              className={`w-[300px] ${errors.feedback ? \"border-destructive\" : \"\"}`}\n              {...field}\n            />\n          )}\n        />\n        {errors.feedback && (\n          <p className=\"text-sm text-destructive\">\n            {errors.feedback.message as string}\n          </p>\n        )}\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"comments\">Additional Comments</Label>\n        <Controller\n          name=\"comments\"\n          control={control}\n          render={({ field }) => (\n            <Textarea\n              id=\"comments\"\n              placeholder=\"Any additional comments (optional)...\"\n              className=\"w-[300px]\"\n              {...field}\n            />\n          )}\n        />\n      </div>\n\n      <Button type=\"submit\" className=\"w-[300px]\">Submit Feedback</Button>\n      \n      {/* Display current form values */}\n      {(watchedValues.feedback || watchedValues.comments) && (\n        <div className=\"text-sm text-muted-foreground\">\n          <p><strong>Form data:</strong></p>\n          <pre className=\"text-xs\">{JSON.stringify(watchedValues, null, 2)}</pre>\n        </div>\n      )}\n    </form>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#AutoResizeExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "AutoResizeExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function AutoResizeExample() {\n  const [value, setValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"auto-resize\">Auto-resizing Textarea</Label>\n      <AutoResizeTextarea\n        id=\"auto-resize\"\n        value={value}\n        onChange={(e: any) => setValue(e.target.value)}\n        placeholder=\"Start typing and watch the textarea grow...\"\n      />\n      <p className=\"text-sm text-muted-foreground\">\n        Lines: {value.split('\\n').length} | Characters: {value.length}\n      </p>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction AutoResizeExample() {\n  const [value, setValue] = useState(\"\")\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"auto-resize\">Auto-resizing Textarea</Label>\n      <AutoResizeTextarea\n        id=\"auto-resize\"\n        value={value}\n        onChange={(e: any) => setValue(e.target.value)}\n        placeholder=\"Start typing and watch the textarea grow...\"\n      />\n      <p className=\"text-sm text-muted-foreground\">\n        Lines: {value.split('\\n').length} | Characters: {value.length}\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#WithHelperTextExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "WithHelperTextExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function WithHelperTextExample() {\n  const [value, setValue] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  const validateInput = (text: string) => {\n    if (text.length > 0 && text.length < 5) {\n      setError(\"Description must be at least 5 characters long\")\n    } else if (text.length > 500) {\n      setError(\"Description cannot exceed 500 characters\")\n    } else {\n      setError(\"\")\n    }\n  }\n\n  const handleChange = (e: any) => {\n    const newValue = e.target.value\n    setValue(newValue)\n    validateInput(newValue)\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"description\">Product Description</Label>\n      <Textarea\n        id=\"description\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Describe your product...\"\n        className={`w-[300px] ${error ? \"border-destructive focus-visible:ring-destructive/20\" : \"\"}`}\n      />\n      <div className=\"flex justify-between text-sm\">\n        <div className=\"space-y-1\">\n          <p className=\"text-muted-foreground\">\n            Provide a detailed description of your product&apos;s features and benefits.\n          </p>\n          {error && (\n            <p className=\"text-destructive\">{error}</p>\n          )}\n        </div>\n        <span className=\"text-muted-foreground shrink-0\">\n          {value.length}/500\n        </span>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction WithHelperTextExample() {\n  const [value, setValue] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  const validateInput = (text: string) => {\n    if (text.length > 0 && text.length < 5) {\n      setError(\"Description must be at least 5 characters long\")\n    } else if (text.length > 500) {\n      setError(\"Description cannot exceed 500 characters\")\n    } else {\n      setError(\"\")\n    }\n  }\n\n  const handleChange = (e: any) => {\n    const newValue = e.target.value\n    setValue(newValue)\n    validateInput(newValue)\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"description\">Product Description</Label>\n      <Textarea\n        id=\"description\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Describe your product...\"\n        className={`w-[300px] ${error ? \"border-destructive focus-visible:ring-destructive/20\" : \"\"}`}\n      />\n      <div className=\"flex justify-between text-sm\">\n        <div className=\"space-y-1\">\n          <p className=\"text-muted-foreground\">\n            Provide a detailed description of your product&apos;s features and benefits.\n          </p>\n          {error && (\n            <p className=\"text-destructive\">{error}</p>\n          )}\n        </div>\n        <span className=\"text-muted-foreground shrink-0\">\n          {value.length}/500\n        </span>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#MessageComposerExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "MessageComposerExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function MessageComposerExample() {\n  const [message, setMessage] = useState(\"\")\n\n  const handleSend = () => {\n    if (message.trim()) {\n      console.log(\"Sending message:\", message)\n      setMessage(\"\")\n    }\n  }\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === \"Enter\" && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault()\n      handleSend()\n    }\n  }\n\n  return (\n    <div className=\"border rounded-lg p-4 space-y-3\">\n      <Textarea\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Type your message... (Cmd/Ctrl + Enter to send)\"\n        className=\"border-0 shadow-none resize-none focus-visible:ring-0 p-0 w-[300px]\"\n        rows={3}\n      />\n      \n      <div className=\"flex justify-between items-center\">\n        <p className=\"text-xs text-muted-foreground\">\n          {message.length > 0 && `${message.length} characters`}\n        </p>\n        <Button\n          onClick={handleSend}\n          disabled={!message.trim()}\n          size=\"sm\"\n          className=\"gap-2\"\n        >\n          <Send className=\"h-4 w-4\" />\n          Send\n        </Button>\n      </div>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction MessageComposerExample() {\n  const [message, setMessage] = useState(\"\")\n\n  const handleSend = () => {\n    if (message.trim()) {\n      console.log(\"Sending message:\", message)\n      setMessage(\"\")\n    }\n  }\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === \"Enter\" && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault()\n      handleSend()\n    }\n  }\n\n  return (\n    <div className=\"border rounded-lg p-4 space-y-3\">\n      <Textarea\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Type your message... (Cmd/Ctrl + Enter to send)\"\n        className=\"border-0 shadow-none resize-none focus-visible:ring-0 p-0 w-[300px]\"\n        rows={3}\n      />\n      \n      <div className=\"flex justify-between items-center\">\n        <p className=\"text-xs text-muted-foreground\">\n          {message.length > 0 && `${message.length} characters`}\n        </p>\n        <Button\n          onClick={handleSend}\n          disabled={!message.trim()}\n          size=\"sm\"\n          className=\"gap-2\"\n        >\n          <Send className=\"h-4 w-4\" />\n          Send\n        </Button>\n      </div>\n    </div>\n  )\n}"
    }
  },
  "components/form-components-examples/textarea-examples.tsx#CodeEditorExample": {
    "path": "components/form-components-examples/textarea-examples.tsx",
    "functionName": "CodeEditorExample",
    "extractedCode": {
      "imports": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"",
      "function": "function CodeEditorExample() {\n  const [code, setCode] = useState(`function greet(name) {\n  return \\`Hello, \\${name}!\\`;\n}\n\nconsole.log(greet(\"World\"));`)\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"code\">JavaScript Code</Label>\n      <Textarea\n        id=\"code\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Enter your code here...\"\n        className=\"font-mono text-sm min-h-[200px] bg-muted/30 w-[300px]\"\n        spellCheck={false}\n      />\n      <p className=\"text-sm text-muted-foreground\">\n        Lines: {code.split('\\n').length} | Characters: {code.length}\n      </p>\n    </div>\n  )\n}",
      "full": "import { useState, useRef, useEffect } from \"react\"\nimport { Send } from \"lucide-react\"\nimport { useForm, Controller } from \"react-hook-form\"\nimport { Textarea, Label, Button } from \"@helgadigitals/vera-ui\"\nfunction CodeEditorExample() {\n  const [code, setCode] = useState(`function greet(name) {\n  return \\`Hello, \\${name}!\\`;\n}\n\nconsole.log(greet(\"World\"));`)\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"code\">JavaScript Code</Label>\n      <Textarea\n        id=\"code\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Enter your code here...\"\n        className=\"font-mono text-sm min-h-[200px] bg-muted/30 w-[300px]\"\n        spellCheck={false}\n      />\n      <p className=\"text-sm text-muted-foreground\">\n        Lines: {code.split('\\n').length} | Characters: {code.length}\n      </p>\n    </div>\n  )\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#BasicMenuBarExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "BasicMenuBarExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function BasicMenuBarExample() {\n  const basicItems = [\n    {\n      trigger: \"Home\",\n      type: \"link\" as const,\n      href: \"/\",\n    },\n    {\n      trigger: \"Products\",\n      type: \"dropdown\" as const,\n      items: [\n        { title: \"All Products\", href: \"#\" },\n        { title: \"Featured\", href: \"#\" },\n        { title: \"New Arrivals\", href: \"#\" },\n      ],\n    },\n    {\n      trigger: \"About\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n    {\n      trigger: \"Contact\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={basicItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction BasicMenuBarExample() {\n  const basicItems = [\n    {\n      trigger: \"Home\",\n      type: \"link\" as const,\n      href: \"/\",\n    },\n    {\n      trigger: \"Products\",\n      type: \"dropdown\" as const,\n      items: [\n        { title: \"All Products\", href: \"#\" },\n        { title: \"Featured\", href: \"#\" },\n        { title: \"New Arrivals\", href: \"#\" },\n      ],\n    },\n    {\n      trigger: \"About\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n    {\n      trigger: \"Contact\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={basicItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#DropdownMenuBarExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "DropdownMenuBarExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function DropdownMenuBarExample() {\n  const dropdownItems = [\n    {\n      trigger: \"Services\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Web Development\",\n          href: \"#\",\n          description: \"Custom web applications and websites\",\n          icon: <Package className=\"h-4 w-10\" />,\n        },\n        {\n          title: \"Consulting\",\n          href: \"#\",\n          description: \"Technical consulting and strategy\",\n          icon: <Info className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Support\",\n          href: \"#\",\n          description: \"24/7 customer support\",\n          icon: <Mail className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Company\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"About Us\",\n          href: \"#\",\n          description: \"Learn about our mission and team\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Careers\",\n          href: \"#\",\n          description: \"Join our growing team\",\n          icon: <Star className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Contact\",\n          href: \"#\",\n          description: \"Get in touch with us\",\n          icon: <Phone className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10 w-auto\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={dropdownItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction DropdownMenuBarExample() {\n  const dropdownItems = [\n    {\n      trigger: \"Services\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Web Development\",\n          href: \"#\",\n          description: \"Custom web applications and websites\",\n          icon: <Package className=\"h-4 w-10\" />,\n        },\n        {\n          title: \"Consulting\",\n          href: \"#\",\n          description: \"Technical consulting and strategy\",\n          icon: <Info className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Support\",\n          href: \"#\",\n          description: \"24/7 customer support\",\n          icon: <Mail className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Company\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"About Us\",\n          href: \"#\",\n          description: \"Learn about our mission and team\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Careers\",\n          href: \"#\",\n          description: \"Join our growing team\",\n          icon: <Star className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Contact\",\n          href: \"#\",\n          description: \"Get in touch with us\",\n          icon: <Phone className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10 w-auto\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={dropdownItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#GridMenuBarExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "GridMenuBarExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function GridMenuBarExample() {\n  const gridItems = [\n    {\n      trigger: \"Resources\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Documentation\",\n          href: \"/docs\",\n          description: \"Complete API documentation and guides\",\n        },\n        {\n          title: \"Templates\",\n          href: \"#\",\n          description: \"Ready-to-use component templates\",\n        },\n        {\n          title: \"Examples\",\n          href: \"#\",\n          description: \"Live examples and code samples\",\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Join our developer community\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2 lg:grid-cols-2\",\n    },\n    {\n      trigger: \"Tools\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Design System\",\n          href: \"#\",\n          description: \"Complete design tokens and guidelines\",\n        },\n        {\n          title: \"Icon Library\",\n          href: \"#\",\n          description: \"Thousands of beautiful icons\",\n        },\n        {\n          title: \"Color Palette\",\n          href: \"#\",\n          description: \"Curated color combinations\",\n        },\n        {\n          title: \"Typography\",\n          href: \"#\",\n          description: \"Font combinations and styles\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={gridItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction GridMenuBarExample() {\n  const gridItems = [\n    {\n      trigger: \"Resources\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Documentation\",\n          href: \"/docs\",\n          description: \"Complete API documentation and guides\",\n        },\n        {\n          title: \"Templates\",\n          href: \"#\",\n          description: \"Ready-to-use component templates\",\n        },\n        {\n          title: \"Examples\",\n          href: \"#\",\n          description: \"Live examples and code samples\",\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Join our developer community\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2 lg:grid-cols-2\",\n    },\n    {\n      trigger: \"Tools\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Design System\",\n          href: \"#\",\n          description: \"Complete design tokens and guidelines\",\n        },\n        {\n          title: \"Icon Library\",\n          href: \"#\",\n          description: \"Thousands of beautiful icons\",\n        },\n        {\n          title: \"Color Palette\",\n          href: \"#\",\n          description: \"Curated color combinations\",\n        },\n        {\n          title: \"Typography\",\n          href: \"#\",\n          description: \"Font combinations and styles\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={gridItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#FeaturedMenuBarExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "FeaturedMenuBarExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function FeaturedMenuBarExample() {\n  const featuredItems = [\n    {\n      trigger: \"Solutions\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Enterprise Solutions\",\n        description:\n          \"Scalable solutions for large organizations with advanced security and support.\",\n        className: \"bg-gradient-to-br from-blue-500 to-purple-600 text-white\",\n      },\n      items: [\n        {\n          title: \"Startup Plan\",\n          href: \"#\",\n          description: \"Perfect for growing startups\",\n        },\n        {\n          title: \"Business Plan\",\n          href: \"#\",\n          description: \"Advanced features for businesses\",\n        },\n        {\n          title: \"Developer Tools\",\n          href: \"#\",\n          description: \"APIs and integrations for developers\",\n        },\n      ],\n    },\n    {\n      trigger: \"Products\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Premium Suite\",\n        description:\n          \"Our flagship product with all premium features and priority support.\",\n        className: \"bg-gradient-to-br from-orange-400 to-red-500 text-white\",\n      },\n      items: [\n        {\n          title: \"Basic Plan\",\n          href: \"#\",\n          description: \"Essential features for individuals\",\n        },\n        {\n          title: \"Pro Plan\",\n          href: \"#\",\n          description: \"Advanced features for professionals\",\n        },\n        {\n          title: \"Team Plan\",\n          href: \"#\",\n          description: \"Collaboration tools for teams\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={featuredItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction FeaturedMenuBarExample() {\n  const featuredItems = [\n    {\n      trigger: \"Solutions\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Enterprise Solutions\",\n        description:\n          \"Scalable solutions for large organizations with advanced security and support.\",\n        className: \"bg-gradient-to-br from-blue-500 to-purple-600 text-white\",\n      },\n      items: [\n        {\n          title: \"Startup Plan\",\n          href: \"#\",\n          description: \"Perfect for growing startups\",\n        },\n        {\n          title: \"Business Plan\",\n          href: \"#\",\n          description: \"Advanced features for businesses\",\n        },\n        {\n          title: \"Developer Tools\",\n          href: \"#\",\n          description: \"APIs and integrations for developers\",\n        },\n      ],\n    },\n    {\n      trigger: \"Products\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Premium Suite\",\n        description:\n          \"Our flagship product with all premium features and priority support.\",\n        className: \"bg-gradient-to-br from-orange-400 to-red-500 text-white\",\n      },\n      items: [\n        {\n          title: \"Basic Plan\",\n          href: \"#\",\n          description: \"Essential features for individuals\",\n        },\n        {\n          title: \"Pro Plan\",\n          href: \"#\",\n          description: \"Advanced features for professionals\",\n        },\n        {\n          title: \"Team Plan\",\n          href: \"#\",\n          description: \"Collaboration tools for teams\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={featuredItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#CompleteNavigationExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "CompleteNavigationExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function CompleteNavigationExample() {\n  const completeMenuItems = [\n    {\n      trigger: \"Home\",\n      type: \"link\" as const,\n      href: \"/docs\",\n    },\n    {\n      trigger: \"Products\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Featured Products\",\n        description:\n          \"Discover our most popular and highly-rated products this month.\",\n        className: \"bg-gradient-to-br from-green-400 to-blue-500 text-white\",\n      },\n      items: [\n        {\n          title: \"All Products\",\n          href: \"#\",\n          description: \"Browse our complete catalog\",\n        },\n        {\n          title: \"Categories\",\n          href: \"#\",\n          description: \"Shop by category\",\n        },\n        {\n          title: \"Sale Items\",\n          href: \"#\",\n          description: \"Special offers and discounts\",\n        },\n      ],\n    },\n    {\n      trigger: \"Resources\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Documentation\",\n          href: \"/docs\",\n          description: \"API docs and guides\",\n        },\n        {\n          title: \"Tutorials\",\n          href: \"#\",\n          description: \"Step-by-step tutorials\",\n        },\n        {\n          title: \"Examples\",\n          href: \"#\",\n          description: \"Code examples\",\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Developer community\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2\",\n    },\n    {\n      trigger: \"Company\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"About Us\",\n          href: \"#\",\n          description: \"Learn about our mission and team\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Careers\",\n          href: \"#\",\n          description: \"Join our growing team\",\n          icon: <Star className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Contact\",\n          href: \"#\",\n          description: \"Get in touch with us\",\n          icon: <FileText className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <header className=\"border-b bg-white dark:bg-gray-950\">\n        <div className=\"px-4 py-2\">\n          <div className=\"flex items-center justify-between mb-80 overflow-visible\">\n            <div className=\"flex items-center space-x-4 overflow-visible\">\n              <div className=\"h-8 w-8 rounded bg-gradient-to-br from-blue-500 to-purple-600\"></div>\n              <span className=\"text-xl font-bold\">Brand Name</span>\n            </div>\n            <MenuBar items={completeMenuItems} viewport={true} />\n            <div className=\"flex items-center space-x-4\">\n              <button \n                className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800\"\n                aria-label=\"Settings\"\n              >\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main className=\"p-6\">\n        <h1 className=\"text-2xl font-bold mb-4\">Welcome to Our Platform</h1>\n        <p className=\"text-muted-foreground\">\n          This is a complete navigation example with all menu types integrated\n          into a header layout.\n        </p>\n      </main>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction CompleteNavigationExample() {\n  const completeMenuItems = [\n    {\n      trigger: \"Home\",\n      type: \"link\" as const,\n      href: \"/docs\",\n    },\n    {\n      trigger: \"Products\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Featured Products\",\n        description:\n          \"Discover our most popular and highly-rated products this month.\",\n        className: \"bg-gradient-to-br from-green-400 to-blue-500 text-white\",\n      },\n      items: [\n        {\n          title: \"All Products\",\n          href: \"#\",\n          description: \"Browse our complete catalog\",\n        },\n        {\n          title: \"Categories\",\n          href: \"#\",\n          description: \"Shop by category\",\n        },\n        {\n          title: \"Sale Items\",\n          href: \"#\",\n          description: \"Special offers and discounts\",\n        },\n      ],\n    },\n    {\n      trigger: \"Resources\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Documentation\",\n          href: \"/docs\",\n          description: \"API docs and guides\",\n        },\n        {\n          title: \"Tutorials\",\n          href: \"#\",\n          description: \"Step-by-step tutorials\",\n        },\n        {\n          title: \"Examples\",\n          href: \"#\",\n          description: \"Code examples\",\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Developer community\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-2\",\n    },\n    {\n      trigger: \"Company\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"About Us\",\n          href: \"#\",\n          description: \"Learn about our mission and team\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Careers\",\n          href: \"#\",\n          description: \"Join our growing team\",\n          icon: <Star className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Contact\",\n          href: \"#\",\n          description: \"Get in touch with us\",\n          icon: <FileText className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <header className=\"border-b bg-white dark:bg-gray-950\">\n        <div className=\"px-4 py-2\">\n          <div className=\"flex items-center justify-between mb-80 overflow-visible\">\n            <div className=\"flex items-center space-x-4 overflow-visible\">\n              <div className=\"h-8 w-8 rounded bg-gradient-to-br from-blue-500 to-purple-600\"></div>\n              <span className=\"text-xl font-bold\">Brand Name</span>\n            </div>\n            <MenuBar items={completeMenuItems} viewport={true} />\n            <div className=\"flex items-center space-x-4\">\n              <button \n                className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800\"\n                aria-label=\"Settings\"\n              >\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main className=\"p-6\">\n        <h1 className=\"text-2xl font-bold mb-4\">Welcome to Our Platform</h1>\n        <p className=\"text-muted-foreground\">\n          This is a complete navigation example with all menu types integrated\n          into a header layout.\n        </p>\n      </main>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#MegaMenuExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "MegaMenuExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function MegaMenuExample() {\n  const megaMenuItems = [\n    {\n      trigger: \"Design\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"UI Components\",\n          href: \"#\",\n          description: \"Pre-built interface components\",\n        },\n        {\n          title: \"Design Tokens\",\n          href: \"#\",\n          description: \"Colors, typography, spacing\",\n        },\n        {\n          title: \"Icons\",\n          href: \"#\",\n          description: \"Complete icon library\",\n        },\n        {\n          title: \"Templates\",\n          href: \"#\",\n          description: \"Page and section templates\",\n        },\n        {\n          title: \"Patterns\",\n          href: \"#\",\n          description: \"Common design patterns\",\n        },\n        {\n          title: \"Guidelines\",\n          href: \"#\",\n          description: \"Design principles and best practices\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-3 lg:grid-cols-3\",\n    },\n    {\n      trigger: \"Development\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Getting Started\",\n          href: \"#\",\n          description: \"Quick setup and installation\",\n        },\n        {\n          title: \"API Reference\",\n          href: \"#\",\n          description: \"Complete API documentation\",\n        },\n        {\n          title: \"React Components\",\n          href: \"#\",\n          description: \"React component library\",\n        },\n        {\n          title: \"Vue Components\",\n          href: \"#\",\n          description: \"Vue.js component library\",\n        },\n        {\n          title: \"CSS Framework\",\n          href: \"#\",\n          description: \"Utility-first CSS framework\",\n        },\n        {\n          title: \"Plugins\",\n          href: \"#\",\n          description: \"Extensions and integrations\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-3\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={megaMenuItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction MegaMenuExample() {\n  const megaMenuItems = [\n    {\n      trigger: \"Design\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"UI Components\",\n          href: \"#\",\n          description: \"Pre-built interface components\",\n        },\n        {\n          title: \"Design Tokens\",\n          href: \"#\",\n          description: \"Colors, typography, spacing\",\n        },\n        {\n          title: \"Icons\",\n          href: \"#\",\n          description: \"Complete icon library\",\n        },\n        {\n          title: \"Templates\",\n          href: \"#\",\n          description: \"Page and section templates\",\n        },\n        {\n          title: \"Patterns\",\n          href: \"#\",\n          description: \"Common design patterns\",\n        },\n        {\n          title: \"Guidelines\",\n          href: \"#\",\n          description: \"Design principles and best practices\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-3 lg:grid-cols-3\",\n    },\n    {\n      trigger: \"Development\",\n      type: \"grid\" as const,\n      items: [\n        {\n          title: \"Getting Started\",\n          href: \"#\",\n          description: \"Quick setup and installation\",\n        },\n        {\n          title: \"API Reference\",\n          href: \"#\",\n          description: \"Complete API documentation\",\n        },\n        {\n          title: \"React Components\",\n          href: \"#\",\n          description: \"React component library\",\n        },\n        {\n          title: \"Vue Components\",\n          href: \"#\",\n          description: \"Vue.js component library\",\n        },\n        {\n          title: \"CSS Framework\",\n          href: \"#\",\n          description: \"Utility-first CSS framework\",\n        },\n        {\n          title: \"Plugins\",\n          href: \"#\",\n          description: \"Extensions and integrations\",\n        },\n      ],\n      gridClassName: \"md:grid-cols-3\",\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={megaMenuItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#IconMenuExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "IconMenuExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function IconMenuExample() {\n  const iconMenuItems = [\n    {\n      trigger: \"Media\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Photos\",\n          href: \"#\",\n          description: \"Image gallery and management\",\n          icon: <Camera className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Videos\",\n          href: \"#\",\n          description: \"Video content and streaming\",\n          icon: <Video className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Audio\",\n          href: \"#\",\n          description: \"Music and audio files\",\n          icon: <Headphones className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Graphics\",\n          href: \"#\",\n          description: \"Design assets and illustrations\",\n          icon: <Palette className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Learning\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Courses\",\n          href: \"#\",\n          description: \"Online courses and tutorials\",\n          icon: <BookOpen className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Workshops\",\n          href: \"#\",\n          description: \"Interactive workshops\",\n          icon: <Lightbulb className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Webinars\",\n          href: \"#\",\n          description: \"Live and recorded sessions\",\n          icon: <Globe className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Discussion forums\",\n          icon: <MessageCircle className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={iconMenuItems} />\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction IconMenuExample() {\n  const iconMenuItems = [\n    {\n      trigger: \"Media\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Photos\",\n          href: \"#\",\n          description: \"Image gallery and management\",\n          icon: <Camera className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Videos\",\n          href: \"#\",\n          description: \"Video content and streaming\",\n          icon: <Video className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Audio\",\n          href: \"#\",\n          description: \"Music and audio files\",\n          icon: <Headphones className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Graphics\",\n          href: \"#\",\n          description: \"Design assets and illustrations\",\n          icon: <Palette className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Learning\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Courses\",\n          href: \"#\",\n          description: \"Online courses and tutorials\",\n          icon: <BookOpen className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Workshops\",\n          href: \"#\",\n          description: \"Interactive workshops\",\n          icon: <Lightbulb className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Webinars\",\n          href: \"#\",\n          description: \"Live and recorded sessions\",\n          icon: <Globe className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Community\",\n          href: \"#\",\n          description: \"Discussion forums\",\n          icon: <MessageCircle className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"flex justify-center mb-80 overflow-visible\">\n        <MenuBar items={iconMenuItems} />\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/menubar-examples.tsx#ResponsiveMenuBarExample": {
    "path": "components/navigation-examples/menubar-examples.tsx",
    "functionName": "ResponsiveMenuBarExample",
    "extractedCode": {
      "imports": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";",
      "function": "function ResponsiveMenuBarExample() {\n  const responsiveItems = [\n    {\n      trigger: \"Dashboard\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n    {\n      trigger: \"Quick Actions\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Create Project\",\n          href: \"#\",\n          description: \"Start a new project\",\n          icon: <Zap className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Upload Files\",\n          href: \"#\",\n          description: \"Upload media files\",\n          icon: <Image className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Invite Team\",\n          href: \"#\",\n          description: \"Add team members\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Workspace\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Premium Workspace\",\n        description: \"Unlock advanced collaboration features and unlimited storage.\",\n        className: \"bg-gradient-to-br from-purple-500 to-pink-600 text-white\",\n      },\n      items: [\n        {\n          title: \"Projects\",\n          href: \"#\",\n          description: \"Manage your projects\",\n        },\n        {\n          title: \"Team\",\n          href: \"#\",\n          description: \"Collaborate with team members\",\n        },\n        {\n          title: \"Settings\",\n          href: \"#\",\n          description: \"Configure workspace settings\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 p-4\">\n        <div className=\"flex items-center justify-between mb-4 overflow-visible\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Responsive Navigation\n          </h3>\n          <span className=\"text-xs text-muted-foreground\">\n            Try resizing your browser\n          </span>\n        </div>\n        <div className=\"flex justify-center\">\n          <MenuBar items={responsiveItems} viewport={true} />\n        </div>\n      </div>\n    </div>\n  );\n}",
      "full": "import { MenuBar } from \"@helgadigitals/vera-ui\";\nimport {\n  Users,\n  Settings,\n  FileText,\n  Package,\n  Info,\n  Mail,\n  Image,\n  Video,\n  Star,\n  Zap,\n  BookOpen,\n  Lightbulb,\n  MessageCircle,\n  Palette,\n  Camera,\n  Headphones,\n  Globe,\n  Phone,\n} from \"lucide-react\";\nfunction ResponsiveMenuBarExample() {\n  const responsiveItems = [\n    {\n      trigger: \"Dashboard\",\n      type: \"link\" as const,\n      href: \"#\",\n    },\n    {\n      trigger: \"Quick Actions\",\n      type: \"dropdown\" as const,\n      items: [\n        {\n          title: \"Create Project\",\n          href: \"#\",\n          description: \"Start a new project\",\n          icon: <Zap className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Upload Files\",\n          href: \"#\",\n          description: \"Upload media files\",\n          icon: <Image className=\"h-4 w-4\" />,\n        },\n        {\n          title: \"Invite Team\",\n          href: \"#\",\n          description: \"Add team members\",\n          icon: <Users className=\"h-4 w-4\" />,\n        },\n      ],\n    },\n    {\n      trigger: \"Workspace\",\n      type: \"featured\" as const,\n      featured: {\n        href: \"#\",\n        title: \"Premium Workspace\",\n        description: \"Unlock advanced collaboration features and unlimited storage.\",\n        className: \"bg-gradient-to-br from-purple-500 to-pink-600 text-white\",\n      },\n      items: [\n        {\n          title: \"Projects\",\n          href: \"#\",\n          description: \"Manage your projects\",\n        },\n        {\n          title: \"Team\",\n          href: \"#\",\n          description: \"Collaborate with team members\",\n        },\n        {\n          title: \"Settings\",\n          href: \"#\",\n          description: \"Configure workspace settings\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative overflow-visible z-10\">\n      <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 p-4\">\n        <div className=\"flex items-center justify-between mb-4 overflow-visible\">\n          <h3 className=\"text-sm font-medium text-muted-foreground\">\n            Responsive Navigation\n          </h3>\n          <span className=\"text-xs text-muted-foreground\">\n            Try resizing your browser\n          </span>\n        </div>\n        <div className=\"flex justify-center\">\n          <MenuBar items={responsiveItems} viewport={true} />\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#BasicSidebarExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "BasicSidebarExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function BasicSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Users\", path: \"/users\", icon: Users, badge: 12 },\n    { title: \"Analytics\", path: \"/analytics\", icon: BarChart },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar items={items} heading=\"My App\" label=\"Navigation\" />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Welcome to Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Your main application content goes here.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction BasicSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Users\", path: \"/users\", icon: Users, badge: 12 },\n    { title: \"Analytics\", path: \"/analytics\", icon: BarChart },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar items={items} heading=\"My App\" label=\"Navigation\" />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Welcome to Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Your main application content goes here.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#GroupedSidebarExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "GroupedSidebarExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function GroupedSidebarExample() {\n  const items = [\n    {\n      key: \"content\",\n      label: \"Content\",\n      icon: FileText,\n      items: [\n        { title: \"Posts\", path: \"/posts\", icon: FileText },\n        { title: \"Pages\", path: \"/pages\", icon: FileText, badge: 5 },\n      ],\n    },\n    {\n      key: \"admin\",\n      label: \"Administration\",\n      items: [\n        { title: \"Users\", path: \"/users\", icon: Users, badge: 8 },\n        { title: \"Settings\", path: \"/settings\", icon: Settings },\n      ],\n    },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Admin Panel\"\n          label=\"Main Menu\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Admin Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Grouped navigation for better organization.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction GroupedSidebarExample() {\n  const items = [\n    {\n      key: \"content\",\n      label: \"Content\",\n      icon: FileText,\n      items: [\n        { title: \"Posts\", path: \"/posts\", icon: FileText },\n        { title: \"Pages\", path: \"/pages\", icon: FileText, badge: 5 },\n      ],\n    },\n    {\n      key: \"admin\",\n      label: \"Administration\",\n      items: [\n        { title: \"Users\", path: \"/users\", icon: Users, badge: 8 },\n        { title: \"Settings\", path: \"/settings\", icon: Settings },\n      ],\n    },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Admin Panel\"\n          label=\"Main Menu\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Admin Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Grouped navigation for better organization.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#MixedSidebarExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "MixedSidebarExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function MixedSidebarExample() {\n  const mixedItems = [\n    // Top-level items\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Quick Actions\", path: \"/quick\", icon: Zap, badge: \"New\" },\n\n    // Grouped sections\n    {\n      key: \"content\",\n      label: \"Content\",\n      icon: FileText,\n      items: [\n        { title: \"Posts\", path: \"/posts\", icon: FileText },\n        { title: \"Pages\", path: \"/pages\", icon: FileText },\n      ],\n    },\n    {\n      key: \"admin\",\n      label: \"Administration\",\n      items: [\n        { title: \"Users\", path: \"/users\", icon: Users, badge: 8 },\n        { title: \"Settings\", path: \"/settings\", icon: Settings },\n      ],\n    },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={mixedItems}\n          heading=\"My Application\"\n          label=\"Navigation\"\n          isFooterVisible={true}\n          displayName=\"John Doe\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Application Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Mixed navigation with both simple and grouped items.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction MixedSidebarExample() {\n  const mixedItems = [\n    // Top-level items\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Quick Actions\", path: \"/quick\", icon: Zap, badge: \"New\" },\n\n    // Grouped sections\n    {\n      key: \"content\",\n      label: \"Content\",\n      icon: FileText,\n      items: [\n        { title: \"Posts\", path: \"/posts\", icon: FileText },\n        { title: \"Pages\", path: \"/pages\", icon: FileText },\n      ],\n    },\n    {\n      key: \"admin\",\n      label: \"Administration\",\n      items: [\n        { title: \"Users\", path: \"/users\", icon: Users, badge: 8 },\n        { title: \"Settings\", path: \"/settings\", icon: Settings },\n      ],\n    },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={mixedItems}\n          heading=\"My Application\"\n          label=\"Navigation\"\n          isFooterVisible={true}\n          displayName=\"John Doe\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Application Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Mixed navigation with both simple and grouped items.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#CustomStyledSidebarExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "CustomStyledSidebarExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function CustomStyledSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Users\", path: \"/users\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  const customStyles = {\n    bgColor: \"bg-slate-900\",\n    textColor: \"text-slate-100\",\n    itemTextSize: \"text-base\",\n    headingTextSize: \"text-sm\",\n  };\n\n  const customClasses = {\n    header: \"bg-slate-800 border-b border-slate-700\",\n    heading: \"text-slate-200 font-bold\",\n    menuButton: \"hover:bg-slate-800/50\",\n    menuButtonActive: \"bg-slate-700 text-white\",\n  };\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Custom Theme\"\n          stylesConfig={customStyles}\n          classNames={customClasses}\n        />\n        <main className=\"flex-1 overflow-auto bg-slate-50 dark:bg-slate-900\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Custom Styled Sidebar</h1>\n            <p className=\"text-muted-foreground\">\n              Customized colors and styling.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction CustomStyledSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Users\", path: \"/users\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  const customStyles = {\n    bgColor: \"bg-slate-900\",\n    textColor: \"text-slate-100\",\n    itemTextSize: \"text-base\",\n    headingTextSize: \"text-sm\",\n  };\n\n  const customClasses = {\n    header: \"bg-slate-800 border-b border-slate-700\",\n    heading: \"text-slate-200 font-bold\",\n    menuButton: \"hover:bg-slate-800/50\",\n    menuButtonActive: \"bg-slate-700 text-white\",\n  };\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Custom Theme\"\n          stylesConfig={customStyles}\n          classNames={customClasses}\n        />\n        <main className=\"flex-1 overflow-auto bg-slate-50 dark:bg-slate-900\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Custom Styled Sidebar</h1>\n            <p className=\"text-muted-foreground\">\n              Customized colors and styling.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#WithFooterExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "WithFooterExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function WithFooterExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Projects\", path: \"/projects\", icon: FolderOpen },\n    { title: \"Team\", path: \"/team\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Project Manager\"\n          isFooterVisible={true}\n          displayName=\"Jane Smith\"\n          label=\"Main Navigation\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Project Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Sidebar with user footer information.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction WithFooterExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Projects\", path: \"/projects\", icon: FolderOpen },\n    { title: \"Team\", path: \"/team\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"Project Manager\"\n          isFooterVisible={true}\n          displayName=\"Jane Smith\"\n          label=\"Main Navigation\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Project Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Sidebar with user footer information.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/navigation-examples/reusable-sidebar-examples.tsx#CollapsibleSidebarExample": {
    "path": "components/navigation-examples/reusable-sidebar-examples.tsx",
    "functionName": "CollapsibleSidebarExample",
    "extractedCode": {
      "imports": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";",
      "function": "function CollapsibleSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Analytics\", path: \"/analytics\", icon: BarChart, badge: 3 },\n    { title: \"Users\", path: \"/users\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"App Name\"\n          label=\"Menu\"\n          collapsibleMode=\"icon\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Click the toggle button to collapse the sidebar to icon-only mode.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}",
      "full": "import { ReusableSidebar, SidebarProviders } from \"@helgadigitals/vera-ui\";\nimport {\n  Home,\n  Users,\n  Settings,\n  BarChart,\n  FileText,\n  Zap,\n  FolderOpen,\n} from \"lucide-react\";\nfunction CollapsibleSidebarExample() {\n  const items = [\n    { title: \"Dashboard\", path: \"/\", icon: Home },\n    { title: \"Analytics\", path: \"/analytics\", icon: BarChart, badge: 3 },\n    { title: \"Users\", path: \"/users\", icon: Users },\n    { title: \"Settings\", path: \"/settings\", icon: Settings },\n  ];\n\n  return (\n    <SidebarProviders>\n      <div className=\"flex h-[500px] border rounded-lg overflow-hidden\">\n        <ReusableSidebar\n          items={items}\n          heading=\"App Name\"\n          label=\"Menu\"\n          collapsibleMode=\"icon\"\n        />\n        <main className=\"flex-1 overflow-auto bg-background\">\n          <div className=\"p-6\">\n            <h1 className=\"text-2xl font-bold mb-4\">Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Click the toggle button to collapse the sidebar to icon-only mode.\n            </p>\n          </div>\n        </main>\n      </div>\n    </SidebarProviders>\n  );\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#RegistrationForm": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "RegistrationForm",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function RegistrationForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const form = useForm<z.infer<typeof registrationSchema>>({\n    resolver: zodResolver(registrationSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      terms: false,\n      newsletter: false,\n    },\n  })\n\n  async function onSubmit(values: z.infer<typeof registrationSchema>) {\n    setIsSubmitting(true)\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      console.log(\"Registration submitted:\", values)\n      form.reset()\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 max-w-md\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"firstName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>First Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"John\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"lastName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Last Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Doe\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input type=\"email\" placeholder=\"john@example.com\" {...field} />\n              </FormControl>\n              <FormDescription>\n                We&apos;ll never share your email with anyone else.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n              </FormControl>\n              <FormDescription>\n                Must be at least 8 characters with uppercase, lowercase, and number.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"terms\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  I accept the terms and conditions\n                </FormLabel>\n                <FormDescription>\n                  You agree to our Terms of Service and Privacy Policy.\n                </FormDescription>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"newsletter\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  Subscribe to newsletter\n                </FormLabel>\n                <FormDescription>\n                  Receive updates about new features and releases.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n          {isSubmitting ? \"Creating Account...\" : \"Create Account\"}\n        </Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction RegistrationForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const form = useForm<z.infer<typeof registrationSchema>>({\n    resolver: zodResolver(registrationSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      terms: false,\n      newsletter: false,\n    },\n  })\n\n  async function onSubmit(values: z.infer<typeof registrationSchema>) {\n    setIsSubmitting(true)\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      console.log(\"Registration submitted:\", values)\n      form.reset()\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 max-w-md\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"firstName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>First Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"John\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"lastName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Last Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Doe\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input type=\"email\" placeholder=\"john@example.com\" {...field} />\n              </FormControl>\n              <FormDescription>\n                We&apos;ll never share your email with anyone else.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n              </FormControl>\n              <FormDescription>\n                Must be at least 8 characters with uppercase, lowercase, and number.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input type=\"password\" placeholder=\"••••••••\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"terms\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  I accept the terms and conditions\n                </FormLabel>\n                <FormDescription>\n                  You agree to our Terms of Service and Privacy Policy.\n                </FormDescription>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"newsletter\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  Subscribe to newsletter\n                </FormLabel>\n                <FormDescription>\n                  Receive updates about new features and releases.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n          {isSubmitting ? \"Creating Account...\" : \"Create Account\"}\n        </Button>\n      </form>\n    </Form>\n  )\n}"
    }
  },
  "components/form-components-examples/form-examples.tsx#FormExample": {
    "path": "components/form-components-examples/form-examples.tsx",
    "functionName": "FormExample",
    "extractedCode": {
      "imports": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"",
      "function": "function FormExample() {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  })\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your username\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}",
      "full": "import React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormItem,\n  FormField,\n  FormLabel,\n  FormMessage,\n  Checkbox,\n  Select,\n  Input,\n  Button,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea\n} from \"@helgadigitals/vera-ui\"\nfunction FormExample() {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  })\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values)\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your username\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  )\n}"
    }
  }
}